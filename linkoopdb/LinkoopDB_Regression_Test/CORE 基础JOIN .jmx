<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CORE: 基础JOIN " enabled="true"/>
    <hashTree>
      <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="219 F041-01 Inner join (but not necessarily the INNER keyword) " enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 drop table ${Test_Join_11} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${Test_Join_11} if exists cascade;
drop table ${Test_Join_12} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 CREATE TABLE ${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE ${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 INSERT INTO ${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30), (7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30), (7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30), (7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">INSERT INTO ${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30),
(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30),
(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30),
(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 CREATE TABLE ${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE ${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  </stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 INSERT INTO ${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;), (20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;), (30,&apos;SALES&apos;,&apos;CHICAGO&apos;), (40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">INSERT INTO ${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;),
(20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;),
(30,&apos;SALES&apos;,&apos;CHICAGO&apos;),
(40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-001" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="296332287">WARD	SALES</stringProp>
              <stringProp name="-1978466067">ALLEN	SALES</stringProp>
              <stringProp name="-706572098">MARTIN	SALES</stringProp>
              <stringProp name="1396041364">BLAKE	SALES</stringProp>
              <stringProp name="1746250989">TURNER	SALES</stringProp>
              <stringProp name="-474413913">JAMES	SALES</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-002" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="972399093">MILLER	ACCOUNTING</stringProp>
              <stringProp name="1746250989">TURNER	SALES</stringProp>
              <stringProp name="-706572098">MARTIN	SALES</stringProp>
              <stringProp name="296332287">WARD	SALES</stringProp>
              <stringProp name="-1978466067">ALLEN	SALES</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-003" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="164596769">SMITH	RESEARCH</stringProp>
              <stringProp name="-1978466067">ALLEN	SALES</stringProp>
              <stringProp name="296332287">WARD	SALES</stringProp>
              <stringProp name="-498917267">JONES	RESEARCH</stringProp>
              <stringProp name="-706572098">MARTIN	SALES</stringProp>
              <stringProp name="1396041364">BLAKE	SALES</stringProp>
              <stringProp name="-541667955">CLARK	ACCOUNTING</stringProp>
              <stringProp name="-1295388825">KING	ACCOUNTING</stringProp>
              <stringProp name="1746250989">TURNER	SALES</stringProp>
              <stringProp name="-474413913">JAMES	SALES</stringProp>
              <stringProp name="2089596489">FORD	RESEARCH</stringProp>
              <stringProp name="972399093">MILLER	ACCOUNTING</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create view ${V1} as select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V1} as select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-004" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V1};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="54">6</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-005" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V1} where ename = &apos;WARD&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create view ${V2} as select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V2} as select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-006" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V2};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="53">5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-007" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V2} where ename = &apos;WARD&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-008" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V3};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1569">12</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create view ${V3} as select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V3} as select a.ename,b.dname from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-009" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V3} where ename = &apos;WARD&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-010" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1601">23</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 drop table ${Test_Join_11} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${Test_Join_11} if exists cascade;
drop table ${Test_Join_12} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="219 F041-01 different schema" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 drop table ${s1}.${Test_Join_11} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${s1}.${Test_Join_11} if exists cascade;
drop table ${s2}.${Test_Join_12} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create schema ${s1}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create schema ${s2}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 CREATE TABLE ${s1}.${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE TABLE ${s1}.${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 INSERT INTO ${s1}.${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30), (7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30), (7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30), (7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO ${s1}.${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30),
(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30),
(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30),
(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 CREATE TABLE ${s2}.${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20)); " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE TABLE ${s2}.${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 INSERT INTO ${s2}.${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;), (20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;), (30,&apos;SALES&apos;,&apos;CHICAGO&apos;), (40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO ${s2}.${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;),
(20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;),
(30,&apos;SALES&apos;,&apos;CHICAGO&apos;),
(40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-001 " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1978466067">ALLEN	SALES</stringProp>
                <stringProp name="296332287">WARD	SALES</stringProp>
                <stringProp name="-706572098">MARTIN	SALES</stringProp>
                <stringProp name="1396041364">BLAKE	SALES</stringProp>
                <stringProp name="1746250989">TURNER	SALES</stringProp>
                <stringProp name="-474413913">JAMES	SALES</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1978466067">ALLEN	SALES</stringProp>
                <stringProp name="296332287">WARD	SALES</stringProp>
                <stringProp name="-706572098">MARTIN	SALES</stringProp>
                <stringProp name="1746250989">TURNER	SALES</stringProp>
                <stringProp name="972399093">MILLER	ACCOUNTING</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="164596769">SMITH	RESEARCH</stringProp>
                <stringProp name="-1978466067">ALLEN	SALES</stringProp>
                <stringProp name="296332287">WARD	SALES</stringProp>
                <stringProp name="-498917267">JONES	RESEARCH</stringProp>
                <stringProp name="-706572098">MARTIN	SALES</stringProp>
                <stringProp name="1396041364">BLAKE	SALES</stringProp>
                <stringProp name="-541667955">CLARK	ACCOUNTING</stringProp>
                <stringProp name="-1295388825">KING	ACCOUNTING</stringProp>
                <stringProp name="1746250989">TURNER	SALES</stringProp>
                <stringProp name="-474413913">JAMES	SALES</stringProp>
                <stringProp name="2089596489">FORD	RESEARCH</stringProp>
                <stringProp name="972399093">MILLER	ACCOUNTING</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create view ${V1} as select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V1} as select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="54">6</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V1} where ename = &apos;WARD&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create view ${V2} as select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V2} as select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="53">5</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-007" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V2} where ename = &apos;WARD&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create view ${V3} as select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V3} as select a.ename,b.dname from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-008" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V3};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-009" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V3} where ename = &apos;WARD&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 TC-010 select count(*) from ${Test_Join_1};" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1601">23</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="219 F041-01 drop table ${s1}.${Test_Join_11} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${s1}.${Test_Join_11} if exists cascade;
drop table ${s2}.${Test_Join_12} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="220 F041-02 INNER keyword" enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 drop table ${Test_Join_11} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${Test_Join_11} if exists cascade;
drop table ${Test_Join_12} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 CREATE TABLE ${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE ${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 INSERT INTO ${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30), (7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30), (7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30), (7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">INSERT INTO ${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30),
(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30),
(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30),
(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 CREATE TABLE ${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE ${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  </stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 INSERT INTO ${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;), (20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;), (30,&apos;SALES&apos;,&apos;CHICAGO&apos;), (40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">INSERT INTO ${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;),
(20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;),
(30,&apos;SALES&apos;,&apos;CHICAGO&apos;),
(40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-001 " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1978466067">ALLEN	SALES</stringProp>
              <stringProp name="296332287">WARD	SALES</stringProp>
              <stringProp name="-706572098">MARTIN	SALES</stringProp>
              <stringProp name="1396041364">BLAKE	SALES</stringProp>
              <stringProp name="1746250989">TURNER	SALES</stringProp>
              <stringProp name="-474413913">JAMES	SALES</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-002 " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1978466067">ALLEN	SALES</stringProp>
              <stringProp name="296332287">WARD	SALES</stringProp>
              <stringProp name="-706572098">MARTIN	SALES</stringProp>
              <stringProp name="1746250989">TURNER	SALES</stringProp>
              <stringProp name="972399093">MILLER	ACCOUNTING</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-003" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="164596769">SMITH	RESEARCH</stringProp>
              <stringProp name="-1978466067">ALLEN	SALES</stringProp>
              <stringProp name="296332287">WARD	SALES</stringProp>
              <stringProp name="-498917267">JONES	RESEARCH</stringProp>
              <stringProp name="-706572098">MARTIN	SALES</stringProp>
              <stringProp name="1396041364">BLAKE	SALES</stringProp>
              <stringProp name="-541667955">CLARK	ACCOUNTING</stringProp>
              <stringProp name="-1295388825">KING	ACCOUNTING</stringProp>
              <stringProp name="1746250989">TURNER	SALES</stringProp>
              <stringProp name="-474413913">JAMES	SALES</stringProp>
              <stringProp name="2089596489">FORD	RESEARCH</stringProp>
              <stringProp name="972399093">MILLER	ACCOUNTING</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create view ${V1} as select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V1} as select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-004" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V1};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="54">6</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-005" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V1} where ename = &apos;WARD&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create view ${V2} as select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V2} as select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-006 " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V2};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="53">5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-007 " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V2} where ename = &apos;WARD&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create view ${V3} as select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V3} as select a.ename,b.dname from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-008" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V3};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1569">12</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-009" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V3} where ename = &apos;WARD&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${Test_Join_11} a inner join ${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-010" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1601">23</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 drop table ${Test_Join_11} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${Test_Join_11} if exists cascade;
drop table ${Test_Join_12} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="220 different schema" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 drop table ${s1}.${Test_Join_11} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${s1}.${Test_Join_11} if exists cascade;
drop table ${s2}.${Test_Join_12} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create schema ${s1};" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create schema ${s2}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 CREATE TABLE ${s1}.${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE TABLE ${s1}.${Test_Join_11} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 INSERT INTO ${s1}.${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30), (7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30), (7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30), (7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO ${s1}.${Test_Join_11} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30),
(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30),
(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30),
(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 CREATE TABLE ${s2}.${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE TABLE ${s2}.${Test_Join_12} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 INSERT INTO ${s2}.${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;), (20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;), (30,&apos;SALES&apos;,&apos;CHICAGO&apos;), (40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO ${s2}.${Test_Join_12} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;),
(20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;),
(30,&apos;SALES&apos;,&apos;CHICAGO&apos;),
(40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="54">6</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="53">5</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create view ${V1} as select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V1} as select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="54">6</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V1} where ename = &apos;WARD&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create view ${V2} as select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V2} as select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="53">5</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-007" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V2} where ename = &apos;WARD&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create view ${V3} as select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V3} as select a.ename,b.dname from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-008" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V3};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-009" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V3} where ename = &apos;WARD&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${Test_Join_1} (c1 varchar(100),c2 varchar(100));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.deptno=30 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno where a.sal between 1000 and 2000 order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select a.ename c1,b.dname c2 from ${s1}.${Test_Join_11} a inner join ${s2}.${Test_Join_12} b on a.deptno=b.deptno order by a.empno;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 TC-010" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1601">23</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="220 F041-02 drop table ${s1}.${Test_Join_11} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop table ${s1}.${Test_Join_11} if exists cascade;
drop table ${s2}.${Test_Join_12} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="221 F041-03 LEFT OUTER JOIN " enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 drop table ${Test_Join_2} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop view ${V4} if exists cascade;
drop table ${Test_Join_2} if exists cascade;
drop table ${Test_Join_3} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create table ${Test_Join_2}(id int,name varchar(100));" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_2}(id int,name varchar(100));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 insert into ${Test_Join_2} values(1,&apos;dave&apos;), (2,&apos;bl&apos;), (3,&apos;big bird&apos;), (4,&apos;exc&apos;), (9,&apos;怀宁&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_2} values(1,&apos;dave&apos;),
(2,&apos;bl&apos;),
(3,&apos;big bird&apos;),
(4,&apos;exc&apos;),
(9,&apos;怀宁&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create table ${Test_Join_3} (id int,name varchar(100));" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_3} (id int,name varchar(100));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 insert into ${Test_Join_3} values(1,&apos;dave&apos;), (1,&apos;bl&apos;), (2,&apos;bl&apos;), (2,&apos;dave&apos;), (3,&apos;dba&apos;), (4,&apos;sf-express&apos;), (5,&apos;dmm&apos;), (8,&apos;安庆&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_3} values(1,&apos;dave&apos;),
(1,&apos;bl&apos;),
(2,&apos;bl&apos;),
(2,&apos;dave&apos;),
(3,&apos;dba&apos;),
(4,&apos;sf-express&apos;),
(5,&apos;dmm&apos;),
(8,&apos;安庆&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-001 " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2);

--RIGHT JOIN</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-002" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id);

--RIGHT JOIN</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="55">7</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V1} as select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V1} as select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1044393255">object name already exists: ID in statement [create view ${V1} as select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V2} as select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V2} as select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="989895278">object name already exists: ID in statement [create view ${V2} as select * from ${Test_Join_3} right join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-003" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2);

-- LEFT JOIN</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="50">2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-004" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id);

-- LEFT JOIN</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="56">8</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V3} as select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V3} as select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1494286020">object name already exists: ID in statement [create view ${V3} as select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id where ${Test_Join_2}.id &gt; 2]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V4} as select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V4} as select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1566403515">object name already exists: ID in statement [create view ${V4} as select * from ${Test_Join_3} left join ${Test_Join_2} on ${Test_Join_2}.id = ${Test_Join_3}.id]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 drop table ${Test_Join_2} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop view ${V4} if exists cascade;
drop table ${Test_Join_2} if exists cascade;
drop table ${Test_Join_3} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="221 F041-03 different schema" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 drop table ${s1}.${Test_Join_2} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop view ${V4} if exists cascade;
drop table ${s1}.${Test_Join_2} if exists cascade;
drop table ${s2}.${Test_Join_3} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create schema ${s1}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create schema ${s2}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create table ${s1}.${Test_Join_2}(id int,name varchar(100));" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s1}.${Test_Join_2}(id int,name varchar(100));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 insert into ${s1}.${Test_Join_2} values(1,&apos;dave&apos;), (2,&apos;bl&apos;), (3,&apos;big bird&apos;), (4,&apos;exc&apos;), (9,&apos;怀宁&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s1}.${Test_Join_2} values(1,&apos;dave&apos;),
(2,&apos;bl&apos;),
(3,&apos;big bird&apos;),
(4,&apos;exc&apos;),
(9,&apos;怀宁&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create table ${s2}.${Test_Join_3} (id int,name varchar(100));" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s2}.${Test_Join_3} (id int,name varchar(100));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 insert into ${s2}.${Test_Join_3} values(1,&apos;dave&apos;), (1,&apos;bl&apos;), (2,&apos;bl&apos;), (2,&apos;dave&apos;), (3,&apos;dba&apos;), (4,&apos;sf-express&apos;), (5,&apos;dmm&apos;), (8,&apos;安庆&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s2}.${Test_Join_3} values(1,&apos;dave&apos;),
(1,&apos;bl&apos;),
(2,&apos;bl&apos;),
(2,&apos;dave&apos;),
(3,&apos;dba&apos;),
(4,&apos;sf-express&apos;),
(5,&apos;dmm&apos;),
(8,&apos;安庆&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-001 " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2);

--RIGHT JOIN</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51">3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id);

--RIGHT JOIN</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="55">7</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V1} as select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V1} as select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-882960391">object name already exists: ID in statement [create view ${V1} as select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2]</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V2} as select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V2} as select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1333419656">object name already exists: ID in statement [create view ${V2} as select * from ${s2}.${Test_Join_3} right join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id]</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2);


-- LEFT JOIN</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="50">2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id);

-- LEFT JOIN</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="56">8</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V3} as select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V3} as select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="887524598">object name already exists: ID in statement [create view ${V3} as select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id where ${s1}.${Test_Join_2}.id &gt; 2]</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 create view ${V4} as select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V4} as select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1597226073">object name already exists: ID in statement [create view ${V4} as select * from ${s2}.${Test_Join_3} left join ${s1}.${Test_Join_2} on ${s1}.${Test_Join_2}.id = ${s2}.${Test_Join_3}.id]</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="221 F041-03 drop table ${s1}.${Test_Join_2} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop view ${V3} if exists cascade;
drop view ${V4} if exists cascade;
drop table ${s1}.${Test_Join_2} if exists cascade;
drop table ${s2}.${Test_Join_3} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="223 F041-05 Outer joins can be nested" enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop view ${V1} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop table ${Test_Join_1} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_1} if exists cascade;
drop table ${Test_Join_4} if exists cascade;
drop table ${Test_Join_5} if exists cascade;
drop table ${Test_Join_6} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${Test_Join_6}(  id int not null primary key,  name varchar(100)  );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_6}(
 id int not null primary key,
 name varchar(100)
 );</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${Test_Join_5}(  id int not null primary key,  accountname varchar(100),  accountnr int,  accounttype int,  ownerid int,  constraint fk_${Test_Join_5} foreign key (ownerid) references ${Test_Join_6}(id)  );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_5}(
 id int not null primary key,
 accountname varchar(100),
 accountnr int,
 accounttype int,
 ownerid int,
 constraint fk_${Test_Join_5} foreign key (ownerid) references ${Test_Join_6}(id)
 );</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${Test_Join_4}(  id int,  accountid int,  amount float,  constraint fk_${Test_Join_4} foreign key (accountid) references ${Test_Join_5}(id) on update cascade  );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_4}(
 id int,
 accountid int,
 amount float,
 constraint fk_${Test_Join_4} foreign key (accountid) references ${Test_Join_5}(id) on update cascade
 );</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${Test_Join_6} values(1,&apos;John&apos;), (2,&apos;Mary&apos;), (3,&apos;Jane&apos;), (4,&apos;sss&apos;), (5,&apos;zzz&apos;), (6,&apos;xxx&apos;), (7,&apos;ccc&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_6} values(1,&apos;John&apos;),
(2,&apos;Mary&apos;),
(3,&apos;Jane&apos;),
(4,&apos;sss&apos;),
(5,&apos;zzz&apos;),
(6,&apos;xxx&apos;),
(7,&apos;ccc&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1), (2,&apos;Cash&apos;,5202,0,1), (3,&apos;Giro&apos;,5303,0,2), (4,&apos;Invoice&apos;,7505,1,1), (5,&apos;qqq&apos;,7506,2,2), (6,&apos;www&apos;,7507,3,3), (7,&apos;eee&apos;,7508,4,4), (8,&apos;rrr&apos;,7509,5,5), (9,&apos;ttt&apos;,75010,6,6), (10,&apos;yyy&apos;,75011,7,7);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1),
(2,&apos;Cash&apos;,5202,0,1),
(3,&apos;Giro&apos;,5303,0,2),
(4,&apos;Invoice&apos;,7505,1,1),
(5,&apos;qqq&apos;,7506,2,2),
(6,&apos;www&apos;,7507,3,3),
(7,&apos;eee&apos;,7508,4,4),
(8,&apos;rrr&apos;,7509,5,5),
(9,&apos;ttt&apos;,75010,6,6),
(10,&apos;yyy&apos;,75011,7,7);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${Test_Join_4} values(1,1,1000), (2,1,2000), (3,2,100), (4,3,200), (5,4,300), (6,5,400), (7,6,500), (8,7,600), (9,8,700), (10,9,800);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_4} values(1,1,1000),
(2,1,2000),
(3,2,100),
(4,3,200),
(5,4,300),
(6,5,400),
(7,6,500),
(8,7,600),
(9,8,700),
(10,9,800);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-001E " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select own.*, ac.*, cred.* from ${Test_Join_6} own
 left outer join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id;

--order by 歧义字段不报错</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-002E " enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select own.*, ac.*, cred.* from ${Test_Join_6} own
 right outer join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id;

--order by 歧义字段不报错</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-003" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select own.*, ac.*, cred.* from ${Test_Join_6} own
 left outer join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id order by own.id);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1568">11</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-004" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select own.*, ac.*, cred.* from ${Test_Join_6} own
 right outer join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id order by ac.id);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1567">10</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create view ${V1} as select own.*, ac.*, cred.* from ${Test_Join_6} own  left outer join ${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V1} as select own.*, ac.*, cred.* from ${Test_Join_6} own
 left outer join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="776934070">object name already exists: ID in statement [create view ${V1} as select own.*, ac.*, cred.* from ${Test_Join_6} own
 left outer join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create view ${V2} as select own.*, ac.*, cred.* from ${Test_Join_6} own  right outer join ${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V2} as select own.*, ac.*, cred.* from ${Test_Join_6} own
 right outer join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-46070387">object name already exists: ID in statement [create view ${V2} as select own.*, ac.*, cred.* from ${Test_Join_6} own
 right outer join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id order by id]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${Test_Join_1} (c1 int,c2 varchar(20),c3 int,c4 varchar(20),c5 int,c6 int,c7 int,c8 int,c9 int,c10 int);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_1} (c1 int,c2 varchar(20),c3 int,c4 varchar(20),c5 int,c6 int,c7 int,c8 int,c9 int,c10 int);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${Test_Join_6} own  right outer join ${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${Test_Join_4} cred on cred.accountid = ac.id;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${Test_Join_6} own
 right outer join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${Test_Join_6} own  left outer join ${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${Test_Join_4} cred on cred.accountid = ac.id;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${Test_Join_6} own
 left outer join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-005" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1599">21</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop view ${V1} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop table ${Test_Join_1} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_1} if exists cascade;
drop table ${Test_Join_4} if exists cascade;
drop table ${Test_Join_5} if exists cascade;
drop table ${Test_Join_6} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="223 F041-05 different schema" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop view ${V1} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop table ${s1}.${Test_Join_6} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table ${s3}.${Test_Join_4} if exists cascade;
drop table ${s2}.${Test_Join_5} if exists cascade;
drop table ${s1}.${Test_Join_6} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop schema ${s3} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create schema ${s1}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create schema ${s2}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create schema ${s3}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s3};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${s1}.${Test_Join_6}(  id int not null primary key,  name varchar(100)  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s1}.${Test_Join_6}(
 id int not null primary key,
 name varchar(100)
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${s2}.${Test_Join_5}(  id int not null primary key,  accountname varchar(100),  accountnr int,  accounttype int,  ownerid int,  constraint fk_${Test_Join_5} foreign key (ownerid) references ${s1}.${Test_Join_6}(id)  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s2}.${Test_Join_5}(
 id int not null primary key,
 accountname varchar(100),
 accountnr int,
 accounttype int,
 ownerid int,
 constraint fk_${Test_Join_5} foreign key (ownerid) references ${s1}.${Test_Join_6}(id)
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${s3}.${Test_Join_4}(  id int,  accountid int,  amount float,  constraint fk_${Test_Join_4} foreign key (accountid) references ${s2}.${Test_Join_5}(id) on update cascade  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s3}.${Test_Join_4}(
 id int,
 accountid int,
 amount float,
 constraint fk_${Test_Join_4} foreign key (accountid) references ${s2}.${Test_Join_5}(id) on update cascade
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${s1}.${Test_Join_6} values(1,&apos;John&apos;), (2,&apos;Mary&apos;), (3,&apos;Jane&apos;), (4,&apos;sss&apos;), (5,&apos;zzz&apos;), (6,&apos;xxx&apos;), (7,&apos;ccc&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s1}.${Test_Join_6} values(1,&apos;John&apos;),
(2,&apos;Mary&apos;),
(3,&apos;Jane&apos;),
(4,&apos;sss&apos;),
(5,&apos;zzz&apos;),
(6,&apos;xxx&apos;),
(7,&apos;ccc&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${s2}.${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1), (2,&apos;Cash&apos;,5202,0,1), (3,&apos;Giro&apos;,5303,0,2), (4,&apos;Invoice&apos;,7505,1,1), (5,&apos;qqq&apos;,7506,2,2), (6,&apos;www&apos;,7507,3,3), (7,&apos;eee&apos;,7508,4,4), (8,&apos;rrr&apos;,7509,5,5), (9,&apos;ttt&apos;,75010,6,6), (10,&apos;yyy&apos;,75011,7,7);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s2}.${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1),
(2,&apos;Cash&apos;,5202,0,1),
(3,&apos;Giro&apos;,5303,0,2),
(4,&apos;Invoice&apos;,7505,1,1),
(5,&apos;qqq&apos;,7506,2,2),
(6,&apos;www&apos;,7507,3,3),
(7,&apos;eee&apos;,7508,4,4),
(8,&apos;rrr&apos;,7509,5,5),
(9,&apos;ttt&apos;,75010,6,6),
(10,&apos;yyy&apos;,75011,7,7);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${s3}.${Test_Join_4} values(1,1,1000), (2,1,2000), (3,2,100), (4,3,200), (5,4,300), (6,5,400), (7,6,500), (8,7,600), (9,8,700), (10,9,800);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s3}.${Test_Join_4} values(1,1,1000),
(2,1,2000),
(3,2,100),
(4,3,200),
(5,4,300),
(6,5,400),
(7,6,500),
(8,7,600),
(9,8,700),
(10,9,800);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-001E " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 left outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id order by id;

 --order by 歧义字段不报错</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-002E " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 right outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id order by id;

 --order by 歧义字段不报错</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-003 " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 left outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id order by own.id);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1568">11</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 right outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id order by ac.id);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1567">10</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create view ${V1} as select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own  left outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V1} as select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 left outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1262834211">object name already exists: ID in statement [create view ${V1} as select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 left outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id]</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create view ${V2} as select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own  right outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V2} as select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 right outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1961482502">object name already exists: ID in statement [create view ${V2} as select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 right outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id]</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 create table ${Test_Join_1} (c1 int,c2 varchar(20),c3 int,c4 varchar(20),c5 int,c6 int,c7 int,c8 int,c9 int,c10 int);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${Test_Join_1} (c1 int,c2 varchar(20),c3 int,c4 varchar(20),c5 int,c6 int,c7 int,c8 int,c9 int,c10 int);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own  right outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 right outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own  left outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select own.*, ac.*, cred.* from ${s1}.${Test_Join_6} own
 left outer join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1599">21</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop view ${V1} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="223 F041-05 drop table ${s1}.${Test_Join_6} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table ${s3}.${Test_Join_4} if exists cascade;
drop table ${s2}.${Test_Join_5} if exists cascade;
drop table ${s1}.${Test_Join_6} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop schema ${s3} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="224 F041-07 The inner table in a left or right outer join can also be used in an inner join" enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 drop view ${V1} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 drop table ${Test_Join_4} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_4} if exists cascade;
drop table ${Test_Join_5} if exists cascade;
drop table ${Test_Join_6} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create table ${Test_Join_6}(  id int not null primary key,  name varchar(100)  );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_6}(
 id int not null primary key,
 name varchar(100)
 );</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create table ${Test_Join_5}(  id int not null primary key,  accountname varchar(100),  accountnr int,  accounttype int,  ownerid int,  constraint fk_${Test_Join_5} foreign key (ownerid) references ${Test_Join_6}(id)  );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_5}(
 id int not null primary key,
 accountname varchar(100),
 accountnr int,
 accounttype int,
 ownerid int,
 constraint fk_${Test_Join_5} foreign key (ownerid) references ${Test_Join_6}(id)
 );</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create table ${Test_Join_4}(  id int,  accountid int,  amount float,  constraint fk_${Test_Join_4} foreign key (accountid) references ${Test_Join_5}(id) on update cascade  );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_4}(
 id int,
 accountid int,
 amount float,
 constraint fk_${Test_Join_4} foreign key (accountid) references ${Test_Join_5}(id) on update cascade
 );</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 insert into ${Test_Join_6} values(1,&apos;John&apos;), (2,&apos;Mary&apos;), (3,&apos;Jane&apos;), (4,&apos;sss&apos;), (5,&apos;zzz&apos;), (6,&apos;xxx&apos;), (7,&apos;ccc&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_6} values(1,&apos;John&apos;),
(2,&apos;Mary&apos;),
(3,&apos;Jane&apos;),
(4,&apos;sss&apos;),
(5,&apos;zzz&apos;),
(6,&apos;xxx&apos;),
(7,&apos;ccc&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 insert into ${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1), (2,&apos;Cash&apos;,5202,0,1), (3,&apos;Giro&apos;,5303,0,2), (4,&apos;Invoice&apos;,7505,1,1), (5,&apos;qqq&apos;,7506,2,2), (6,&apos;www&apos;,7507,3,3), (7,&apos;eee&apos;,7508,4,4), (8,&apos;rrr&apos;,7509,5,5), (9,&apos;ttt&apos;,75010,6,6), (10,&apos;yyy&apos;,75011,7,7);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1),
(2,&apos;Cash&apos;,5202,0,1),
(3,&apos;Giro&apos;,5303,0,2),
(4,&apos;Invoice&apos;,7505,1,1),
(5,&apos;qqq&apos;,7506,2,2),
(6,&apos;www&apos;,7507,3,3),
(7,&apos;eee&apos;,7508,4,4),
(8,&apos;rrr&apos;,7509,5,5),
(9,&apos;ttt&apos;,75010,6,6),
(10,&apos;yyy&apos;,75011,7,7);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 insert into ${Test_Join_4} values(1,1,1000), (2,1,2000), (3,2,100), (4,3,200), (5,4,300), (6,5,400), (7,6,500), (8,7,600), (9,8,700), (10,9,800);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_4} values(1,1,1000),
(2,1,2000),
(3,2,100),
(4,3,200),
(5,4,300),
(6,5,400),
(7,6,500),
(8,7,600),
(9,8,700),
(10,9,800);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-001" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${Test_Join_6} own
 inner join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="52">4</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-002" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select own.name,ac.accountname,ac.accountnr,sum(cred.amount) from ${Test_Join_6} own
 inner join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create view ${V1} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${Test_Join_6} own  inner join ${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V1} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${Test_Join_6} own
 inner join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-003" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V1} where name = &apos;ccc&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-004" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V1};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="52">4</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create view ${V2} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${Test_Join_6} own  inner join ${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create view ${V2} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${Test_Join_6} own
 inner join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-005" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V2} where name = &apos;xxx&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-006" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${V2};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create table ${Test_Join_1} (c1 varchar(20),c2 varchar(20),c3 int,c4 float);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_1} (c1 varchar(20),c2 varchar(20),c3 int,c4 float);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 insert into ${Test_Join_1} select own.name c1,ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${Test_Join_6} own  inner join ${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select own.name c1,ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${Test_Join_6} own
 inner join ${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 insert into ${Test_Join_1} select own.name c1, ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${Test_Join_6} own  inner join ${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_1} select own.name c1, ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${Test_Join_6} own
 inner join ${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-007" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="55">7</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 drop view ${V1} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 drop table ${Test_Join_4} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_4} if exists cascade;
drop table ${Test_Join_5} if exists cascade;
drop table ${Test_Join_6} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="224 F041-07 different schema" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 drop view ${V1} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  drop table ${s1}.${Test_Join_6} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table ${s3}.${Test_Join_4} if exists cascade;
drop table ${s2}.${Test_Join_5} if exists cascade;
drop table ${s1}.${Test_Join_6} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop schema ${s3} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  create schema ${s1}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  create schema ${s2}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  create schema ${s3}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s3};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  create table ${s1}.${Test_Join_6}(  id int not null primary key,  name varchar(100)  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s1}.${Test_Join_6}(
 id int not null primary key,
 name varchar(100)
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  create table ${s2}.${Test_Join_5}(  id int not null primary key,  accountname varchar(100),  accountnr int,  accounttype int,  ownerid int,  constraint fk_${Test_Join_5} foreign key (ownerid) references ${s1}.${Test_Join_6}(id)  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s2}.${Test_Join_5}(
 id int not null primary key,
 accountname varchar(100),
 accountnr int,
 accounttype int,
 ownerid int,
 constraint fk_${Test_Join_5} foreign key (ownerid) references ${s1}.${Test_Join_6}(id)
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  create table ${s3}.${Test_Join_4}(  id int,  accountid int,  amount float,  constraint fk_${Test_Join_4} foreign key (accountid) references ${s2}.${Test_Join_5}(id) on update cascade  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s3}.${Test_Join_4}(
 id int,
 accountid int,
 amount float,
 constraint fk_${Test_Join_4} foreign key (accountid) references ${s2}.${Test_Join_5}(id) on update cascade
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  insert into ${s1}.${Test_Join_6} values(1,&apos;John&apos;), (2,&apos;Mary&apos;), (3,&apos;Jane&apos;), (4,&apos;sss&apos;), (5,&apos;zzz&apos;), (6,&apos;xxx&apos;), (7,&apos;ccc&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s1}.${Test_Join_6} values(1,&apos;John&apos;),
(2,&apos;Mary&apos;),
(3,&apos;Jane&apos;),
(4,&apos;sss&apos;),
(5,&apos;zzz&apos;),
(6,&apos;xxx&apos;),
(7,&apos;ccc&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  insert into ${s2}.${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1), (2,&apos;Cash&apos;,5202,0,1), (3,&apos;Giro&apos;,5303,0,2), (4,&apos;Invoice&apos;,7505,1,1), (5,&apos;qqq&apos;,7506,2,2), (6,&apos;www&apos;,7507,3,3), (7,&apos;eee&apos;,7508,4,4), (8,&apos;rrr&apos;,7509,5,5), (9,&apos;ttt&apos;,75010,6,6), (10,&apos;yyy&apos;,75011,7,7);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s2}.${Test_Join_5} values(1,&apos;Bank&apos;,5101,0,1),
(2,&apos;Cash&apos;,5202,0,1),
(3,&apos;Giro&apos;,5303,0,2),
(4,&apos;Invoice&apos;,7505,1,1),
(5,&apos;qqq&apos;,7506,2,2),
(6,&apos;www&apos;,7507,3,3),
(7,&apos;eee&apos;,7508,4,4),
(8,&apos;rrr&apos;,7509,5,5),
(9,&apos;ttt&apos;,75010,6,6),
(10,&apos;yyy&apos;,75011,7,7);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07  insert into ${s3}.${Test_Join_4} values(1,1,1000), (2,1,2000), (3,2,100), (4,3,200), (5,4,300), (6,5,400), (7,6,500), (8,7,600), (9,8,700), (10,9,800);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s3}.${Test_Join_4} values(1,1,1000),
(2,1,2000),
(3,2,100),
(4,3,200),
(5,4,300),
(6,5,400),
(7,6,500),
(8,7,600),
(9,8,700),
(10,9,800);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-001 " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${s1}.${Test_Join_6} own
 inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="52">4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select own.name,ac.accountname,ac.accountnr,sum(cred.amount) from ${s1}.${Test_Join_6} own
 inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51">3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create view ${V1} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${s1}.${Test_Join_6} own  inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V1} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${s1}.${Test_Join_6} own
 inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V1} where name = &apos;ccc&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="52">4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create view ${V2} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${s1}.${Test_Join_6} own  inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view ${V2} as select own.name, ac.accountname,ac.accountnr,sum(cred.amount) from ${s1}.${Test_Join_6} own
 inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V2} where name = &apos;xxx&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${V2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51">3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 create table ${Test_Join_1} (c1 varchar(20),c2 varchar(20),c3 int,c4 float);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${Test_Join_1} (c1 varchar(20),c2 varchar(20),c3 int,c4 float);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 insert into ${Test_Join_1} select own.name c1,ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${s1}.${Test_Join_6} own  inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select own.name c1,ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${s1}.${Test_Join_6} own
 inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 right outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 insert into ${Test_Join_1} select own.name c1, ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${s1}.${Test_Join_6} own  inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid  left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id  where accounttype&gt;3  group by own.name,ac.accountnr,ac.accountname;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into ${Test_Join_1} select own.name c1, ac.accountname c2,ac.accountnr c3,sum(cred.amount) c4 from ${s1}.${Test_Join_6} own
 inner join ${s2}.${Test_Join_5} ac on own.id = ac.ownerid
 left outer join ${s3}.${Test_Join_4} cred on cred.accountid = ac.id
 where accounttype&gt;3
 group by own.name,ac.accountnr,ac.accountname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 TC-007" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from ${Test_Join_1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="55">7</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 drop view ${V1} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view ${V1} if exists cascade;
drop view ${V2} if exists cascade;
drop table ${Test_Join_1} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="224 F041-07 drop table ${s1}.${Test_Join_6} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table ${s3}.${Test_Join_4} if exists cascade;
drop table ${s2}.${Test_Join_5} if exists cascade;
drop table ${s1}.${Test_Join_6} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop schema ${s3} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="225 F041-08 All comparison operators are supported (rather than just =)" enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 drop table ${Test_Join_7} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_7} if exists cascade;
drop table ${Test_Join_8} if exists cascade;
drop table ${Test_Join_9} if exists cascade;
drop table ${Test_Join_10} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${Test_Join_7}( sno varchar(10), sname varchar(20), sage int, ssex varchar(5) );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_7}(
sno varchar(10),
sname varchar(20),
sage int,
ssex varchar(5)
);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${Test_Join_8}( tno varchar(10), tname varchar(20) );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_8}(
tno varchar(10),
tname varchar(20)
);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${Test_Join_9}( cno varchar(10), cname varchar(20), tno varchar(20) );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_9}(
cno varchar(10),
cname varchar(20),
tno varchar(20)
);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${Test_Join_10}( sno varchar(10), cno varchar(10), score int );" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">create table ${Test_Join_10}(
sno varchar(10),
cno varchar(10),
score int
);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${Test_Join_7} values (&apos;s001&apos;,&apos;张三&apos;,23,&apos;男&apos;), (&apos;s002&apos;,&apos;李四&apos;,23,&apos;男&apos;), (&apos;s003&apos;,&apos;吴鹏&apos;,25,&apos;男&apos;), (&apos;s004&apos;,&apos;琴沁&apos;,20,&apos;女&apos;), (&apos;s005&apos;,&apos;王丽&apos;,20,&apos;女&apos;), (&apos;s006&apos;,&apos;李波&apos;,21,&apos;男&apos;), (&apos;s007&apos;,&apos;刘玉&apos;,21,&apos;男&apos;), (&apos;s008&apos;,&apos;萧蓉&apos;,21,&apos;女&apos;), (&apos;s009&apos;,&apos;陈萧晓&apos;,23,&apos;女&apos;), (&apos;s010&apos;,&apos;陈美&apos;,22,&apos;女&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_7} values (&apos;s001&apos;,&apos;张三&apos;,23,&apos;男&apos;),
(&apos;s002&apos;,&apos;李四&apos;,23,&apos;男&apos;),
(&apos;s003&apos;,&apos;吴鹏&apos;,25,&apos;男&apos;),
(&apos;s004&apos;,&apos;琴沁&apos;,20,&apos;女&apos;),
(&apos;s005&apos;,&apos;王丽&apos;,20,&apos;女&apos;),
(&apos;s006&apos;,&apos;李波&apos;,21,&apos;男&apos;),
(&apos;s007&apos;,&apos;刘玉&apos;,21,&apos;男&apos;),
(&apos;s008&apos;,&apos;萧蓉&apos;,21,&apos;女&apos;),
(&apos;s009&apos;,&apos;陈萧晓&apos;,23,&apos;女&apos;),
(&apos;s010&apos;,&apos;陈美&apos;,22,&apos;女&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${Test_Join_8} values (&apos;t001&apos;, &apos;刘阳&apos;), (&apos;t002&apos;, &apos;谌燕&apos;), (&apos;t003&apos;, &apos;胡明星&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_8} values (&apos;t001&apos;, &apos;刘阳&apos;),
(&apos;t002&apos;, &apos;谌燕&apos;),
(&apos;t003&apos;, &apos;胡明星&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${Test_Join_9} values (&apos;c001&apos;,&apos;J2SE&apos;,&apos;t002&apos;), (&apos;c002&apos;,&apos;Java Web&apos;,&apos;t002&apos;), (&apos;c003&apos;,&apos;SSH&apos;,&apos;t001&apos;), (&apos;c004&apos;,&apos;Oracle&apos;,&apos;t001&apos;), (&apos;c005&apos;,&apos;SQL SERVER 2005&apos;,&apos;t003&apos;), (&apos;c006&apos;,&apos;C#&apos;,&apos;t003&apos;), (&apos;c007&apos;,&apos;JavaScript&apos;,&apos;t002&apos;), (&apos;c008&apos;,&apos;DIV+CSS&apos;,&apos;t001&apos;), (&apos;c009&apos;,&apos;PHP&apos;,&apos;t003&apos;), (&apos;c010&apos;,&apos;EJB3.0&apos;,&apos;t002&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_9} values (&apos;c001&apos;,&apos;J2SE&apos;,&apos;t002&apos;),
(&apos;c002&apos;,&apos;Java Web&apos;,&apos;t002&apos;),
(&apos;c003&apos;,&apos;SSH&apos;,&apos;t001&apos;),
(&apos;c004&apos;,&apos;Oracle&apos;,&apos;t001&apos;),
(&apos;c005&apos;,&apos;SQL SERVER 2005&apos;,&apos;t003&apos;),
(&apos;c006&apos;,&apos;C#&apos;,&apos;t003&apos;),
(&apos;c007&apos;,&apos;JavaScript&apos;,&apos;t002&apos;),
(&apos;c008&apos;,&apos;DIV+CSS&apos;,&apos;t001&apos;),
(&apos;c009&apos;,&apos;PHP&apos;,&apos;t003&apos;),
(&apos;c010&apos;,&apos;EJB3.0&apos;,&apos;t002&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${Test_Join_10} values (&apos;s001&apos;,&apos;c001&apos;,78.9), (&apos;s002&apos;,&apos;c001&apos;,80.9), (&apos;s003&apos;,&apos;c001&apos;,81.9), (&apos;s004&apos;,&apos;c001&apos;,60.9), (&apos;s001&apos;,&apos;c002&apos;,82.9), (&apos;s002&apos;,&apos;c002&apos;,72.9), (&apos;s003&apos;,&apos;c002&apos;,81.9), (&apos;s001&apos;,&apos;c003&apos;,&apos;59&apos;);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">insert into ${Test_Join_10} values (&apos;s001&apos;,&apos;c001&apos;,78.9),
(&apos;s002&apos;,&apos;c001&apos;,80.9),
(&apos;s003&apos;,&apos;c001&apos;,81.9),
(&apos;s004&apos;,&apos;c001&apos;,60.9),
(&apos;s001&apos;,&apos;c002&apos;,82.9),
(&apos;s002&apos;,&apos;c002&apos;,72.9),
(&apos;s003&apos;,&apos;c002&apos;,81.9),
(&apos;s001&apos;,&apos;c003&apos;,&apos;59&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-001" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select * from ${Test_Join_7} st
join ${Test_Join_10} a on st.sno=a.sno
join ${Test_Join_10} b on st.sno=b.sno
where a.cno=&apos;c002&apos; and b.cno=&apos;c001&apos; and a.score &lt; b.score order by st.sno);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-002" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select * from ${Test_Join_7} st
join ${Test_Join_10} a on st.sno=a.sno
join ${Test_Join_10} b on st.sno=b.sno
where a.cno=&apos;c002&apos; and b.cno=&apos;c001&apos; and a.score &lt;= b.score order by st.sno);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="50">2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-003" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select st.* from ${Test_Join_7} st,
(select distinct a.sno from
(select * from ${Test_Join_10}) a,
(select * from ${Test_Join_10} where ${Test_Join_10}.sno=&apos;s001&apos;) b
where a.cno=b.cno) h
where st.sno=h.sno and st.sno&lt;&gt;&apos;s001&apos; order by st.sno);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-004" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select st.sname,c.cname,${Test_Join_10}.score from ${Test_Join_7} st,${Test_Join_10},${Test_Join_9} c
where ${Test_Join_10}.sno=st.sno and ${Test_Join_10}.cno=c.cno and ${Test_Join_10}.score&gt;70 order by ${Test_Join_10}.score);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="54">6</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-005" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
select st.* from ${Test_Join_7} st,
(select distinct a.sno from (select * from ${Test_Join_10}) a,
(select * from ${Test_Join_10} where ${Test_Join_10}.sno=&apos;s001&apos;) b where a.cno=b.cno) h
where st.sno=h.sno and st.sno!=&apos;s001&apos; order by st.sno);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 drop table ${Test_Join_7} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_7} if exists cascade;
drop table ${Test_Join_8} if exists cascade;
drop table ${Test_Join_9} if exists cascade;
drop table ${Test_Join_10} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="225 F041-08 different schema" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 drop table ${s4}.${Test_Join_10} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table ${s1}.${Test_Join_7} if exists cascade;
drop table ${s2}.${Test_Join_8} if exists cascade;
drop table ${s3}.${Test_Join_9} if exists cascade;
drop table ${s4}.${Test_Join_10} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop schema ${s3} if exists cascade;
drop schema ${s4} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create schema ${s1}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s1};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create schema ${s2}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s2};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create schema ${s3}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s3};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create schema ${s4}" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create schema ${s4};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${s1}.${Test_Join_7}( sno varchar(10), sname varchar(20), sage int, ssex varchar(5) );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s1}.${Test_Join_7}(
sno varchar(10),
sname varchar(20),
sage int,
ssex varchar(5)
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${s2}.${Test_Join_8}( tno varchar(10), tname varchar(20) );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s2}.${Test_Join_8}(
tno varchar(10),
tname varchar(20)
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${s3}.${Test_Join_9}( cno varchar(10), cname varchar(20), tno varchar(20) );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s3}.${Test_Join_9}(
cno varchar(10),
cname varchar(20),
tno varchar(20)
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 create table ${s4}.${Test_Join_10}( sno varchar(10), cno varchar(10), score int );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table ${s4}.${Test_Join_10}(
sno varchar(10),
cno varchar(10),
score int
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${s1}.${Test_Join_7} values (&apos;s001&apos;,&apos;张三&apos;,23,&apos;男&apos;), (&apos;s002&apos;,&apos;李四&apos;,23,&apos;男&apos;), (&apos;s003&apos;,&apos;吴鹏&apos;,25,&apos;男&apos;), (&apos;s004&apos;,&apos;琴沁&apos;,20,&apos;女&apos;), (&apos;s005&apos;,&apos;王丽&apos;,20,&apos;女&apos;), (&apos;s006&apos;,&apos;李波&apos;,21,&apos;男&apos;), (&apos;s007&apos;,&apos;刘玉&apos;,21,&apos;男&apos;), (&apos;s008&apos;,&apos;萧蓉&apos;,21,&apos;女&apos;), (&apos;s009&apos;,&apos;陈萧晓&apos;,23,&apos;女&apos;), (&apos;s010&apos;,&apos;陈美&apos;,22,&apos;女&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s1}.${Test_Join_7} values (&apos;s001&apos;,&apos;张三&apos;,23,&apos;男&apos;),
(&apos;s002&apos;,&apos;李四&apos;,23,&apos;男&apos;),
(&apos;s003&apos;,&apos;吴鹏&apos;,25,&apos;男&apos;),
(&apos;s004&apos;,&apos;琴沁&apos;,20,&apos;女&apos;),
(&apos;s005&apos;,&apos;王丽&apos;,20,&apos;女&apos;),
(&apos;s006&apos;,&apos;李波&apos;,21,&apos;男&apos;),
(&apos;s007&apos;,&apos;刘玉&apos;,21,&apos;男&apos;),
(&apos;s008&apos;,&apos;萧蓉&apos;,21,&apos;女&apos;),
(&apos;s009&apos;,&apos;陈萧晓&apos;,23,&apos;女&apos;),
(&apos;s010&apos;,&apos;陈美&apos;,22,&apos;女&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${s2}.${Test_Join_8} values (&apos;t001&apos;, &apos;刘阳&apos;), (&apos;t002&apos;, &apos;谌燕&apos;), (&apos;t003&apos;, &apos;胡明星&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s2}.${Test_Join_8} values (&apos;t001&apos;, &apos;刘阳&apos;),
(&apos;t002&apos;, &apos;谌燕&apos;),
(&apos;t003&apos;, &apos;胡明星&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${s3}.${Test_Join_9} values (&apos;c001&apos;,&apos;J2SE&apos;,&apos;t002&apos;), (&apos;c002&apos;,&apos;Java Web&apos;,&apos;t002&apos;), (&apos;c003&apos;,&apos;SSH&apos;,&apos;t001&apos;), (&apos;c004&apos;,&apos;Oracle&apos;,&apos;t001&apos;), (&apos;c005&apos;,&apos;SQL SERVER 2005&apos;,&apos;t003&apos;), (&apos;c006&apos;,&apos;C#&apos;,&apos;t003&apos;), (&apos;c007&apos;,&apos;JavaScript&apos;,&apos;t002&apos;), (&apos;c008&apos;,&apos;DIV+CSS&apos;,&apos;t001&apos;), (&apos;c009&apos;,&apos;PHP&apos;,&apos;t003&apos;), (&apos;c010&apos;,&apos;EJB3.0&apos;,&apos;t002&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s3}.${Test_Join_9} values (&apos;c001&apos;,&apos;J2SE&apos;,&apos;t002&apos;),
(&apos;c002&apos;,&apos;Java Web&apos;,&apos;t002&apos;),
(&apos;c003&apos;,&apos;SSH&apos;,&apos;t001&apos;),
(&apos;c004&apos;,&apos;Oracle&apos;,&apos;t001&apos;),
(&apos;c005&apos;,&apos;SQL SERVER 2005&apos;,&apos;t003&apos;),
(&apos;c006&apos;,&apos;C#&apos;,&apos;t003&apos;),
(&apos;c007&apos;,&apos;JavaScript&apos;,&apos;t002&apos;),
(&apos;c008&apos;,&apos;DIV+CSS&apos;,&apos;t001&apos;),
(&apos;c009&apos;,&apos;PHP&apos;,&apos;t003&apos;),
(&apos;c010&apos;,&apos;EJB3.0&apos;,&apos;t002&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 insert into ${s4}.${Test_Join_10} values (&apos;s001&apos;,&apos;c001&apos;,78.9), (&apos;s002&apos;,&apos;c001&apos;,80.9), (&apos;s003&apos;,&apos;c001&apos;,81.9), (&apos;s004&apos;,&apos;c001&apos;,60.9), (&apos;s001&apos;,&apos;c002&apos;,82.9), (&apos;s002&apos;,&apos;c002&apos;,72.9), (&apos;s003&apos;,&apos;c002&apos;,81.9), (&apos;s001&apos;,&apos;c003&apos;,&apos;59&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into ${s4}.${Test_Join_10} values (&apos;s001&apos;,&apos;c001&apos;,78.9),
(&apos;s002&apos;,&apos;c001&apos;,80.9),
(&apos;s003&apos;,&apos;c001&apos;,81.9),
(&apos;s004&apos;,&apos;c001&apos;,60.9),
(&apos;s001&apos;,&apos;c002&apos;,82.9),
(&apos;s002&apos;,&apos;c002&apos;,72.9),
(&apos;s003&apos;,&apos;c002&apos;,81.9),
(&apos;s001&apos;,&apos;c003&apos;,&apos;59&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select * from ${s1}.${Test_Join_7} st
join ${s4}.${Test_Join_10} a on st.sno=a.sno
join ${s4}.${Test_Join_10} b on st.sno=b.sno
where a.cno=&apos;c002&apos; and b.cno=&apos;c001&apos; and a.score &lt; b.score);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select * from ${s1}.${Test_Join_7} st
join ${s4}.${Test_Join_10} a on st.sno=a.sno
join ${s4}.${Test_Join_10} b on st.sno=b.sno
where a.cno=&apos;c002&apos; and b.cno=&apos;c001&apos; and a.score &lt;= b.score);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="50">2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select st.* from ${s1}.${Test_Join_7} st,
(select distinct a.sno from
(select * from ${s4}.${Test_Join_10}) a,
(select * from ${s4}.${Test_Join_10} where ${s4}.${Test_Join_10}.sno=&apos;s001&apos;) b
where a.cno=b.cno) h
where st.sno=h.sno and st.sno&lt;&gt;&apos;s001&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51">3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select st.sname,c.cname,${s4}.${Test_Join_10}.score from ${s1}.${Test_Join_7} st,${s4}.${Test_Join_10},${s3}.${Test_Join_9} c
where ${s4}.${Test_Join_10}.sno=st.sno and ${s4}.${Test_Join_10}.cno=c.cno and ${s4}.${Test_Join_10}.score&gt;70);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="54">6</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select st.* from ${s1}.${Test_Join_7} st,
(select distinct a.sno from (select * from ${s4}.${Test_Join_10}) a,
(select * from ${s4}.${Test_Join_10} where ${s4}.${Test_Join_10}.sno=&apos;s001&apos;) b where a.cno=b.cno) h
where st.sno=h.sno and st.sno!=&apos;s001&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51">3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="225 F041-08 drop table ${s4}.${Test_Join_10} if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table ${s1}.${Test_Join_7} if exists cascade;
drop table ${s2}.${Test_Join_8} if exists cascade;
drop table ${s3}.${Test_Join_9} if exists cascade;
drop table ${s4}.${Test_Join_10} if exists cascade;
drop schema ${s1} if exists cascade;
drop schema ${s2} if exists cascade;
drop schema ${s3} if exists cascade;
drop schema ${s4} if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="319 F401-04 CROSS JOIN" enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 drop table ${Test_Join_10} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_10} if exists cascade;
drop table ${Test_Join_8} if exists cascade;
drop table ${Test_Join_9} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 CREATE TABLE ${Test_Join_10}(ID int, name varchar(100), cost double);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE ${Test_Join_10}(ID int,
name varchar(100),
cost double);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 INSERT INTO ${Test_Join_10} VALUES (1,&apos;Widget&apos;,21.99), (2,&apos;Thingamajig&apos;,5.38), (3,&apos;Watchamacallit&apos;,1.96);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">INSERT INTO ${Test_Join_10} VALUES (1,&apos;Widget&apos;,21.99),
(2,&apos;Thingamajig&apos;,5.38),
(3,&apos;Watchamacallit&apos;,1.96);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 CREATE TABLE ${Test_Join_8}(ID int, salesdate date, sid int, qty int, totalsalesamt double);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE ${Test_Join_8}(ID int,
salesdate date,
sid int,
qty int,
totalsalesamt double);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 INSERT INTO ${Test_Join_8} VALUES (1,&apos;2014-10-1&apos;,1,1,21.99), (2,&apos;2014-10-2&apos;,3,1,1.96), (3,&apos;2014-10-3&apos;,3,10,19.60), (4,&apos;2014-10-3&apos;,1,2,43.98), (5,&apos;2014-10-3&apos;,1,2,43.98);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">INSERT INTO ${Test_Join_8} VALUES (1,&apos;2014-10-1&apos;,1,1,21.99),
(2,&apos;2014-10-2&apos;,3,1,1.96),
(3,&apos;2014-10-3&apos;,3,10,19.60),
(4,&apos;2014-10-3&apos;,1,2,43.98),
(5,&apos;2014-10-3&apos;,1,2,43.98);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 CREATE TABLE ${Test_Join_9}(ID int, name varchar(100), cost double);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE ${Test_Join_9}(ID int,
name varchar(100),
cost double);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 INSERT INTO ${Test_Join_9} VALUES (1,&apos;Widget&apos;,21.99), (2,&apos;Thingamajig&apos;,5.38), (3,&apos;Watchamacallit&apos;,1.96);" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">INSERT INTO ${Test_Join_9} VALUES (1,&apos;Widget&apos;,21.99),
(2,&apos;Thingamajig&apos;,5.38),
(3,&apos;Watchamacallit&apos;,1.96);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 TC-001" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT count(*) FROM ${Test_Join_10} CROSS JOIN ${Test_Join_8};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1572">15</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 TC-002" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
SELECT ROW_NUMBER() OVER(ORDER BY name DESC) AS ID,
       ${Test_Join_10}.name,
       CAST(${Test_Join_8}.ID as varchar(2)) AS name,
       (${Test_Join_10}.cost / ${Test_Join_8}.ID) * 100 AS cost
FROM ${Test_Join_10} CROSS JOIN ${Test_Join_8});</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1572">15</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 TC-003" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT count(*) FROM ${Test_Join_10}
CROSS JOIN ${Test_Join_8}
CROSS JOIN ${Test_Join_9};</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1665">45</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 TC-004" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT count(*) FROM ${Test_Join_10} P CROSS JOIN ${Test_Join_8} S WHERE P.ID = S.ID;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 TC-005" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT count(*) FROM ${Test_Join_10} P INNER JOIN ${Test_Join_8} S ON P.ID = S.ID;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 TC-006" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
SELECT S1.salesdate, name , ISNULL(Sum(S2.Qty),0) AS TotalQty , ISNULL(SUM(S2.totalsalesamt),0) AS totalsales FROM ${Test_Join_10} P CROSS JOIN ( SELECT DISTINCT salesdate FROM ${Test_Join_8} ) S1 LEFT OUTER JOIN ${Test_Join_8} S2 ON P.ID = S2.ID AND S1.salesdate = S2.salesdate GROUP BY S1.salesdate, P.name);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="57">9</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 TC-007" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from (
SELECT S1.salesdate, name , ISNULL(Sum(S2.Qty),0) AS TotalQty , ISNULL(SUM(S2.totalsalesamt),0) AS totalsales FROM ${Test_Join_10} P CROSS JOIN ( SELECT salesdate FROM ${Test_Join_8} ) S1 LEFT OUTER JOIN ${Test_Join_8} S2 ON P.ID = S2.ID AND S1.salesdate = S2.salesdate GROUP BY S1.salesdate, P.name);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="57">9</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="319 F401-04 drop table ${Test_Join_10} if exists cascade;" enabled="true">
          <stringProp name="dataSource">${a}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">drop table ${Test_Join_10} if exists cascade;
drop table ${Test_Join_8} if exists cascade;
drop table ${Test_Join_9} if exists cascade;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
