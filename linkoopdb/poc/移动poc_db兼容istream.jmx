<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="移动poc_db兼容istream" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host, 192.168.1.95)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">linkoopdb host</stringProp>
          </elementProp>
          <elementProp name="a" elementType="Argument">
            <stringProp name="Argument.name">a</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">dba user</stringProp>
          </elementProp>
          <elementProp name="a_password" elementType="Argument">
            <stringProp name="Argument.name">a_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">dba user password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">T_USER1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user1</stringProp>
          </elementProp>
          <elementProp name="u1_password" elementType="Argument">
            <stringProp name="Argument.name">u1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user1 password</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">T_USER2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user2</stringProp>
          </elementProp>
          <elementProp name="u2_password" elementType="Argument">
            <stringProp name="Argument.name">u2_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user2 password</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">T_USER3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3_password" elementType="Argument">
            <stringProp name="Argument.name">u3_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s1" elementType="Argument">
            <stringProp name="Argument.name">s1</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s2" elementType="Argument">
            <stringProp name="Argument.name">s2</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s3" elementType="Argument">
            <stringProp name="Argument.name">s3</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s4" elementType="Argument">
            <stringProp name="Argument.name">s4</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V1" elementType="Argument">
            <stringProp name="Argument.name">V1</stringProp>
            <stringProp name="Argument.value">VIEW_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V2" elementType="Argument">
            <stringProp name="Argument.name">V2</stringProp>
            <stringProp name="Argument.value">VIEW_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V3" elementType="Argument">
            <stringProp name="Argument.name">V3</stringProp>
            <stringProp name="Argument.value">VIEW_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V4" elementType="Argument">
            <stringProp name="Argument.name">V4</stringProp>
            <stringProp name="Argument.value">VIEW_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V5" elementType="Argument">
            <stringProp name="Argument.name">V5</stringProp>
            <stringProp name="Argument.value">VIEW_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v1" elementType="Argument">
            <stringProp name="Argument.name">v1</stringProp>
            <stringProp name="Argument.value">view_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v2" elementType="Argument">
            <stringProp name="Argument.name">v2</stringProp>
            <stringProp name="Argument.value">view_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v3" elementType="Argument">
            <stringProp name="Argument.name">v3</stringProp>
            <stringProp name="Argument.value">view_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v4" elementType="Argument">
            <stringProp name="Argument.name">v4</stringProp>
            <stringProp name="Argument.value">view_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v5" elementType="Argument">
            <stringProp name="Argument.name">v5</stringProp>
            <stringProp name="Argument.value">view_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy1" elementType="Argument">
            <stringProp name="Argument.name">sy1</stringProp>
            <stringProp name="Argument.value">SYNONYM_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy2" elementType="Argument">
            <stringProp name="Argument.name">sy2</stringProp>
            <stringProp name="Argument.value">SYNONYM_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy3" elementType="Argument">
            <stringProp name="Argument.name">sy3</stringProp>
            <stringProp name="Argument.value">SYNONYM_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy4" elementType="Argument">
            <stringProp name="Argument.name">sy4</stringProp>
            <stringProp name="Argument.value">SYNONYM_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy5" elementType="Argument">
            <stringProp name="Argument.name">sy5</stringProp>
            <stringProp name="Argument.value">SYNONYM_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="synonym_view" elementType="Argument">
            <stringProp name="Argument.name">synonym_view</stringProp>
            <stringProp name="Argument.value">SYNONYM_VIEW</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="schema" elementType="Argument">
            <stringProp name="Argument.name">schema</stringProp>
            <stringProp name="Argument.value">TEST_QUERY</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="logdir" elementType="Argument">
            <stringProp name="Argument.name">logdir</stringProp>
            <stringProp name="Argument.value">~/logs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="admin" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${a}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${u1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${u1}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="set up" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop schema" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="query">DROP SCHEMA IF EXISTS poc_db_istream CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create schema" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">CREATE SCHEMA poc_db_istream;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set schema" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SET SCHEMA poc_db_istream;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="case1" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream store_sales" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS store_sales CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream date_dim" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS date_dim CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream store" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS store CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream  household_demographics" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS household_demographics CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream result1" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS result1 CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  store_sales" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">CREATE stream  store_sales(
 ss_sold_date_sk int, 
 ss_sold_time_sk int, 
 ss_item_sk int, 
 ss_customer_sk int, 
 ss_cdemo_sk int, 
 ss_hdemo_sk int, 
 ss_addr_sk int, 
 ss_store_sk int, 
 ss_promo_sk int, 
 ss_ticket_number int, 
 ss_quantity int, 
 ss_wholesale_cost decimal, 
 ss_list_price decimal, 
 ss_sales_price decimal, 
 ss_ext_discount_amt decimal, 
 ss_ext_sales_price decimal, 
 ss_ext_wholesale_cost decimal, 
 ss_ext_list_price decimal, 
 ss_ext_tax decimal, 
 ss_coupon_amt decimal, 
 ss_net_paid decimal, 
 ss_net_paid_inc_tax decimal, 
 ss_net_profit decimal, 
 ss_timestamp bigint )    
 PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;store_sales1_lxp_1207&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node3:2181/linkoopdb/testdb9/kafka&apos;,    
 &apos;group.id&apos;: &apos;0001_test_12111&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node9:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;|&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  date_dim" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">CREATE stream  date_dim(
 d_date_sk int,
 d_date_id string,
 d_date date,
 d_month_seq int, 
 d_week_seq int,
 d_quarter_seq int, 
 d_year int, 
 d_dow int, 
 d_moy int, 
 d_dom int, 
 d_qoy int, 
 d_fy_year int, 
 d_fy_quarter_seq int, 
 d_fy_week_seq int, 
 d_day_name string, 
 d_quarter_name string, 
 d_holiday string, 
 d_weekend string, 
 d_following_holiday string, 
 d_first_dom int,
 d_last_dom int, 
 d_same_day_ly int, 
 d_same_day_lq int, 
 d_current_day string, 
 d_current_week string, 
 d_current_month string, 
 d_current_quarter string, 
 d_current_year string) 
 properties( 
 &apos;type&apos;:&apos;source&apos;, 
 &apos;connector&apos;:&apos;filesystem&apos;, 
 &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/date_dim/part-00000-135eb6c7-affc-47a4-a1f0-2208e2ca2a86-c000.csv&apos;, 
 &apos;format&apos;:&apos;csv&apos;, 
 &apos;separator&apos;:&apos;|&apos;, 
 &apos;quoteChar&apos;:&apos;\&quot;&apos;,
 &apos;escapeChar&apos;:&apos;\\&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;dataType&apos;:&apos;static&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  store" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">CREATE stream  store(
 s_store_sk int, 
 s_stre_id string, 
 s_rec_start_date date,
 s_rec_end_date date, 
 s_closed_date_sk int, 
 s_store_name string, 
 s_number_employees int, 
 s_floor_space int, 
 s_hours string, 
 s_manager string, 
 s_market_id int, 
 s_geography_class string, 
 s_market_desc string, 
 s_market_manager string, 
 s_division_id int, 
 s_division_name string, 
 s_company_id int, 
 s_company_name string, 
 s_street_number string, 
 s_street_name string, 
 s_street_type string, 
 s_suite_number string, 
 s_city string, 
 s_county string, 
 s_state string, 
 s_zip string, 
 s_country string, 
 s_gmt_offset decimal, 
 s_tax_precentage decimal) 
 properties( 
 &apos;type&apos;:&apos;source&apos;, 
 &apos;connector&apos;:&apos;filesystem&apos;, 
 &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/store/part-00000-40636c33-e1c6-4996-b422-6ea833cc777b-c000.csv&apos;, 
 &apos;format&apos;:&apos;csv&apos;, 
 &apos;separator&apos;:&apos;|&apos;,
 &apos;quoteChar&apos;:&apos;\&quot;&apos;,
 &apos;escapeChar&apos;:&apos;\\&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;dataType&apos;:&apos;static&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  household_demographics" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">CREATE stream  household_demographics(
  hd_demo_sk int, 
  hd_income_band_sk int, 
  hd_buy_potential string, 
  hd_dep_count int, 
  hd_vehicle_count int) 
  properties( 
  &apos;type&apos;:&apos;source&apos;, 
  &apos;connector&apos;:&apos;filesystem&apos;, 
  &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/household_demographics/part-00000-fb12dfa2-557c-4c19-99b4-2735800ab099-c000.csv&apos;, 
  &apos;format&apos;:&apos;csv&apos;, 
  &apos;separator&apos;:&apos;|&apos;,
  &apos;quoteChar&apos;:&apos;\&quot;&apos;,
  &apos;escapeChar&apos;:&apos;\\&apos;,
  &apos;commentPrefix&apos;:&apos;#&apos;,
  &apos;dataType&apos;:&apos;static&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  result1" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">CREATE stream  result1(
rs_ticket_number int, 
rs_customer_sk int, 
rs_city string, 
rs_coupon_amt decimal, 
rs_net_profit decimal ) 
properties (
 &apos;type&apos;: &apos;sink&apos;, 
 &apos;connector&apos;: &apos;jdbc&apos;, 
 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, 
 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dbstream?useServerPrepStmts=false&amp;rewriteBatchedStatements=true&apos;, 
 &apos;username&apos;: &apos;test&apos;, 
 &apos;password&apos;: &apos;123456&apos;,
 &apos;batchSize&apos;: &apos;10000&apos;, 
 &apos;tableName&apos;: &apos;result1&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="insert into result1" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into result1
select ss_ticket_number,ss_customer_sk,store.s_city,ss_coupon_amt,ss_net_profit 
from store_sales,date_dim,store,household_demographics 
where store_sales.ss_sold_date_sk = date_dim.d_date_sk 
and store_sales.ss_store_sk = store.s_store_sk 
and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk 
and (household_demographics.hd_dep_count = 6 or household_demographics.hd_vehicle_count &gt; 2) 
and date_dim.d_dow = 1 and store.s_number_employees between 200 and 295;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="case2" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream store_sales2" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS store_sales2 CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream result2" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS result2 CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  store_sales2" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">create stream store_sales2  (
ss_sold_date_sk int, 
ss_sold_time_sk int, 
ss_item_sk int, 
ss_customer_sk int, 
ss_cdemo_sk int, 
ss_hdemo_sk int, 
ss_addr_sk int, 
ss_store_sk int, 
ss_promo_sk int, 
ss_ticket_number int, 
ss_quantity int, 
ss_wholesale_cost decimal, 
ss_list_price decimal, 
ss_sales_price decimal, 
ss_ext_discount_amt decimal, 
ss_ext_sales_price decimal, 
ss_ext_wholesale_cost decimal, 
ss_ext_list_price decimal, 
ss_ext_tax decimal, 
ss_coupon_amt decimal, 
ss_net_paid decimal, 
ss_net_paid_inc_tax decimal, 
ss_net_profit decimal, 
ss_timestamp timestamp )    PROPERTIES    (   
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,   
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;store_sales2_lxp_1207&apos;,   
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node3:2181/linkoopdb/testdb9/kafka&apos;,  
 &apos;group.id&apos;: &apos;110801_test_004&apos;,   
 &apos;bootstrap.servers&apos;: &apos;node9:29093&apos;,   
 &apos;format&apos;: &apos;csv&apos; , &apos;separator&apos;:&apos;|&apos;, 
 &apos;rowtime&apos;:&apos;ss_timestamp.myrowtime&apos;,
 &apos;watermarksDelay&apos;:&apos;0&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  result2" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">CREATE STREAM result2(
 rs_time string,
 rs_wholesale_cost decimal,
 rs_sales_price decimal, 
 rs_net_paid decimal, 
 rs_net_profit decimal
 ) properties (
 &apos;type&apos;: &apos;sink&apos;, 
 &apos;connector&apos;: &apos;jdbc&apos;, 
 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, 
 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dbstream?useServerPrepStmts=false&amp;rewriteBatchedStatements=true&apos;, 
 &apos;username&apos;: &apos;test&apos;, 
 &apos;password&apos;: &apos;123456&apos;,
 &apos;batchSize&apos;: &apos;10000&apos;, 
 &apos;tableName&apos;: &apos;result2&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="insert into result2" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into result2
select cast(tumble_start(myrowtime, interval &apos;1&apos; hour) as varchar) as wstart, 
	sum(ss_wholesale_cost), 
	sum(ss_sales_price), 
	sum(ss_net_paid), 
	sum(ss_net_profit)
from store_sales2
where ss_coupon_amt &gt; 0
group by tumble(myrowtime, interval &apos;1&apos; hour)
having sum(ss_wholesale_cost) &gt; 1000;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="case3" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream web_sales" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS web_sales CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream web_returns" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS web_returns CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream customer_demographics" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS customer_demographics CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream reason" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS reason CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP stream result3" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">DROP stream IF EXISTS result3 CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  web_sales" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">create stream web_sales(
 ws_sold_date_sk int, 
ws_sold_time_sk int, 
ws_ship_date_sk int, 
ws_item_sk int, 
ws_bill_customer_sk int, 
ws_bill_cdemo_sk int, 
ws_bill_hdemo_sk int, 
ws_bill_addr_sk int, 
ws_ship_customer_sk int, 
ws_ship_cdemo_sk int, 
ws_ship_hdemo_sk int, 
ws_ship_addr_sk int, 
ws_web_page_sk int, 
ws_web_site_sk int, 
ws_ship_mode_sk int, 
ws_warehouse_sk int, 
ws_promo_sk int, 
ws_order_number int, 
ws_quantity int, 
ws_wholesale_cost decimal, 
ws_list_price decimal, 
ws_sales_price decimal, 
ws_ext_discount_amt decimal, 
ws_ext_sales_price decimal, 
ws_ext_wholesale_cost decimal, 
ws_ext_list_price decimal, 
ws_ext_tax decimal, 
ws_coupon_amt decimal, 
ws_ext_ship_cost decimal, 
ws_net_paid decimal, 
ws_net_paid_inc_tax decimal, 
ws_net_paid_inc_ship decimal, 
ws_net_paid_inc_ship_tax decimal, 
ws_net_profit decimal, 
ws_timestamp bigint 
 )    PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,   
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;web_sales_lxp_12073&apos;,
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node3:2181/linkoopdb/testdb9/kafka&apos;,     
 &apos;group.id&apos;: &apos;11303&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node9:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;|&apos;,
 &apos;rowtime&apos;:&apos;ws_timestamp.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
 &apos;watermarksDelay&apos;:&apos;86400000&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  web_returns" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">create stream web_returns (
wr_returned_date_sk int, 
wr_returned_time_sk int, 
wr_item_sk int, 
wr_refunded_customer_sk int, 
wr_refunded_cdemo_sk int, 
wr_refunded_hdemo_sk int, 
wr_refunded_addr_sk int, 
wr_returning_customer_sk int, 
wr_returning_cdemo_sk int, 
wr_returning_hdemo_sk int, 
wr_returning_addr_sk int, 
wr_web_page_sk int, 
wr_reason_sk int, 
wr_order_number int, 
wr_return_quantity int, 
wr_return_amt decimal, 
wr_return_tax decimal, 
wr_return_amt_inc_tax decimal, 
wr_fee decimal, 
wr_return_ship_cost decimal, 
wr_refunded_cash decimal, 
wr_reversed_charge decimal, 
wr_account_credit decimal, 
wr_net_loss decimal, 
wr_timestamp bigint 
 )    PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,   
 &apos;connector&apos;: &apos;kafka&apos;,   
 &apos;version&apos;: &apos;0.10&apos;,   
 &apos;topic&apos;: &apos;web_returns_lxp_12071&apos;,   
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node3:2181/linkoopdb/testdb9/kafka&apos;,     
 &apos;group.id&apos;: &apos;11303&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node9:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;|&apos;, 
 &apos;rowtime&apos;:&apos;wr_timestamp.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
 &apos;watermarksDelay&apos;:&apos;86400000&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  customer_demographics" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">create stream customer_demographics(
cd_demo_sk int, 
cd_gender string, 
cd_marital_status string, 
cd_education_status string, 
cd_purchase_estimate int, 
cd_credit_rating string, 
cd_dep_count int, 
cd_dep_employed_count int, 
cd_dep_college_count int
) properties( 
&apos;type&apos;:&apos;source&apos;, 
&apos;connector&apos;:&apos;filesystem&apos;, 
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;, 
 &apos;separator&apos;:&apos;|&apos;, 
 &apos;quoteChar&apos;:&apos;\&quot;&apos;,
 &apos;escapeChar&apos;:&apos;\\&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;dataType&apos;:&apos;static&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  reason" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">create stream reason(
r_reason_sk int,
r_reason_id string, 
r_reason_desc string 
) properties( 
&apos;type&apos;:&apos;source&apos;, 
&apos;connector&apos;:&apos;filesystem&apos;, 
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/reason/part-00000-f41f1c86-964f-4300-ac87-fc9d3519b364-c000.csv&apos;, 
&apos;format&apos;:&apos;csv&apos;, 
&apos;separator&apos;:&apos;|&apos;, 
&apos;quoteChar&apos;:&apos;\&quot;&apos;,
&apos;escapeChar&apos;:&apos;\\&apos;,
&apos;commentPrefix&apos;:&apos;#&apos;,
&apos;dataType&apos;:&apos;static&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE stream  result3" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query"> CREATE STREAM result3
 (rs_time string,rs_reason_desc string, rs_quantity int, rs_refunded_cash decimal, rs_fee decimal) properties 
 (&apos;type&apos;: &apos;sink&apos;, 
 &apos;connector&apos;: &apos;jdbc&apos;, 
 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, 
 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dbstream?useServerPrepStmts=false&amp;rewriteBatchedStatements=true&apos;, 
 &apos;username&apos;: &apos;test&apos;,
 &apos;password&apos;: &apos;123456&apos;,
 &apos;batchSize&apos;: &apos;10000&apos;, 
 &apos;tableName&apos;: &apos;result3&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="insert into result3" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into result3
select cast(tumble_start(web_sales.myrowtime , interval &apos;1&apos; hour) as varchar) as wstart,substr(r_reason_desc,1,20), avg(ws_quantity), 
avg(wr_refunded_cash), avg(wr_fee)
from web_sales web_sales, web_returns web_returns, 
customer_demographics cd1, 
customer_demographics cd2, 
reason
where ws_item_sk = wr_item_sk
  and ws_order_number = wr_order_number
  and web_returns.myrowtime 
between web_sales.myrowtime and web_sales.myrowtime + interval &apos;1&apos; hour 
  and cd1.cd_demo_sk = wr_refunded_cdemo_sk
  and cd2.cd_demo_sk = wr_returning_cdemo_sk
  and r_reason_sk = wr_reason_sk
group by tumble(web_sales.myrowtime, interval &apos;1&apos; hour), r_reason_desc;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
