<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4db连接池</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb" elementType="Argument">
            <stringProp name="Argument.name">udb</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb_password" elementType="Argument">
            <stringProp name="Argument.name">udb_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="umysql" elementType="Argument">
            <stringProp name="Argument.name">umysql</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql用户</stringProp>
          </elementProp>
          <elementProp name="umysql_password" elementType="Argument">
            <stringProp name="Argument.name">umysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql密码</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4密码</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4 mysql连接池</stringProp>
          </elementProp>
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.73)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4</stringProp>
          </elementProp>
          <elementProp name="filePath" elementType="Argument">
            <stringProp name="Argument.name">filePath</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\window\winno.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic" elementType="Argument">
            <stringProp name="Argument.name">topic</stringProp>
            <stringProp name="Argument.value">decision_tree_sink1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:mysql://${node}:3306/jmeter_istreamsql</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${umysql}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">9999999999</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">000</stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">number</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable topic" enabled="true">
        <stringProp name="maximumValue">200000</stringProp>
        <stringProp name="minimumValue">0</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed">abcdefg</stringProp>
        <stringProp name="variableName">num</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">6</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">\n</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">${filePath}</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">msg</stringProp>
        </CSVDataSet>
        <hashTree/>
        <org.apache.jmeter.protocol.kafka.sampler.KafkaSampler guiclass="org.apache.jmeter.protocol.kafka.control.gui.KafkaSamplerUI" testclass="org.apache.jmeter.protocol.kafka.sampler.KafkaSampler" testname="producer kafka message" enabled="true">
          <stringProp name="kafka.brokers">node6:9096</stringProp>
          <stringProp name="kafka.topic">${topic}</stringProp>
          <stringProp name="kafka.message">${msg}</stringProp>
          <stringProp name="kafka.message.serializer">kafka.serializer.StringEncoder</stringProp>
          <stringProp name="kafka.key.serializer">kafka.serializer.StringEncoder</stringProp>
        </org.apache.jmeter.protocol.kafka.sampler.KafkaSampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script"></stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">5000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="consumer kafka message" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import org.apache.kafka.clients.consumer.*;
import java.util.Properties;
import java.util.Arrays;
//import org.apache.kafka.common.serialization.StringDeserializer;

Properties props = new Properties();
props.put(&quot;bootstrap.servers&quot;,&quot;node6:9096&quot;);
props.put(&quot;group.id&quot;, &quot;1&quot;);
props.put(&quot;key.deserializer&quot;,&quot;org.apache.kafka.common.serialization.StringDeserializer&quot;);
props.put(&quot;value.deserializer&quot;,&quot;org.apache.kafka.common.serialization.StringDeserializer&quot;);

KafkaConsumer&lt;String, String&gt; consumer = new KafkaConsumer&lt;String, String&gt;(props);
consumer.subscribe(Arrays.asList(&quot;${topic}&quot;));

long t = System.currentTimeMillis();
  long end = t + 15000;
  f = new FileOutputStream(&quot;D:\apache-jmeter-4.0\decision_tree_sink1.txt&quot;, false);
  p = new PrintStream(f);
  while (System.currentTimeMillis()&lt;end) 
  {
      ConsumerRecords&lt;String, String&gt; records = consumer.poll(100);
      for (ConsumerRecord&lt;String, String&gt; record : records)
     {
         p.println( &quot;offset = &quot; + record.offset() +&quot; value = &quot; + record.value());
     }
     consumer.commitSync(); 	 
   }
   consumer.close();
   p.close();
   f.close();</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05 create  linkoopdb source" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;T_linkoopdb_source_白春红_01&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;T_linkoopdb_source_白春红_01&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 CREATE STREAM &quot;T_linkoopdb_source_白春红_01&quot; (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) Properties (&apos;TYPE&apos;: &apos;sourcE&apos;, &apos;Connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM &quot;T_linkoopdb_source_白春红_01&quot; (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) Properties (&apos;type&apos;: &apos;sourcE&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);




 

 



 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams-01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




 

 



 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-314226668">T_linkoopdb_source_白春红_01</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;T_linkoopdb_source_白春红_01&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;T_linkoopdb_source_白春红_01&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="649 SQL008-06 create  linkoopdb sink" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="649 SQL008-06 DROP STREAM IF EXISTS &quot;t_linkoopdb_sink_白春红_001&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;t_linkoopdb_sink_白春红_001&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="649 SQL008-06 create Stream &quot;t_linkoopdb_sink_白春红_001&quot; (&quot;#$&quot; int, R_REASON_ID string, R_REASON_DESC string) PROPERTIEs (&apos;type&apos;:&apos;sinK&apos;, &apos;connector&apos;:&apos;linkoopdb&apos;, &apos;path&apos;:&apos;/tmp/linkoopdb_sink&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create Stream &quot;t_linkoopdb_sink_白春红_001&quot; (&quot;#$&quot; int, R_REASON_ID string, R_REASON_DESC string) PROPERTIEs (&apos;type&apos;:&apos;sinK&apos;, &apos;connector&apos;:&apos;linkoopdb&apos;, &apos;path&apos;:&apos;/tmp/linkoopdb_sink&apos;); 

 


 


 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="649 SQL008-06 TC-show streams-01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




 

 



 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-869547350">&quot;t_linkoopdb_sink_白春红_001&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="649 SQL008-06 DROP STREAM IF EXISTS &quot;t_linkoopdb_sink_白春红_001&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;t_linkoopdb_sink_白春红_001&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="646 SQL008-04 create  jdbc source" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="646 SQL008-04 DROP STREAM IF EXISTS &quot;T_jdBC_source_白春红@#_01&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;T_jdBC_source_白春红@#_01&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="646 SQL008-04 CREATE STREAM &quot;T_jdBC_source_白春红@#_01&quot; (ID_1 int, &quot;$#&quot; string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbC&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test&apos; );   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM &quot;T_jdBC_source_白春红@#_01&quot; (ID_1 int, &quot;$#&quot; string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbC&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test&apos; );

 
 



 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="646 SQL008-04 TC-show streams-01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




 

 



 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-695751086">&quot;T_jdBC_source_白春红@#_01&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="646 SQL008-04 DROP STREAM IF EXISTS &quot;T_jdBC_source_白春红@#_01&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;T_jdBC_source_白春红@#_01&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02 create  jdbc sink" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS &quot;T_jdbc_sink_白春红$#_001&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;T_jdbc_sink_白春红$#_001&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  CREATE STREAM &quot;T_jdbc_sink_白春红$#_001&quot; (id_1 int, &quot;$#&quot; string) properties (&apos;type&apos;: &apos;sinK&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM &quot;T_jdbc_sink_白春红$#_001&quot; (id_1 int, &quot;$#&quot; string) properties (&apos;type&apos;: &apos;sinK&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );


 

 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-show streams-01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




 

 



 


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="495478732">&quot;T_jdbc_sink_白春红$#_001&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS &quot;T_jdbc_sink_白春红$#_001&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;T_jdbc_sink_白春红$#_001&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502 datatype" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-varchar cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tvarchar_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tvarchar_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_tvarchar_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_tvarchar_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tvarchar;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tvarchar;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.tvarchar(booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20)); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.tvarchar(booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20));
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.tvarchar values (&apos;true&apos;,&apos;iii9&apos;,&apos;-128&apos;,&apos;0.9786&apos;,&apos;10:09:09&apos;,&apos;2019-09-09 09:08:09&apos;,&apos;2019-09-08&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.tvarchar values (&apos;true&apos;,&apos;iii9&apos;,&apos;-128&apos;,&apos;0.9786&apos;,&apos;10:09:09&apos;,&apos;2019-09-09 09:08:09&apos;,&apos;2019-09-08&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502  CREATE STREAM t_dbsource_tvarchar_bch (booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tvarchar&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_tvarchar_bch (booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tvarchar&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists tvarchar;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table tvarchar(tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table tvarchar(tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 delete from  tvarchar;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 CREATE STREAM t_tvarchar_jdbcsink_bch (tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tvarchar&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_tvarchar_jdbcsink_bch (tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tvarchar&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_dbsource_tvarcharsink_bch select cast(booleanvarchar as Boolean),cast(tvarchar as varchar),cast(datavarchar as tinyint),cast(datavarchar as smallint),cast(datavarchar as INT),cast(datavarchar as bigint), cast(floatvarhcar as FLOAT),cast(floatvarhcar as double),cast(timevarchar as time),cast(timestampvarchar as timestamp),cast(datevarchar as date)from t_dbsource_tvarchar_bch;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_tvarchar_jdbcsink_bch select cast(booleanvarchar as Boolean),cast(tvarchar as varchar),cast(datavarchar as tinyint),cast(datavarchar as smallint),cast(datavarchar as INT),cast(datavarchar as bigint), cast(floatvarhcar as FLOAT),cast(floatvarhcar as double),cast(timevarchar as time),cast(timestampvarchar as timestamp),cast(datevarchar as date)from t_dbsource_tvarchar_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 TC-select *  from  tvarchar-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="930051924">true	iii9	-128	-128	-128	-128	0.9786	0.9786	10:09:09	2019-09-09 09:08:09.0	2019-09-08</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tvarchar_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tvarchar_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tvarcharsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tvarcharsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tvarchar;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tvarchar;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists tvarchar;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-boolean/tinyint/smallint cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tbootiny_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tbootiny_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_tbootiny_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_tbootiny_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tbootiny; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tbootiny;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.tbootiny(booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.tbootiny(booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.tbootiny values (true,127,-32768,-128);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.tbootiny values (true,127,-32768,-128);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502   CREATE STREAM t_dbsource_tbootiny_bch (booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tbootiny&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_tbootiny_bch (booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tbootiny&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists tbootiny;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table tbootiny(booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table tbootiny(booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  tbootiny;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 CREATE STREAM t_dbsource_tbootinysink_bch (booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tbootiny&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_tbootiny_jdbcsink_bch (booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tbootiny&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_dbsource_tbootinysink_bch select cast(booleanboolean as Boolean),cast(booleanboolean as varchar),cast(datatinyint as VARCHAR),cast(datatinyint as tinyint),cast(datatinyint as smallint),cast(datatinyint as INT),cast(datatinyint as bigint), cast(datatinyint as FLOAT),cast(datatinyint as double),cast(datasmallint as varchar),cast(tinysmallint as tinyint),cast(datasmallint as smallint),cast(datasmallint as INT),cast(datasmallint as bigint),cast(datasmallint as FLOAT),cast(datasmallint as double)from t_dbsource_tbootiny_bch;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_tbootiny_jdbcsink_bch select cast(booleanboolean as Boolean),cast(booleanboolean as varchar),cast(datatinyint as VARCHAR),cast(datatinyint as tinyint),cast(datatinyint as smallint),cast(datatinyint as INT),cast(datatinyint as bigint), cast(datatinyint as FLOAT),cast(datatinyint as double),cast(datasmallint as varchar),cast(tinysmallint as tinyint),cast(datasmallint as smallint),cast(datasmallint as INT),cast(datasmallint as bigint),cast(datasmallint as FLOAT),cast(datasmallint as double)from t_dbsource_tbootiny_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  tbootiny-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1107347313">true	true	127	127	127	127	127	127.0	127.0	-32768	-128	-32768	-32768	-32768	-32768.0	-32768.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tbootiny_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tbootiny_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tbootiny; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tbootiny;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tbootinysink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tbootinysink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists tbootiny;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-INT/bigint cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_intbigint_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_intbigint_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_intbigint_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_intbigint_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.intbigint; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.intbigint;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.intbigint(dataint int,databigint bigint); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.intbigint(dataint int,databigint bigint);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.intbigint values (127,-128);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.intbigint values (127,-128);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 CREATE STREAM t_dbsource_intbigint_bch (dataint int,databigint bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.intbigint&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_intbigint_bch (dataint int,databigint bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.intbigint&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists intbigint;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table intbigint(intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table intbigint(intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  intbigint;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502  CREATE STREAM t_intbigint_jdbcsink_bch (intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;intbigint&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_intbigint_jdbcsink_bch (intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;intbigint&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_intbigint_jdbcsink_bch select cast(dataint as varchar),cast(dataint as tinyint),cast(dataint as smallint),cast(dataint as int),cast(dataint as bigint),cast(dataint as float),cast(dataint as double),cast(databigint as varchar),cast(databigint as tinyint),cast(databigint as smallint),cast(databigint as int),cast(databigint as bigint),cast(databigint as float),cast(databigint as double)from t_dbsource_intbigint_bch;     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_intbigint_jdbcsink_bch select cast(dataint as varchar),cast(dataint as tinyint),cast(dataint as smallint),cast(dataint as int),cast(dataint as bigint),cast(dataint as float),cast(dataint as double),cast(databigint as varchar),cast(databigint as tinyint),cast(databigint as smallint),cast(databigint as int),cast(databigint as bigint),cast(databigint as float),cast(databigint as double)from t_dbsource_intbigint_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  intbigint-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-586559605">127	127	127	127	127	127.0	127.0	-128	-128	-128	-128	-128	-128.0	-128.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_intbigint_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_intbigint_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_intbigint_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_intbigint_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.intbigint; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.intbigint;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists intbigint;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-float/double cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_floatdou_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_floatdou_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_floatdou_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_floatdou_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.floatdou; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.floatdou;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.floatdou(datafloat float,datadouble double); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.floatdou(datafloat float,datadouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.floatdou values (126.98,-127.97);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.floatdou values (126.98,-127.97);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 CREATE STREAM t_dbsource_floatdou_bch (datafloat float,datadouble double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.floatdou&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_floatdou_bch (datafloat float,datadouble double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.floatdou&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists floatdou;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table floatdou(floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table floatdou(floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  floatdou;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 CREATE STREAM t_floatdou_jdbcsink_bch (floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;floatdou&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_floatdou_jdbcsink_bch (floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;floatdou&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_floatdou_jdbcsink_bch select cast(datafloat as varchar),cast(datafloat as tinyint),cast(datafloat as smallint),cast(datafloat as int),cast(datafloat as bigint),cast(datafloat as float),cast(datafloat as double),cast(datadouble as varchar),cast(datadouble as tinyint),cast(datadouble as smallint),cast(datadouble as int),cast(datadouble as bigint),cast(datadouble as float),cast(datadouble as double) from t_dbsource_floatdou_bch;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_floatdou_jdbcsink_bch select cast(datafloat as varchar),cast(datafloat as tinyint),cast(datafloat as smallint),cast(datafloat as int),cast(datafloat as bigint),cast(datafloat as float),cast(datafloat as double),cast(datadouble as varchar),cast(datadouble as tinyint),cast(datadouble as smallint),cast(datadouble as int),cast(datadouble as bigint),cast(datadouble as float),cast(datadouble as double) from t_dbsource_floatdou_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  floatdou-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1941728682">126.98	126	126	126	126	126.98	126.98	-127.97	-127	-127	-127	-127	-127.97	-127.97</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_floatdou_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_floatdou_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.floatdou; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.floatdou;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_floatdou_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_floatdou_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists floatdou;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-date/timestamp cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_timedata_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_timedata_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_timedata_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_timedata_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.timedata; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.timedata;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.timedata(datadate date,datatimestamp timestamp); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.timedata(datadate date,datatimestamp timestamp);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.timedata values (&apos;2018-09-07&apos;,&apos;2019-09-08 09:08:09&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.timedata values (&apos;2018-09-07&apos;,&apos;2019-09-08 09:08:09&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502   CREATE STREAM t_dbsource_timedata_bch (datadate date,datatimestamp timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.timedata&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_timedata_bch (datadate date,datatimestamp timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.timedata&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists timedata;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table timedata(datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp DEFAULT &apos;2019-09-08 09:08:09&apos;,time1 time); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table timedata(datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp DEFAULT &apos;2019-09-08 09:08:09&apos;,time1 time);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  timedata;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502  CREATE STREAM t_timedata_jdbcsink_bch (datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp,time1 time) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;timedata&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_timedata_jdbcsink_bch (datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp,time1 time) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;timedata&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_timedata_jdbcsink_bch select cast(datadate as varchar),cast(datadate as date),cast(datadate as timestamp),cast(datatimestamp as varchar),cast(datatimestamp as date),cast(datatimestamp as timestamp),cast(datatimestamp as time)from t_dbsource_timedata_bch;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_timedata_jdbcsink_bch select cast(datadate as varchar),cast(datadate as date),cast(datadate as timestamp),cast(datatimestamp as varchar),cast(datatimestamp as date),cast(datatimestamp as timestamp),cast(datatimestamp as time)from t_dbsource_timedata_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  timedata-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="245320772">2018-09-07	2018-09-07	2018-09-07 00:00:00.0	2019-09-08 09:08:09.0	2019-09-08	2019-09-08 09:08:09.0	09:08:09</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_timedata_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_timedata_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.timedata; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.timedata;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_timedata_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_timedata_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists timedata;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 Streaming SQL: Extra Build-in Functions" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -001" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  drop stream if exists  t_jdbcsource_acos_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 CREATE STREAM t_jdbcsource_acos_bch001 (id integer,data varchar(20), id1 decimal,name string,degree double,data1 varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;acos&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_acos_bch001 (id integer,data varchar(20), id1 decimal,name string,degree double,data1 varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;acos&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 TC-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select acos(id),atan(id), concat (&apos;a&apos;,space(id),&apos;b&apos;) ,log1p(id), ifnull(data,67),ifnull(id,67), find_in_set(data,&apos;a,b,c,12,q&apos;), COALESCE(NULL, NULL, data),COALESCE(NULL, 1, null),atan2(id, id),NVL(data,-1) ,NULLIF(ID,-1) , cos(degree),cot(degree) ,NANVL(CAST(&apos;NaN&apos; AS DOUBLE), 123), tanh(degree),sinh(degree),GET_JSON_OBJECT(&apos;{&quot;a&quot;:&quot;id1&quot;}&apos;, &apos;$.a&apos;),JSON_PATH(&apos;[{&quot;snumber&quot;:&quot;13011560889&quot;, &quot;enddate&quot;:&quot;12321312321&quot;,&quot;codetag&quot;:&quot;1&quot;},{&quot;snumber&quot;:&quot;18600010011&quot;, &quot;enddate&quot;:&quot;212212222&quot;, &quot;codetag&quot;:&quot;0&quot;},{&quot;snumber&quot;:&quot;13011560889&quot;, &quot;enddate&quot;:&quot;212212222&quot;, &quot;codetag&quot;:&quot;2&quot;},{&quot;snumber&quot;:&quot;13011560889&quot;, &quot;enddate&quot;:&quot;212212222&quot;, &quot;codetag&quot;:&quot;3&quot;}]&apos;,&apos;$[?(@.snumber == &quot;13011560889&quot;)].codetag&apos;)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1963742784">3.141592653589793	-0.7853981633974483	ab	-Infinity	12	-1	4	12	1	-2.356194490192345	12	null	-7.320510347335801E-8	-7.320510347335821E-8	123.0	0.9171523472945567	2.301299085991971	id1	[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="691975700">1.5707963267948966	0.0	ab	0.0	q	0	5	q	1	0.0	q	0	0.4999999577350132	0.5773502041184245	123.0	0.7807144544162621	1.24936712862342	id1	[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="2133020338">0.0	0.7853981633974483	a b	0.6931471805599453	67	1	null	null	1	0.7853981633974483	-1	1	0.8660253915835878	1.732050709962077	123.0	0.48047279692492	0.5478535017117947	id1	[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="232659109">1.5707963267948966	0.0	ab	0.0	67	0	null	null	1	0.0	-1	0	1.0	Infinity	123.0	0.0	0.0	id1	[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="-159139296">null	null	null	null	67	67	null	null	1	null	-1	null	1.0	Infinity	123.0	0.0	0.0	id1	[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_acos_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -002" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_datediff_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_datediff_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  CREATE STREAM t_jdbcsource_datediff_bch001 (time1 string,time2 string,time3 date,time4 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;datediff&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_datediff_bch001 (time1 string,time2 string,time3 date,time4 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;datediff&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 TC-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select DATEDIFF(time3,DATE &apos;2019-01-08&apos;),next_day(time4,&apos;TU&apos;),next_day(time3,&apos;TU&apos;),months_between(time3,DATE &apos;2019-01-08&apos;),last_day( time3),last_day( time4) from t_jdbcsource_datediff_bch001;

 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">DB支持date类型</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-11349814">0	2019-01-29 19:57:53.0	2019-01-15 00:00:00.0	0.0	2019-01-31 00:00:00.0	2019-01-31 19:57:53.0</stringProp>
                  <stringProp name="-979627664">14	2019-02-05 19:57:59.0	2019-01-29 00:00:00.0	0.45161290322580644	2019-01-31 00:00:00.0	2019-02-28 19:57:59.0</stringProp>
                  <stringProp name="-1673979436">3	2019-01-15 19:58:02.0	2019-01-15 00:00:00.0	0.0967741935483871	2019-01-31 00:00:00.0	2019-01-31 19:58:02.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_datediff_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_datediff_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -003" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 -  CREATE STREAM t_jdbcsink_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch001 (tABS int,tASIN double,tBIN string,tDAYOFMONTH bigint,tDAYOFYEAR bigint, tELTt string,tFLOOR decimal, tINITCAP string,tIFNULL int,tISNOTNULL boolean,tMINUTE bigint,tMONTH bigint,tPMOD double, tYEAR bigint ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function&apos;);


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02   insert into t_jdbcsink_last_bch001  select ABS(-1),ASIN(0),BIN(13),DAYOFMONTH(DATE &apos;2009-07-30&apos;),DAYOFYEAR(DATE &apos;2016-04-09&apos;), ELT(1, &apos;scala&apos;, &apos;java&apos;),FLOOR(-0.1), INITCAP(&apos;LINKOOPDB&apos;),IFNULL(NULL, 1),ISNOTNULL(123),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MONTH(DATE &apos;1994-09-27&apos;),PMOD(-10, 3), YEAR(DATE &apos;1994-09-27&apos;)from t_jdbcsource_last_bch001;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch001  select ABS(-1),ASIN(0),BIN(13),DAYOFMONTH(DATE &apos;2009-07-30&apos;),DAYOFYEAR(DATE &apos;2016-04-09&apos;), ELT(1, &apos;scala&apos;, &apos;java&apos;),FLOOR(-0.1), INITCAP(&apos;LINKOOPDB&apos;),IFNULL(NULL, 1),ISNOTNULL(123),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MONTH(DATE &apos;1994-09-27&apos;),PMOD(-10, 3), YEAR(DATE &apos;1994-09-27&apos;)from t_jdbcsource_last_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 TC-03" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="398616151">1	0.0	1101	30	100	scala	-1	Linkoopdb	1	true	14	9	2.0	1994</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -004 E  WEEK 有问题与实际结果相差一周" enabled="true">
            <stringProp name="TestPlan.comments">WEEK 有问题与实际结果相差一周</stringProp>
          </GenericController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch004;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch004</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsink_last_bch004" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch004 (data1 string, tCHAR_LENGTH int,tCHARACTER_LENGTH int,tDATE date,tTIME time,tTIMESTAMP timestamp,tQUARTER bigint,tWEEK int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function3&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function3;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  insert into t_jdbcsink_last_bch004  select &apos;F&apos; || &apos;U&apos;, CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),DATE &apos;2018-09-10&apos;,TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;,QUARTER(DATE &apos;1994-09-27&apos;),WEEK(DATE &apos;1994-09-27&apos;) from t_jdbcsource_last_bch001;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch004  select &apos;F&apos; || &apos;U&apos;, CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),DATE &apos;2018-09-10&apos;,TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;,QUARTER(DATE &apos;1994-09-27&apos;),WEEK(DATE &apos;1994-09-27&apos;) from t_jdbcsource_last_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 TC-04" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1890535433">FU	11	11	2018-09-10	23:09:06	2018-09-10 10:09:08.0	3	39</stringProp>
                  <stringProp name="-1890535411">FU	11	11	2018-09-10	23:09:06	2018-09-10 10:09:08.0	3	40</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch004;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch004</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -005" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch005;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch005;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_last_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsink_last_bch005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch005 (tDISTINCT Boolean,tnotDISTINCTtDATE Boolean,tboolean boolean,tboolean1 boolean,tin boolean,tnotin boolean,tor boolean,tisnot boolean,tand boolean,tunknown boolean,tSUBSTRING string,tNULLIF int,te double,tSIGN int,tceiling decimal,tRAND double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function4&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function4;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  insert into t_jdbcsink_last_bch005  select 4 IS DISTINCT FROM 5, 4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL, 1 in (1,2,3,4),12 not in (1,2,3,4),true or false,false is not true,true and false,true IS UNKNOWN, SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5), NULLIF(5, 5) ,e(), SIGN(-8), ceiling(-2.45),RAND (2) from t_jdbcsource_last_bch001;   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch005  select 4 IS DISTINCT FROM 5, 4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL, 1 in (1,2,3,4),12 not in (1,2,3,4),true or false,false is not true,true and false,true IS UNKNOWN, SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5), NULLIF(5, 5) ,e(), SIGN(-8), ceiling(-2.45),RAND (2) from t_jdbcsource_last_bch001;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 TC-05" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1393010329">true	true	false	true	true	true	true	true	false	false	ghdddrrty55	null	2.718281828459045	-1	-2	1.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch005;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch005;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_last_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 CEP SQL支持" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 ORDER BY proctime  PARTITION BY key1, key2" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists T_JDBCSOURCE_CEP_BCH001; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists T_JDBCSOURCE_CEP_BCH001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch019;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch019;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch001 (id Int, name String, key1 String, key2 String)" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch001 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;proctime&apos;:&apos;proctime&apos;, &apos;tableName&apos;: &apos;cep11&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_jdbcsink_cep_bch019" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch019 (KEY1 String, KEY2 String, AID int , AKEY1 String, BID Integer, CID Integer, CKEY2 String) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep19_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep19_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep19_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 Insert into t_jdbcsink_cep_bch019" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch019 SELECT *
         FROM t_jdbcsource_cep_bch001
         MATCH_RECOGNIZE (
           PARTITION BY key1, key2
           ORDER BY proctime
           MEASURES
            A.id AS aid,
             A.key1 AS akey1,
             LAST(B.id) AS bid,
             C.id AS cid,
             C.key2 AS ckey2
           PATTERN (A B C)
           DEFINE
             A AS name = &apos;a&apos; AND key1 LIKE &apos;%key%&apos; AND id &gt; 0,
             B AS name = &apos;b&apos; AND LAST(A.name, 2) IS NULL,
             C AS name = &apos;c&apos; AND LAST(A.name) = &apos;a&apos;
         ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments"> ORDER BY proctime</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep19_sink-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep19_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-239327468">key1	second_key3	1	key1	2	3	second_key3</stringProp>
                  <stringProp name="-1122261703">key2	second_key4	6	key2	7	8	second_key4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists T_JDBCSOURCE_CEP_BCH001; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists T_JDBCSOURCE_CEP_BCH001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch019;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch019;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 DEFINE  DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL," enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists T_JDBCSOURCE_CEP_BCH003;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists T_JDBCSOURCE_CEP_BCH003;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch003 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp)" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch003 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch021;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch021;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_jdbcsink_cep_bch021" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch021 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep21_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep21_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep21_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch021" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch021 SELECT *
FROM t_jdbcsource_cep_bch003
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  ONE ROW PER MATCH
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep21_sink-02;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep21_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="352277178">19	13	null	20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 PATTERN (DOWN{2,} UP)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists T_JDBCSOURCE_CEP_BCH003;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists T_JDBCSOURCE_CEP_BCH003;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_jdbcsource_cep_bch003 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp)" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch003 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch022;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch022;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_jdbcsink_cep_bch022" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch022 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep22_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep22_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep22_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch022" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch022 SELECT *
FROM t_jdbcsource_cep_bch003
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">ONE ROW PER MATCH</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep22_sink-03;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep22_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="352277178">19	13	null	20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 ORDER BY myrowtime,tax" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists T_JDBCSOURCE_CEP_BCH003;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists T_JDBCSOURCE_CEP_BCH003;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch003 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp)" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch003 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch026; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch026;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_jdbcsink_cep_bch026" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch026 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep26_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep26_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep26_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch026" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch026 SELECT *
FROM t_jdbcsource_cep_bch003
MATCH_RECOGNIZE (
  ORDER BY  myrowtime,tax
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">ORDER BY 多个字段,时间第一个</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep26_sink-04;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep26_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="352277178">19	13	null	20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 DB Worker 支持 RPC的 AI服务" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 DB EXTERNAL_MODEL" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 model_em_predict " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-DROP MODEL ex_model_dt IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ex_model_dt IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create model model_em_predict as load_external_model" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model ex_model_dt as load_external_model( 
 &apos;hdfs:///node5/studio/gengchenyu/file/m1&apos;, 
 &apos;python&apos;, 
 &apos;tf_decision_tree&apos;, 
 &apos;dnn.alg&apos;, 
 &apos;dnn.alg.load&apos;, 
 &apos;dnn.alg.predict&apos; 
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create stream model_em_predict" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream model_em_predict(
features double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;model_em_predict&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;model_em_predict_010&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create stream model_em_predict_sink" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream model_em_predict_sink(
PREDICTION double 
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;model_em_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;model_em_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-insert into model_em_predict_sink SELECT PREDICTION FROM PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into model_em_predict_sink SELECT PREDICTION FROM PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB SHOW JOBS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB SHOW JOBS E;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1434314148">insert into model_em_predict_sink SELECT PREDICTION FROM PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict)</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 DB OTHERS_MODEL" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="decision_tree_regression_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream  if exists decision_tree_regression_dbsource;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists decision_tree_regression_dbsource;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists decision_tree_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists decision_tree_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-CREATE TABLE DECISION_TREE_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE DECISION_TREE_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-INSERT INTO DECISION_TREE_REGRESSION_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO DECISION_TREE_REGRESSION_TRAIN_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-CREATE MODEL DECISION_TREE_REGRESSION_MODEL AS DECISION_TREE_REGRESSION_TRAIN(DECISION_TREE_REGRESSION_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL DECISION_TREE_REGRESSION_MODEL AS DECISION_TREE_REGRESSION_TRAIN(DECISION_TREE_REGRESSION_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop table if exists streamsql.decision_tree_regression;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.decision_tree_regression;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.decision_tree_regression(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.decision_tree_regression(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-INSERT INTO streamsql.decision_tree_regression VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.decision_tree_regression VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-CREATE STREAM gaussian_mixture_dbsource " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM decision_tree_regression_dbsource (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.decision_tree_regression&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create stream decision_tree_sink" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream decision_tree_sink(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-insert into decision_tree_sink SELECT * from decision_tree_regression_predict(DECISION_TREE_REGRESSION_MODEL,decision_tree_regression_dbsource);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into decision_tree_sink SELECT * from decision_tree_regression_predict(DECISION_TREE_REGRESSION_MODEL,decision_tree_regression_dbsource);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="decision_tree_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DT_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DT_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream  if exists decision_tree_dbsource;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists decision_tree_dbsource;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists decision_tree_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists decision_tree_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop table if exists DT_TRAINING_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DT_TRAINING_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-CREATE TABLE DT_TRAINING_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE DT_TRAINING_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-INSERT INTO DT_TRAINING_DATA" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO DT_TRAINING_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]),
 (2, ARRAY[0, 0, 1]),
 (2, ARRAY[0, 0, 2]),
 (2, ARRAY[0, 0, 3]),
 (2, ARRAY[0, 0, 4]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-CREATE MODEL DT_MODEL AS DECISION_TREE_TRAIN(DT_TRAINING_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL DT_MODEL AS DECISION_TREE_TRAIN(DT_TRAINING_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop table if exists streamsql.decision_tree;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.decision_tree;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11CREATE TABLE streamsql.decision_tree(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.decision_tree(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-INSERT INTO streamsql.decision_tree VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.decision_tree VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-CREATE STREAM decision_tree_dbsource (features double array)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM decision_tree_dbsource (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.decision_tree&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create stream decision_tree_sink" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream decision_tree_sink(
Features double array,
Prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-insert into decision_tree_sink SELECT *  from decision_tree_predict(DT_MODEL, decision_tree_sink);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into decision_tree_sink SELECT * from decision_tree_predict(DT_MODEL, decision_tree_dbsource);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="157585307">{&quot;FEATURES&quot;:[0.2,0.4,3.0],&quot;PREDICTION&quot;:2.0}</stringProp>
                    <stringProp name="157585307">{&quot;FEATURES&quot;:[0.2,0.4,3.0],&quot;PREDICTION&quot;:2.0}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08 Functions(Same with LinkoopDB) " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08-UDF" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08 -no inherit-function" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop function if exists T_STRING_bch_01; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists T_STRING_bch_01;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop STREAM if exists aaaaa;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists aaaaa;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 CREATE STREAM aaaaa (id Int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;aaaaa&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM aaaaa (id Int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;aaaaa&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 CREATE FUNCTION T_STRING_bch_01(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION T_STRING_bch_01(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -TC-string-01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select T_STRING_bch_01(2,19) from aaaaa;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1552630">2@19</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop function if exists T_STRING_bch_01; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists T_STRING_bch_01;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop STREAM if exists aaaaa;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists aaaaa;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 兼容 istream语法 开窗函数" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 event time" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 tumble" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_TUMPLE_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsource_TUMPLE_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_tumble_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_tumble_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.ROWTIME;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.ROWTIME;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE table streamsql.ROWTIME (id integer,users string, amount double,time1 timestamp);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE table streamsql.ROWTIME (id integer,users string, amount double,time1 timestamp);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO streamsql.ROWTIME VALUES(id integer,users string, amount double,time1 timestamp);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.ROWTIME VALUES(45,&apos;chenhe&apos;,4567,&apos;2018-11-26 01:44:33&apos;),(23,&apos;lichen&apos;,4578,&apos;2018-11-25 09:43:25&apos;),(67, &apos;lichen &apos; , 2390, &apos;2018-11-25 09:56:58&apos;),( 9, &apos;lichen &apos; ,   76, &apos;2018-11-26 08:57:39&apos;),(34, &apos;lily&apos;, 2345, &apos;2018-11-23 09:42:47&apos;),(32, &apos;dengchao&apos;, 3456, &apos;2018-11-22 09:42:18&apos;),(12, &apos;lichen &apos; , 1234, &apos;2018-11-21 09:41:54&apos;);




</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists tumblesink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists tumblesink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE table tumblesink (sta_time timestamp,end_time timestamp default &apos;2019-09-09 09:09:09&apos;, users varchar(20));" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE table tumblesink (sta_time timestamp,end_time timestamp default &apos;2019-09-09 09:09:09&apos;, users varchar(20));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_jdbcsink_tumble_bch_01 (sta_time timestamp,end_time timestamp, users varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tumblesink&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_tumble_bch_01 (sta_time timestamp,end_time timestamp, users varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tumblesink&apos;);






</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE STREAM t_dbcsource_TUMPLE_bch_01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.ROWTIME&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_dbsource_TUMPLE_bch_01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.ROWTIME&apos;);




</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 insert into t_jdbcsink_tumble_bch_01 SELECT TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; DAY), TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; DAY), users FROM t_dbsource_TUMPLE_bch_01  GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink_tumble_bch_01 SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; DAY),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; DAY),
users
FROM t_dbsource_TUMPLE_bch_01 
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 TC-SELECT * FROM tumblesink -01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM tumblesink;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1889186562">2018-11-21 00:00:00.0	2018-11-22 00:00:00.0	lichen </stringProp>
                    <stringProp name="1328718694">2018-11-22 00:00:00.0	2018-11-23 00:00:00.0	dengchao</stringProp>
                    <stringProp name="-1484023643">2018-11-23 00:00:00.0	2018-11-24 00:00:00.0	lily</stringProp>
                    <stringProp name="-1483156886">2018-11-25 00:00:00.0	2018-11-26 00:00:00.0	lichen</stringProp>
                    <stringProp name="1266776822">2018-11-25 00:00:00.0	2018-11-26 00:00:00.0	lichen </stringProp>
                    <stringProp name="982025844">2018-11-26 00:00:00.0	2018-11-27 00:00:00.0	lichen </stringProp>
                    <stringProp name="-226842196">2018-11-26 00:00:00.0	2018-11-27 00:00:00.0	chenhe</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_TUMPLE_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsource_TUMPLE_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_tumble_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_tumble_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.ROWTIME;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.ROWTIME;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists tumblesink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists tumblesink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 hop" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_hop_bch_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsource_hop_bch_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_HOP_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_HOP_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.HOP;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.HOP;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  streamsql.HOP(id integer,users string, amount double,time1 timestamp);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table  streamsql.HOP(id integer,users string, amount double,time1 timestamp);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 insert into streamsql.HOP values  (67,&apos;lichen&apos;  ,2390.0E0,&apos;2018-11-25 09:56:58&apos;),(45,&apos;chenhe &apos; ,4567.0E0,&apos;2018-11-26 01:44:33&apos;),(34,&apos;lily &apos;   ,2345.0E0,&apos;2018-11-23 09:42:47&apos;),( 9,&apos;lichen &apos; ,  76.0E0,&apos;2018-11-26 08:57:39&apos;),(23,&apos;lichen&apos;  ,4578.0E0,&apos;2018-11-25 09:43:25&apos;),(32,&apos;dengchao&apos;,3456.0E0,&apos;2018-11-22 09:42:18&apos;),(12,&apos;lichen&apos;  ,1234.0E0,&apos;2018-11-21 09:41:54&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into streamsql.HOP values 
(67,&apos;lichen&apos;  ,2390.0E0,&apos;2018-11-25 09:56:58&apos;),(45,&apos;chenhe &apos; ,4567.0E0,&apos;2018-11-26 01:44:33&apos;),(34,&apos;lily &apos;   ,2345.0E0,&apos;2018-11-23 09:42:47&apos;),( 9,&apos;lichen &apos; ,  76.0E0,&apos;2018-11-26 08:57:39&apos;),(23,&apos;lichen&apos;  ,4578.0E0,&apos;2018-11-25 09:43:25&apos;),(32,&apos;dengchao&apos;,3456.0E0,&apos;2018-11-22 09:42:18&apos;),(12,&apos;lichen&apos;  ,1234.0E0,&apos;2018-11-21 09:41:54&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE STREAM t_dbsource_hop_bch_001 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;admin&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;streamsql.HOP&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_dbsource_hop_bch_001 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.HOP&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists HOPSINK;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists HOPSINK;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  HOPSINK(sta_time timestamp,end_time timestamp, users string,amount double);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table  HOPSINK(sta_time timestamp ,end_time timestamp DEFAULT &apos;2019-09-09 09:09:09&apos;, users VARCHAR(20),amount double);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users string,amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;HOPSINK&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users string,amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;HOPSINK&apos;);






</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  INSERT INTO t_dbsink_HOP_bch_001 SELECT    HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),   HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),   users, SUM(amount) FROM t_dbsource_hop_bch_001 GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> INSERT INTO  t_jdbcsink_HOP_bch_01 SELECT 
  HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  users, SUM(amount)
FROM t_dbsource_hop_bch_001
GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 TC-hop-02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT *  FROM  HOPSINK;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1022352701">2018-11-21 09:41:00.0	2018-11-21 09:42:00.0	lichen	1234.0</stringProp>
                    <stringProp name="371170237">2018-11-21 09:41:30.0	2018-11-21 09:42:30.0	lichen	1234.0</stringProp>
                    <stringProp name="-1804583111">2018-11-22 09:41:30.0	2018-11-22 09:42:30.0	dengchao	3456.0</stringProp>
                    <stringProp name="281886909">2018-11-22 09:42:00.0	2018-11-22 09:43:00.0	dengchao	3456.0</stringProp>
                    <stringProp name="-1640701252">2018-11-23 09:42:00.0	2018-11-23 09:43:00.0	lily 	2345.0</stringProp>
                    <stringProp name="-348822910">2018-11-23 09:42:30.0	2018-11-23 09:43:30.0	lily 	2345.0</stringProp>
                    <stringProp name="-117363693">2018-11-25 09:42:30.0	2018-11-25 09:43:30.0	lichen	4578.0</stringProp>
                    <stringProp name="-1795637609">2018-11-25 09:43:00.0	2018-11-25 09:44:00.0	lichen	4578.0</stringProp>
                    <stringProp name="1348677577">2018-11-25 09:56:00.0	2018-11-25 09:57:00.0	lichen	2390.0</stringProp>
                    <stringProp name="-1552766781">2018-11-25 09:56:30.0	2018-11-25 09:57:30.0	lichen	2390.0</stringProp>
                    <stringProp name="1303203671">2018-11-26 01:44:00.0	2018-11-26 01:45:00.0	chenhe 	4567.0</stringProp>
                    <stringProp name="1552741789">2018-11-26 01:44:30.0	2018-11-26 01:45:30.0	chenhe 	4567.0</stringProp>
                    <stringProp name="1117670890">2018-11-26 08:57:00.0	2018-11-26 08:58:00.0	lichen 	76.0</stringProp>
                    <stringProp name="-1885418064">2018-11-26 08:57:30.0	2018-11-26 08:58:30.0	lichen 	76.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_hop_bch_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsource_hop_bch_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsink_HOP_bch_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsink_HOP_bch_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 session" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_session_bch01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsource_session_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.SESSION;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.SESSION;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_HOP_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_HOP_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE table streamsql.SESSION (users VARCHAR(20), clicks VARCHAR(20),time1 timestamp);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE table streamsql.SESSION (users VARCHAR(20), clicks VARCHAR(20),time1 timestamp);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO streamsql.SESSION VALUES(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:58&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:00&apos;),(&apos;Timo&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:02:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:05&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:49&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.SESSION VALUES(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:58&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:00&apos;),(&apos;Timo&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:02:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:05&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:49&apos;);




</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists SESSIONSINK;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists SESSIONSINK;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  SESSIONSINK(sta_time timestamp,end_time timestamp DEFAULT &apos;2019-09-09 09:09:09&apos;, users VARCHAR(20),amount BIGINT);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table  SESSIONSINK(sta_time timestamp,end_time timestamp DEFAULT &apos;2019-09-09 09:09:09&apos;, users VARCHAR(20),amount BIGINT);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users string,amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;HOPSINK&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users VARCHAR(20),amount BIGINT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;SESSIONSINK&apos;);






</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_dbsource_session_bch01 (users string, clicks string,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.SESSION&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_dbsource_session_bch01 (users string, clicks string,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.SESSION&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 insert into t_jdbcsink_HOP_bch_01 SELECT  SESSION_START(myrowtime, INTERVAL &apos;30&apos; SECOND), SESSION_END(myrowtime, INTERVAL &apos;30&apos; SECOND), users,  COUNT(clicks) FROM t_dbsource_session_bch01 GROUP BY SESSION(myrowtime, INTERVAL &apos;30&apos; SECOND), users;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink_HOP_bch_01 SELECT 
SESSION_START(myrowtime, INTERVAL &apos;30&apos; SECOND),
SESSION_END(myrowtime, INTERVAL &apos;30&apos; SECOND),
users, 
COUNT(clicks)
FROM t_dbsource_session_bch01
GROUP BY SESSION(myrowtime, INTERVAL &apos;30&apos; SECOND), users;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 TC-SESSION-01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM SESSIONSINK;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="388300469">2017-10-10 10:00:00.0	2017-10-10 10:00:40.0	Jark	2</stringProp>
                    <stringProp name="-146557205">2017-10-10 10:00:49.0	2017-10-10 10:01:35.0	Jark	2</stringProp>
                    <stringProp name="-1975608854">2017-10-10 10:01:58.0	2017-10-10 10:02:28.0	Jark	1</stringProp>
                    <stringProp name="1362313888">2017-10-10 10:02:10.0	2017-10-10 10:02:40.0	Timo	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_session_bch01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsource_session_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_HOP_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_HOP_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.SESSION;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.SESSION;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists SESSIONSINK;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists SESSIONSINK;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 proc time E   已提bug,issue号：1147" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 tumble" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_proc_bch_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_proc_bch_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_TUMPLE_PROC_bch01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dbsource_TUMPLE_PROC_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.PROCTIME1;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.PROCTIME1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists PROCSINK;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists PROCSINK;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  PROCSINK( users VARCHAR(20),SUMID BIGINT);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table  PROCSINK(users VARCHAR(50),sumid int);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE table streamsql.PROCTIME1 (id integer,users VARCHAR(50));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE table streamsql.PROCTIME1 (id integer,users VARCHAR(50));
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO streamsql.PROCTIME1 VALUES (3 ,&apos;C  &apos; ),( 4,&apos; D &apos; ),( 5,&apos; E &apos; ),( 6,&apos; F &apos; ),(12,&apos; AB&apos; ),( 1,&apos; A &apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.PROCTIME1 VALUES (3,&apos;C&apos;),( 4,&apos;D&apos;),(5,&apos;E&apos;),(6,&apos;F&apos;),(12,&apos;AB&apos;),(1,&apos;A&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06   CREATE STREAM t_jdbcsink_proc_bch_01 ( users VARCHAR(20),SUMID BIGINT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;PROCSINK&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_proc_bch_01 (users VARCHAR(50),sumid int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;PROCSINK&apos;);





</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_dbsource_TUMPLE_PROC_bch01 (id integer,users string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;proctime&apos;:&apos;proctime&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.PROCTIME&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_dbsource_TUMPLE_PROC_bch01 (id integer,users VARCHAR(50)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;proctime&apos;:&apos;proctime&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.PROCTIME1&apos;);






</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO t_jdbcsink_proc_bch_01 SELECT users, SUM(id) FROM t_dbsource_TUMPLE_PROC_bch01 GROUP BY TUMBLE(proctime, INTERVAL &apos;1&apos; DAY), users; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">INSERT INTO t_jdbcsink_proc_bch_01 SELECT users, SUM(id)
FROM t_dbsource_TUMPLE_PROC_bch01
GROUP BY TUMBLE(proctime, INTERVAL &apos;1&apos; SECOND), users;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 TC-proc-01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from PROCSINK;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="7901327">lichen                    1234.0</stringProp>
                    <stringProp name="-1962404233">dengchao                   3456.0</stringProp>
                    <stringProp name="-813142054">lily                     2345.0</stringProp>
                    <stringProp name="157604946">lichen                    6968.0</stringProp>
                    <stringProp name="-495296532">lichen                      76.0</stringProp>
                    <stringProp name="-285609009">chenhe                    4567.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="803 SQL105 create view" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="803 SQL105 DROP VIEW IF EXISTS v_jdbcsource_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v_jdbcsource_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="803 SQL105 DROP STREAM IF EXISTS t_VIEW_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS t_VIEW_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="803 SQL105  CREATE STREAM t_VIEW_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_VIEW_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="803 SQL105 CREATE VIEW v_jdbcsource_bch_01 AS SELECT id from t_VIEW_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE VIEW v_jdbcsource_bch_01 AS SELECT id from t_VIEW_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="803 SQL105 TC-SHOW VIEWS-01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW VIEWS;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="348494489">V_JDBCSOURCE_BCH_01	PUBLIC</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="803 SQL105 DROP VIEW IF EXISTS v_jdbcsource_smint3_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v_jdbcsource_smint3_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 Streaming SQL: DQL select " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test aggregate function" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_aggregate_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_aggregate_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_aggregate_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_aggregate_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- aggregation-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id),min(id),sum(id),count(id),avg(id),stddev_pop(id),var_pop(id) from t_aggregate_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2120290294">10	4	20	3	6	2	6</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_aggregate_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_aggregate_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test select * from stream" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_selectall_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_selectall_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_selectall_bch_02 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_selectall_bch_02 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-select * from stream-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from t_jdbcsource_bch005 where name in(select name from t_jdbcsource_bch006);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="911931782">1	zulan</stringProp>
                  <stringProp name="358839427">3	dengchao</stringProp>
                  <stringProp name="555352932">2	dengchao</stringProp>
                  <stringProp name="160516821">5	sunli</stringProp>
                  <stringProp name="1048020502">6	sunli</stringProp>
                  <stringProp name="1974163733">10	lichen</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_selectall_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_selectall_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 select expression from stream" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201  Comparison functions" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_selectall_bch_03;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_selectall_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_selectall_sink_bch_03;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_selectall_sink_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists selectall_sink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists selectall_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create  table selectall_sink(data1 boolean,data2 boolean,data3 boolean,data4 boolean);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table selectall_sink(data1 boolean,data2 boolean,data3 boolean,data4 boolean);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 delete from selectall_sink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">delete from selectall_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_selectall_bch_03 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_selectall_bch_03 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_selectall_sink_bch_03 (data1 boolean,data2 boolean,data3 boolean,data4 boolean,) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;selectall_sink&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_selectall_sink_bch_03 (data1 boolean,data2 boolean,data3 boolean,data4 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;selectall_sink&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_selectall_sink_bch_03 select 2&gt;1,4 IS DISTINCT FROM 5,4 IS not NULL, 1 in (1,2,3,4) from t_selectall_bch_03;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_selectall_sink_bch_03 select 2&gt;1,4 IS DISTINCT FROM 5,4 IS not NULL, 1 in (1,2,3,4) from t_selectall_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">&apos;abc&apos; SIMILAR TO &apos;%(b|d)%&apos;,</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-select *  from selectall_sink-01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select *  from selectall_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1920543593">true	true	true	true</stringProp>
                    <stringProp name="1920543593">true	true	true	true</stringProp>
                    <stringProp name="1920543593">true	true	true	true</stringProp>
                    <stringProp name="1920543593">true	true	true	true</stringProp>
                    <stringProp name="1920543593">true	true	true	true</stringProp>
                    <stringProp name="1920543593">true	true	true	true</stringProp>
                    <stringProp name="1920543593">true	true	true	true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_selectall_bch_03;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_selectall_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_selectall_sink_bch_03;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_selectall_sink_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists selectall_sink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists selectall_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Arithmetic functions" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Arithmetic_bch_04;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Arithmetic_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Arithmetic_sink_bch_04;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Arithmetic_sink_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Arithmetic_sink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists Arithmetic_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_Arithmetic_bch_04 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_Arithmetic_bch_04 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_Arithmetic_sink_bch_04 (data1 int,data2 double,data3 double,data4 Decimal) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;Arithmetic_sink&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_Arithmetic_sink_bch_04 (data1 int,data2 double,data3 double,data4 Decimal) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;Arithmetic_sink&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create  table Arithmetic_sink(data1 int,data2 double,data3 double,data4 BigDecimal);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table Arithmetic_sink(data1 int,data2 double,data3 double,data4 Decimal);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 delete from Arithmetic_sink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">delete from Arithmetic_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_Arithmetic_sink_bch_04 select 2*7,POWER(2,3),SQRT(9),FLOOR(3.45) from t_Arithmetic_bch_04;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_Arithmetic_sink_bch_04 select 2*7,POWER(2,3),SQRT(9),FLOOR(3.45) from t_Arithmetic_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">&apos;abc&apos; SIMILAR TO &apos;%(b|d)%&apos;,</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-select *  from Arithmetic_sink-01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select *  from Arithmetic_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1692618698">14	8.0	3.0	3</stringProp>
                    <stringProp name="1692618698">14	8.0	3.0	3</stringProp>
                    <stringProp name="1692618698">14	8.0	3.0	3</stringProp>
                    <stringProp name="1692618698">14	8.0	3.0	3</stringProp>
                    <stringProp name="1692618698">14	8.0	3.0	3</stringProp>
                    <stringProp name="1692618698">14	8.0	3.0	3</stringProp>
                    <stringProp name="1692618698">14	8.0	3.0	3</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Arithmetic_bch_04;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Arithmetic_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Arithmetic_sink_bch_04;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Arithmetic_sink_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Arithmetic_sink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists Arithmetic_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201  String functions" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Stringfunctions_bch_05;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Stringfunctions_bch_05;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Stringfunctions_sink_bch_05;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Stringfunctions_sink_bch_05;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Stringfunctions;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists Stringfunctions;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create  table Stringfunctions(data1 varchar(20),data2 varchar(20),data3 varchar(20),data4 decimal);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table Stringfunctions(data1 varchar(20),data2 varchar(20),data3 varchar(20),data4 int);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_Stringfunctions_bch_05 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_Stringfunctions_bch_05 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201   CREATE STREAM t_Stringfunctions_sink_bch_05 (data1 varchar(20),data2 varchar(20),data3 varchar(20),data4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;Stringfunctions&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_Stringfunctions_sink_bch_05 (data1 varchar(20),data2 varchar(20),data3 varchar(20),data4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;Stringfunctions&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 delete from Stringfunctions;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">delete from Stringfunctions;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_Stringfunctions_sink_bch_05 select UPPER(&apos;zulan&apos;),LOWER(&apos;AAA3&apos;),CONCAT(&apos;34&apos;,&apos;gg&apos;,&apos;AA&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;) from t_Stringfunctions_bch_05;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_Stringfunctions_sink_bch_05 select UPPER(&apos;zulan&apos;),LOWER(&apos;AAA3&apos;),CONCAT(&apos;34&apos;,&apos;gg&apos;,&apos;AA&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;) from t_Stringfunctions_bch_05;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">&apos;abc&apos; SIMILAR TO &apos;%(b|d)%&apos;,</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-select *  from Stringfunctions-01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select *  from Stringfunctions;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="816425276">ZULAN	aaa3	34ggAA	11</stringProp>
                    <stringProp name="816425276">ZULAN	aaa3	34ggAA	11</stringProp>
                    <stringProp name="816425276">ZULAN	aaa3	34ggAA	11</stringProp>
                    <stringProp name="816425276">ZULAN	aaa3	34ggAA	11</stringProp>
                    <stringProp name="816425276">ZULAN	aaa3	34ggAA	11</stringProp>
                    <stringProp name="816425276">ZULAN	aaa3	34ggAA	11</stringProp>
                    <stringProp name="816425276">ZULAN	aaa3	34ggAA	11</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Stringfunctions_bch_05;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Stringfunctions_bch_05;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Stringfunctions_sink_bch_05;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Stringfunctions_sink_bch_05;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Stringfunctions;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists Stringfunctions;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Temporal functions" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Temporal_bch_06;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Temporal_bch_06;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Temporal_SINK_bch_06;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Temporal_SINK_bch_06;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Temporal;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists Temporal;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create  table Temporal(data1 date,data2 time,data3 timestamp,data4 bigint);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create  table Temporal(data1 date,data2 time,data3 timestamp,data4 bigint);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201   CREATE STREAM t_Temporal_SINK_bch_06 (data1 date,data2 time,data3 timestamp,data4 bigint) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;Temporal&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_Temporal_SINK_bch_06 (data1 date,data2 time,data3 timestamp,data4 bigint) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;Temporal&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_Stringfunctions_bch_05 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_Temporal_bch_06 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 delete from Temporal;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">delete from Temporal;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_Temporal_SINK_bch_06 select DATE &apos;2018-09-10&apos;,TIME &apos;23:09:06&apos;, TIMESTAMP &apos;2018-09-10 10:09:08&apos;,HOUR(TIMESTAMP &apos;1994-09-27 13:14:15&apos;) from t_Temporal_bch_06;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_Temporal_SINK_bch_06 select DATE &apos;2018-09-10&apos;,TIME &apos;23:09:06&apos;, TIMESTAMP &apos;2018-09-10 10:09:08&apos;,HOUR(TIMESTAMP &apos;1994-09-27 13:14:15&apos;) from t_Temporal_bch_06;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">&apos;abc&apos; SIMILAR TO &apos;%(b|d)%&apos;,</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-select *  from Temporal-01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select *  from Temporal;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1030959165">2018-09-10	23:09:06	2018-09-10 10:09:08.0	13</stringProp>
                    <stringProp name="-1030959165">2018-09-10	23:09:06	2018-09-10 10:09:08.0	13</stringProp>
                    <stringProp name="-1030959165">2018-09-10	23:09:06	2018-09-10 10:09:08.0	13</stringProp>
                    <stringProp name="-1030959165">2018-09-10	23:09:06	2018-09-10 10:09:08.0	13</stringProp>
                    <stringProp name="-1030959165">2018-09-10	23:09:06	2018-09-10 10:09:08.0	13</stringProp>
                    <stringProp name="-1030959165">2018-09-10	23:09:06	2018-09-10 10:09:08.0	13</stringProp>
                    <stringProp name="-1030959165">2018-09-10	23:09:06	2018-09-10 10:09:08.0	13</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Temporal_bch_06;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Temporal_bch_06;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Temporal;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists Temporal;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_Temporal_SINK_bch_06;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_Temporal_SINK_bch_06;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 兼容istream语法易用性" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show streams" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_showstreams_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_showstreams_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 create stream t_showstreams_bch_01(  name string,   id int,   time1 timestamp )    PROPERTIES    (     &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,     &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;watermark&apos;,     &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    &apos;group.id&apos;: &apos;121001&apos;,     &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,     &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos;,  &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;  );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_showstreams_bch_01(
 name string, 
 id int, 
 time1 timestamp
)    PROPERTIES    (   
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,   
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;watermark&apos;,   
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,  
 &apos;group.id&apos;: &apos;121001&apos;,   
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,   
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos;,
 &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
 );</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show streams-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show streams;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1569481741">T_SHOWSTREAMS_BCH_01</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream t_showstreams_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream t_showstreams_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show create streams" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists &quot;t_createstream_bch_001&quot;;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists &quot;t_createstream_bch_001&quot;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM &quot;t_createstream_bch_001&quot; (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM &quot;t_createstream_bch_001&quot; (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show create stream-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show create stream &quot;t_createstream_bch_001&quot;;
 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1420486042">CREATE STREAM t_createstream_bch_001 (ID INTEGER,NAME VARCHAR(16777216)) PROPERTIES (&apos;password&apos;:&apos;123456&apos;,&apos;connector&apos;:&apos;JDBC&apos;,&apos;driver&apos;:&apos;com.mysql.jdbc.Driver&apos;,&apos;type&apos;:&apos;SOURCE&apos;,&apos;dbUrl&apos;:&apos;jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql&apos;,&apos;tableName&apos;:&apos;test_002&apos;,&apos;username&apos;:&apos;test&apos;)</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists &quot;t_createstream_bch_001&quot;;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists &quot;t_createstream_bch_001&quot;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show stream properties" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_stream_properties_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_stream_properties_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 create stream t_stream_properties_bch_01(  name string,   id int,   time1 timestamp )    PROPERTIES    (     &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,     &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;watermark&apos;,     &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    &apos;group.id&apos;: &apos;121001&apos;,     &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,     &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos;,  &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;  );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_stream_properties_bch_01(
 name string, 
 id int, 
 time1 timestamp
)    PROPERTIES    (   
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,   
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;watermark&apos;,   
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,  
 &apos;group.id&apos;: &apos;121001&apos;,   
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,   
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos;,
 &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
 );</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show stream properties-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show stream properties t_stream_properties_bch_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1914709174">connector	kafka</stringProp>
                  <stringProp name="-916890791">zookeeper.connect	node1:2181 node2:2181 node3:2181/istream/node6/kafka</stringProp>
                  <stringProp name="1137440130">rowtime	time1.myrowtime1</stringProp>
                  <stringProp name="1256237344">group.id	121001</stringProp>
                  <stringProp name="321568212">format	csv</stringProp>
                  <stringProp name="1175699690">topic	watermark</stringProp>
                  <stringProp name="-1624219021">bootstrap.servers	node6:9096</stringProp>
                  <stringProp name="1858549994">type	source</stringProp>
                  <stringProp name="-183991730">version	0.10</stringProp>
                  <stringProp name="-1197752600">separator	,</stringProp>
                  <stringProp name="-589880387">rowtime.watermarks.type	periodic-ascending</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream t_stream_properties_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream t_stream_properties_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc formatted" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc formatted stream" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_formatted_bch_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_formatted_bch_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM t_formatted_bch_001 PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;winno1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0222&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_formatted_bch_001(ID INT)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;winno1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0222&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-DESC FORMATTED-01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">DESC FORMATTED t_formatted_bch_001;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1853810223">NAME	VALUE
FIELD_NAME	FIELD_TYPE
ID	INTEGER
PROPERTY_KEY	PROPERTY_VALUE
connector	kafka
zookeeper.connect	node1:2181 node2:2181 node3:2181/istream/node6/kafka
rowtime	time1.myrowtime
group.id	0222
format	csv
topic	winno1
bootstrap.servers	node6:9096
type	source
version	0.10
rowtime.watermarks.type	periodic-ascending
separator	,
</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_formatted_bch_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_formatted_bch_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc view" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop STREAM  if exists &quot;t_desc_view_bch_001&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop STREAM  if exists &quot;t_desc_view_bch_001&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view   if exists v_desc_view_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view   if exists v_desc_view_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM &quot;t_desc_view_bch_001&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM &quot;t_desc_view_bch_001&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE view v_desc_view_bch_01 AS SELECT id from &quot;t_desc_view_bch_001&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE view v_desc_view_bch_01 AS SELECT id from &quot;t_desc_view_bch_001&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc view-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">DESC view  v_desc_view_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="360346476">QUERY
SELECT ID FROM &quot;T_DESC_VIEW_BCH_001&quot;;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view   if exists v_desc_view_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view   if exists v_desc_view_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show jobs" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_showjobs_bch_001; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_showjobs_bch_001; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsink_showjobs_bch002;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_showjobs_bch002;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM t_jdbcsource_showjobs_bch_001 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_showjobs_bch_001 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM t_jdbcsink_showjobs_bch002 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;showjobs1&apos;,&apos;batchSize&apos;:&apos;1&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_showjobs_bch002 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;showjobs1&apos;,&apos;batchSize&apos;:&apos;1&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 insert into t_jdbcsink_showjobs_bch002 select * from t_jdbcsource_showjobs_bch_001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_showjobs_bch002 select * from t_jdbcsource_showjobs_bch_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show jobs-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show jobs;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-144371636">INSERT INTO `PUBLIC$T_JDBCSINK_SHOWJOBS_BCH002` SELECT `PUBLIC$T_JDBCSOURCE_SHOWJOBS_BCH_001`.ID,`PUBLIC$T_JDBCSOURCE_SHOWJOBS_BCH_001`.NAME FROM `PUBLIC$T_JDBCSOURCE_SHOWJOBS_BCH_001`	</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_showjobs_bch_001; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_showjobs_bch_001; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsink_showjobs_bch002;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_showjobs_bch002;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show views" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists  &quot;t_showviews_bch_001&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  &quot;t_showviews_bch_001&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view if exists v_showviews_bch_001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view if exists v_showviews_bch_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM &quot;t_showviews_bch_001&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM &quot;t_showviews_bch_001&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE view v_showviews_bch_001 AS SELECT id from &quot;t_showviews_bch_001&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE view v_showviews_bch_001 AS SELECT id from &quot;t_showviews_bch_001&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show views-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show views;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1489270736">V_SHOWVIEWS_BCH_001	PUBLIC</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view if exists v_showviews_bch_001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view if exists v_showviews_bch_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc function/show functions " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop function if exists F_STRING_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop function if exists F_STRING_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop STREAM if exists T_show_functions_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> drop STREAM if exists T_show_functions_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM T_show_functions_bch_01 (id Int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;aaaaa&apos; ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM T_show_functions_bch_01 (id Int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;aaaaa&apos; );
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE FUNCTION F_STRING_bch_02(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE FUNCTION F_STRING_bch_02(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc FUNCTION-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">desc FUNCTION F_STRING_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-338964426">A	INTEGER</stringProp>
                  <stringProp name="-2146418889">B	INTEGER</stringProp>
                  <stringProp name="1672917868">BODY	CLASSPATH:org.apache.TestUDF.getString</stringProp>
                  <stringProp name="931413152">RETURN_TYPE	VARCHAR(20)</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-SHOW FUNCTIONS-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW FUNCTIONS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-253460046">PUBLIC	F_STRING_BCH_02	FUNCTION</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop function if exists F_STRING_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop function if exists F_STRING_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop STREAM if exists T_show_functions_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> drop STREAM if exists T_show_functions_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="913 ISQL005 JDBC upsert模式支持 " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsource_upsert_bch_01;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_upsert_bch_01;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_02;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_02;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop table if exists upsertsource;  " enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table if exists upsertsource;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 create table upsertsource (id INT,users varchar(20)); " enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table upsertsource (id INT,users varchar(20));

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 insert into  upsertsource values(1,&apos;a&apos;),(1,&apos;b&apos;)(2,&apos;a&apos;)(1,&apos;c&apos;);  " enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into  upsertsource values(1,&apos;a&apos;),(1,&apos;b&apos;),(2,&apos;a&apos;),(1,&apos;c&apos;);

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_jdbcsource_upsert_bch_01 (id INT,users varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;upsertsource&apos;);   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_upsert_bch_01 (id INT,users varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;upsertsource&apos;);



</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_jdbcsink_upsert_bch_02 (id INT primary key,users varchar) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsink_upsert_bch_02 (id INT primary key,users varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert&apos;);






</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ISQL005 delete from  upsert; ;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from  upsert;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 insert into t_jdbcsink_upsert_bch_02 SELECT * FROM t_jdbcsource_upsert_bch_01;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into t_jdbcsink_upsert_bch_02 SELECT * FROM t_jdbcsource_upsert_bch_01;



</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ISQL005 select * from  upsert ; " enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from  upsert;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="47467">1	c</stringProp>
                <stringProp name="48426">2	a</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsource_upsert_bch_01;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_upsert_bch_01;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop table if exists upsertsource;  " enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table if exists upsertsource;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_02;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_02;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1075 DISQL-CONNECTOR-130-2 部分connector增加ARRAY类型支持" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1075 dbsource KAFKASINK" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasink_array_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasink_array_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_dbsource_array_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_dbsource_array_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop table if exists streamsql.istream_array_0121;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.istream_array_0121;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create table  STREAMSQL.istream_array_0121 (tbigint bigint ARRAY, tsmallint smallint ARRAY, tdate date ARRAY, ttimestamp timestamp ARRAY, tdecimal decimal ARRAY, tvarchar varchar array, tboolean boolean array, tdouble double array, tfloat float array )" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  streamsql.istream_array_0121 (tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY,
tvarchar varchar(20) array,
tboolean boolean array,
tdouble double array,
tfloat float array
)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 insert into  STREAMSQL.istream_array_0121 values((array[-9223372036854775808,9223372036854775807]),(array[-32768,32767]),(array[&apos;2019-09-08&apos;,&apos;2019-04-08&apos;]),(array[&apos;2019-09-08 09:08:08&apos;,&apos;2019-04-08 03:09:09&apos;]),(array[23876.65,98756.78]),(array[&apos;jejj43&apos;,&apos;98756.78&apos;]),(array[true,false]),(array[0.765,-0.978]),(array[0.765,-0.978])); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into  streamsql.istream_array_0121 values((array[-9223372036854775808,9223372036854775807]),(array[-32768,32767]),(array[&apos;2019-09-08&apos;,&apos;2019-04-08&apos;]),(array[&apos;2019-09-08 09:08:08&apos;,&apos;2019-04-08 03:09:09&apos;]),(array[23876.65,98756.78]),(array[&apos;jejj43&apos;,&apos;98756.78&apos;]),(array[true,false]),(array[0.765,-0.978]),(array[0.765,-0.978]));
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2- CREATE STREAM t_dbsource_array_bch0121" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsource_array_bch_01 (tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY,
tvarchar varchar(20) array,
tboolean boolean array,
tdouble double array,
tfloat float array
) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;,&apos;username&apos;: &apos;admin&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;streamsql.istream_array_0121&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create stream kafkasink_array_0121" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_kafkasink_array_bch_01(
tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY,
tvarchar varchar(20) array,
tboolean boolean array,
tdouble double array,
tfloat float array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;arraydb_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;array0119_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 insert into t_kafkasink_array_bch_01 select * from t_dbsource_array_bch_01;                      " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_kafkasink_array_bch_01 select * from t_dbsource_array_bch_01;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasink_array_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasink_array_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop table if exists streamsql.istream_array_0121;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.istream_array_0121;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_dbsource_array_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_dbsource_array_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="931 LDBX081-07 兼容istream语法 join(time window) " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="931 LDBX081-07 DB 数据源" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_JDBCsink_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_JDBCsink_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime1;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists WINJOIN_SINK_001;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists WINJOIN_SINK_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table streamsql.joinwintime (id integer,users varchar(20), amount double,time1 timestamp);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.joinwintime (id integer,users varchar(20), amount double,time1 timestamp);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 insert into  streamsql.joinwintime values(32, &apos;dengchao&apos;,  3456.0E0 ,&apos;2018-11-22 09:42:18&apos;),(12, &apos;lichen&apos;,  1234.0E0 ,&apos;2018-11-21 09:41:54&apos;),(45, &apos;chenhe&apos;, 4567.0E0 ,&apos;2018-11-26 01:44:33&apos;),(23, &apos;lichen&apos;,  4578.0E0 ,&apos;2018-11-25 09:43:25&apos;),(67, &apos;lichen&apos;,  2390.0E0 ,&apos;2018-11-25 09:56:58&apos;),( 9, &apos;lichen&apos;, 76.0E0 ,&apos;2018-11-26 08:57:39&apos;),(34, &apos;lily&apos;, 2345.0E0 ,&apos;2018-11-23 09:42:47&apos;),(11, &apos;dog&apos;, 76.0E0 ,&apos;2018-11-26 08:50:39&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into  streamsql.joinwintime values(32, &apos;dengchao&apos;,  3456.0E0 ,&apos;2018-11-22 09:42:18&apos;),(12, &apos;lichen&apos;,  1234.0E0 ,&apos;2018-11-21 09:41:54&apos;),(45, &apos;chenhe&apos;, 4567.0E0 ,&apos;2018-11-26 01:44:33&apos;),(23, &apos;lichen&apos;,  4578.0E0 ,&apos;2018-11-25 09:43:25&apos;),(67, &apos;lichen&apos;,  2390.0E0 ,&apos;2018-11-25 09:56:58&apos;),( 9, &apos;lichen&apos;, 76.0E0 ,&apos;2018-11-26 08:57:39&apos;),(34, &apos;lily&apos;, 2345.0E0 ,&apos;2018-11-23 09:42:47&apos;),(11, &apos;dog&apos;, 76.0E0 ,&apos;2018-11-26 08:50:39&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table streamsql.joinwintime1 (id integer,users varchar(20), amount double,time1 timestamp);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.joinwintime1 (id integer,users varchar(20), amount double,time1 timestamp);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 insert into  streamsql.joinwintime1 values(32, &apos;dengchao&apos;,  3456.0E0 ,&apos;2018-11-22 09:42:18&apos;),(12, &apos;lichen&apos;,  1234.0E0 ,&apos;2018-11-21 09:41:54&apos;),(45, &apos;chenhe&apos;, 4567.0E0 ,&apos;2018-11-26 01:44:33&apos;),(23, &apos;lichen&apos;,  4578.0E0 ,&apos;2018-11-25 09:43:25&apos;),(67, &apos;lichen&apos;,  2390.0E0 ,&apos;2018-11-25 09:56:58&apos;),( 9, &apos;lichen&apos;, 76.0E0 ,&apos;2018-11-26 08:57:39&apos;),(34, &apos;lily&apos;, 2345.0E0 ,&apos;2018-11-23 09:42:47&apos;),(11, &apos;dog&apos;, 76.0E0 ,&apos;2018-11-26 08:50:39&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into  streamsql.joinwintime1 values(32, &apos;dengchao&apos;,  3456.0E0 ,&apos;2018-11-22 09:42:18&apos;),(12, &apos;lichen&apos;,  1234.0E0 ,&apos;2018-11-21 09:41:54&apos;),(45, &apos;chenhe&apos;, 4567.0E0 ,&apos;2018-11-26 01:44:33&apos;),(23, &apos;lichen&apos;,  4578.0E0 ,&apos;2018-11-25 09:43:25&apos;),(67, &apos;lichen&apos;,  2390.0E0 ,&apos;2018-11-25 09:56:58&apos;),( 9, &apos;lichen&apos;, 76.0E0 ,&apos;2018-11-26 08:57:39&apos;),(34, &apos;lily&apos;, 2345.0E0 ,&apos;2018-11-23 09:42:47&apos;),(11, &apos;dog&apos;, 76.0E0 ,&apos;2018-11-26 08:50:39&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table WINJOIN_SINK_001 (id integer,users VARCHAR(20), amount double,time1 timestamp,id1 integer,users1 VARCHAR(20), amount1 double);" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table WINJOIN_SINK_001 (id integer,users VARCHAR(20), amount double,time1 timestamp,id1 integer,users1 VARCHAR(20), amount1 double);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsource_winjoin_bch_01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_winjoin_bch_01 (id integer,users VARCHAR(20), amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07  CREATE STREAM t_dbsource_winjoin_bch_02 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime1&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_winjoin_bch_02 (id integer,users VARCHAR(20), amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime1&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07  CREATE STREAM t_JDBCsink_winjoin_bch_01 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;WINJOIN_SINK_001&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_JDBCsink_winjoin_bch_01 (id integer,users VARCHAR(20), amount double,time1 timestamp,id1 integer,users1 VARCHAR(20), amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;WINJOIN_SINK_001&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 DELETE FROM  WINJOIN_SINK_001;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DELETE FROM  WINJOIN_SINK_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 INSERT INTO t_dbsink_winjoin_bch_01 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02 WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND       t_dbsource_winjoin_bch_01.myrowtime BETWEEN t_dbsource_winjoin_bch_02.myrowtime1- INTERVAL &apos;4&apos; HOUR AND t_dbsource_winjoin_bch_02.myrowtime1;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">INSERT INTO t_JDBCsink_winjoin_bch_01 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount
FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02
WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND
      t_dbsource_winjoin_bch_01.myrowtime BETWEEN t_dbsource_winjoin_bch_02.myrowtime1- INTERVAL &apos;4&apos; HOUR AND t_dbsource_winjoin_bch_02.myrowtime1;

  </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 TC-select * from  WINJOIN_SINK_001-01" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  WINJOIN_SINK_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1882034829">67	lichen	2390.0	2018-11-25 09:56:58.0	67	lichen	2390.0</stringProp>
                  <stringProp name="-132320207">9	lichen	76.0	2018-11-26 08:57:39.0	9	lichen	76.0</stringProp>
                  <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                  <stringProp name="-634720280">11	dog	76.0	2018-11-26 08:50:39.0	11	dog	76.0</stringProp>
                  <stringProp name="-1217634013">32	dengchao	3456.0	2018-11-22 09:42:18.0	32	dengchao	3456.0</stringProp>
                  <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                  <stringProp name="-1150765416">45	chenhe	4567.0	2018-11-26 01:44:33.0	45	chenhe	4567.0</stringProp>
                  <stringProp name="-323445493">23	lichen	4578.0	2018-11-25 09:43:25.0	23	lichen	4578.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime1;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists WINJOIN_SINK_001;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists WINJOIN_SINK_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_JDBCsink_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_JDBCsink_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="501-Stream Table join cache type " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream drop stream if exists t_jdbcsource_cacheJOIN_bch_02;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_cacheJOIN_bch_02;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream drop stream if exists t_jdbcsource_cacheJOIN_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_cacheJOIN_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream drop stream if exists t_jdbcsink_cacheJOIN_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_cacheJOIN_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream CREATE STREAM t_jdbcsource_cacheJOIN_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_cacheJOIN_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;);


 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream  CREATE STREAM t_jdbcsource_cacheJOIN_bch_01 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;memory&apos;,&apos;dataType&apos;:&apos;static&apos; ); " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_cacheJOIN_bch_01 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;memory&apos;,&apos;dataType&apos;:&apos;static&apos; );


 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream  CREATE STREAM t_jdbcsink_cacheJOIN_bch_01 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink&apos;,&apos;updateMode&apos;:&apos;retract&apos;);" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsink_cacheJOIN_bch_01 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink&apos;,&apos;updateMode&apos;:&apos;retract&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream delete from cachesink；" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from cachesink;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream insert into t_jdbcsink_cacheJOIN_bch_01 select * from t_jdbcsource_cacheJOIN_bch_02 left join t_jdbcsource_cacheJOIN_bch_01  on t_jdbcsource_cacheJOIN_bch_01.id = t_jdbcsource_cacheJOIN_bch_02.id; " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into t_jdbcsink_cacheJOIN_bch_01 select * from t_jdbcsource_cacheJOIN_bch_02 left join t_jdbcsource_cacheJOIN_bch_01  on t_jdbcsource_cacheJOIN_bch_01.id = t_jdbcsource_cacheJOIN_bch_02.id;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501-Stream TC-select * from cachesink-01" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from cachesink;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1469865786">1	a	key1	second_key3	1	a	key1	second_key3	2018-12-17 21:11:47.0</stringProp>
                <stringProp name="1680125371">2	b	key1	second_key3	2	b	key1	second_key3	2018-12-17 21:11:48.0</stringProp>
                <stringProp name="1890384956">3	c	key1	second_key3	3	c	key1	second_key3	2018-12-17 21:11:49.0</stringProp>
                <stringProp name="-1336326254">4	d	key	second_key	4	d	key	second_key	2018-12-17 21:11:50.0</stringProp>
                <stringProp name="-1626100077">5	e	key	second_key	5	e	key	second_key	2018-12-17 21:11:51.0</stringProp>
                <stringProp name="-1282312972">6	a	key2	second_key4	6	a	key2	second_key4	2018-12-17 21:11:52.0</stringProp>
                <stringProp name="-1072053387">7	b	key2	second_key4	7	b	key2	second_key4	2018-12-17 21:11:53.0</stringProp>
                <stringProp name="-861793802">8	c	key2	second_key4	8	c	key2	second_key4	2018-12-17 21:11:54.0</stringProp>
                <stringProp name="-985048649">9	f	key	second_key	9	f	key	second_key	2018-12-17 21:11:55.0</stringProp>
                <stringProp name="521318824">10	f	k	s	null	null	null	null	null</stringProp>
                <stringProp name="-618359783">11	f	f	f	null	null	null	null	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="912 ISQL003 watermark策略设置" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_watermark_bch_002;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_kafkasource_watermark_bch_002;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_jdbcsink_watermark_bch_01;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_watermark_bch_01;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  CREATE STREAM t_kafkasource_watermark_bch_002 (time1 timestamp,id INT,users varchar(20)) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;winno1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0222&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_kafkasource_watermark_bch_002
(time1 timestamp,id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;${topic}&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0222&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  CREATE STREAM t_jdbcsink_watermark_bch_01 (time1 timestamp,time2 timestamp,users varchar(20),id INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;win11&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsink_watermark_bch_01 (time1 timestamp,time2 timestamp,users varchar(20),id INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;win11&apos;);




  </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 delete from win11;  " enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from win11;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 TC-periodic-ascending  watermark-01" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into t_jdbcsink_watermark_bch_01 SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR),
users,SUM(id)
FROM t_kafkasource_watermark_bch_002
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR), users;



</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 select * from win11;  " enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from win11;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1042413806">2018-12-09 19:00:00.0	2018-12-09 20:00:00.0	e	4</stringProp>
                <stringProp name="54884867">2018-12-09 20:00:00.0	2018-12-09 21:00:00.0	e	2</stringProp>
                <stringProp name="1486962759">2018-12-09 21:00:00.0	2018-12-09 22:00:00.0	e	4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_watermark_bch_002;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_kafkasource_watermark_bch_002;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_jdbcsink_watermark_bch_01;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_watermark_bch_01;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
