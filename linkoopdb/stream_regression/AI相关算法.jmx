<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4db连接池</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb" elementType="Argument">
            <stringProp name="Argument.name">udb</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb_password" elementType="Argument">
            <stringProp name="Argument.name">udb_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="umysql" elementType="Argument">
            <stringProp name="Argument.name">umysql</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql用户</stringProp>
          </elementProp>
          <elementProp name="umysql_password" elementType="Argument">
            <stringProp name="Argument.name">umysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql密码</stringProp>
          </elementProp>
          <elementProp name="user" elementType="Argument">
            <stringProp name="Argument.name">user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4用户名</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4密码</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4 mysql连接池</stringProp>
          </elementProp>
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.71)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node2</stringProp>
          </elementProp>
          <elementProp name="node4" elementType="Argument">
            <stringProp name="Argument.name">node4</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.73)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(port,9105)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl" elementType="Argument">
            <stringProp name="Argument.name">dburl</stringProp>
            <stringProp name="Argument.value">${__P(dburl,jdbc:linkoopdb:tcp://192.168.1.74:9105/ldb)}</stringProp>
            <stringProp name="Argument.desc">db的url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.72:3306/jmeter_istreamsql?useSSL=false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="zoo_connect" elementType="Argument">
            <stringProp name="Argument.name">zoo_connect</stringProp>
            <stringProp name="Argument.value">node72:2181,node73:2181,node74:2181/linkoopdb/luyao</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_server" elementType="Argument">
            <stringProp name="Argument.name">kafka_server</stringProp>
            <stringProp name="Argument.value">node74:29096</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="zoo1_connect" elementType="Argument">
            <stringProp name="Argument.name">zoo1_connect</stringProp>
            <stringProp name="Argument.value">node1:2181,node2:2181,node3:2181/istream/node6/kafka</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka1_server" elementType="Argument">
            <stringProp name="Argument.name">kafka1_server</stringProp>
            <stringProp name="Argument.value">node6:9096</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_source_files_03_path1" elementType="Argument">
            <stringProp name="Argument.name">t_source_files_03_path1</stringProp>
            <stringProp name="Argument.value">hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_jdbcsource_formatted_bch_03_path1" elementType="Argument">
            <stringProp name="Argument.name">t_jdbcsource_formatted_bch_03_path1</stringProp>
            <stringProp name="Argument.value">hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sc_enginepallas" elementType="Argument">
            <stringProp name="Argument.name">sc_enginepallas</stringProp>
            <stringProp name="Argument.value">${__P(engine,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a" elementType="Argument">
            <stringProp name="Argument.name">a</stringProp>
            <stringProp name="Argument.value">jly1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a_password" elementType="Argument">
            <stringProp name="Argument.name">a_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="b" elementType="Argument">
            <stringProp name="Argument.name">b</stringProp>
            <stringProp name="Argument.value">jly2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="b_password" elementType="Argument">
            <stringProp name="Argument.name">b_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="T_parquet_1580_path2" elementType="Argument">
            <stringProp name="Argument.name">T_parquet_1580_path2</stringProp>
            <stringProp name="Argument.value">hdfs://node3/node8/linkoopdb/manyi/data/41daa9c2-c0a0-452d-ab47-57c3cd0284d0/5cb80153-475a-4de2-b7d6-684a4538080d</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl_node7" elementType="Argument">
            <stringProp name="Argument.name">dburl_node7</stringProp>
            <stringProp name="Argument.value">${__P(dburl,jdbc:linkoopdb:tcp://192.168.1.77:9117/ldb)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl_node7_meta" elementType="Argument">
            <stringProp name="Argument.name">dburl_node7_meta</stringProp>
            <stringProp name="Argument.value">${__P(dburl,jdbc:linkoopdb:tcp://192.168.1.77:9118/ldb)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_dir" elementType="Argument">
            <stringProp name="Argument.name">kafka_dir</stringProp>
            <stringProp name="Argument.value">/home/stream74/kafka/kafka_2.10-0.10.0.1/bin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic_dir" elementType="Argument">
            <stringProp name="Argument.name">topic_dir</stringProp>
            <stringProp name="Argument.value">/home/stream74/document</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb2" enabled="true">
        <stringProp name="dataSource">${u2}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${a}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb3" enabled="true">
        <stringProp name="dataSource">${u4}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${b}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb4" enabled="true">
        <stringProp name="dataSource">${node7}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl_node7}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb5" enabled="true">
        <stringProp name="dataSource">${node7_meta}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl_node7_meta}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${mysql_url}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${umysql}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">9999999999</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">000</stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">number</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP SCHEMA IF EXISTS streamsql CASCADE;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP SCHEMA IF EXISTS streamsql CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE SCHEMA streamsql ${sc_enginepallas};" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE SCHEMA streamsql ${sc_enginepallas};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 DB Worker 支持 RPC的 AI服务" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 EXTERNAL_MODEL" enabled="false">
            <stringProp name="TestPlan.comments">#2854</stringProp>
          </GenericController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 model_em_predict " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-DROP MODEL ex_model_dt IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ex_model_dt IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create model model_em_predict as load_external_model" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model ex_model_dt as load_external_model( 
 &apos;hdfs://node3/node8/linkoopdb/manyi/model/m1&apos;, 
 &apos;python&apos;, 
 &apos;tf_decision_tree&apos;, 
 &apos;dnn.alg&apos;, 
 &apos;dnn.alg.load&apos;, 
 &apos;dnn.alg.predict&apos; 
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create stream model_em_predict" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream model_em_predict(
features double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;model_em_predict&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;model_em_predict_010&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-alter stream model_em_predict set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream model_em_predict set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB TC-PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session stream_async_query_enable TRUE;
SELECT PREDICTION FROM PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">JOB_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+?)	true</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                  <boolProp name="displayJMeterProperties">true</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">true</boolProp>
                </DebugPostProcessor>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB TC-call sys_stream_snapshot(&apos;${JOB_ID_g1}&apos;, 10);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">call sys_stream_snapshot(&apos;${JOB_ID_g1}&apos;,10);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB TC-call sys_stream_retrieve_result(&apos;${JOB_ID_g1}&apos;,1);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">call sys_stream_retrieve_result(&apos;${JOB_ID_g1}&apos;,1);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49524">2.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-SHOW JOBS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-SHOW JOBS E;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="0"></stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-DROP MODEL ex_model_dt IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ex_model_dt IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 OTHERS_MODEL" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 minmax_scaler" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic minmax_scaler_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_source;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_source;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.MINMAX_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.MINMAX_DATA;
drop table if exists t_minmax_scaler_source;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.MINMAX_DATA(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.MINMAX_DATA(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO MINMAX_DATA VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.MINMAX_DATA VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL MINMAX_SCALER_MODEL AS MINMAX_SCALER_TRANSFORMER(streamsql.MINMAX_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL MINMAX_SCALER_MODEL AS MINMAX_SCALER_TRANSFORMER(streamsql.MINMAX_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.minmax_scaler;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.minmax_scaler;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.minmax_scaler(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.minmax_scaler(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.minmax_scaler VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.minmax_scaler VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream minmax_scaler_sink( scaledFeatures double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;minmax_scaler_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;minmax_scaler_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream minmax_scaler_sink(
scaledFeatures double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;minmax_scaler_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;minmax_scaler_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream minmax_scaler_sink set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  insert into minmax_scaler_sink SELECT scaledFeatures from  MINMAX_SCALER(MINMAX_SCALER_MODEL,minmax_scaler_dbsource);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> insert into minmax_scaler_sink SELECT scaledFeatures from  MINMAX_SCALER(MINMAX_SCALER_MODEL,streamsql.minmax_scaler);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream minmax_scaler_source( scaledFeatures double ARRAY ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;minmax_scaler_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;minmax_scaler_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream minmax_scaler_source(
scaledFeatures double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;minmax_scaler_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;minmax_scaler_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream minmax_scaler_source set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_minmax_scaler_source( scaledFeatures double ARRAY ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_minmax_scaler_source(
scaledFeatures double ARRAY
) 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_minmax_scaler_source select * from minmax_scaler_source;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_minmax_scaler_source select * from minmax_scaler_source;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from minmax_scaler_source;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_minmax_scaler_source;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1087258464">ARRAY[0.0E0,0.0E0,0.0E0]</stringProp>
                    <stringProp name="-1926618947">ARRAY[1.0E0,1.0E0,1.0E0]</stringProp>
                    <stringProp name="458673397">ARRAY[0.5E0,0.1E0,0.5E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.MINMAX_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.MINMAX_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_source;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_source;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.minmax_scaler;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.minmax_scaler;
drop table if exists t_minmax_scaler_source;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 standard_scaler" enabled="true">
              <stringProp name="TestPlan.comments">使用round函数？</stringProp>
            </GenericController>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic standard_scaler_sink2</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL STANDARD_SCALER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL STANDARD_SCALER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists STANDARD_SCALER_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists STANDARD_SCALER_DATA;
drop table if exists t_standard_scaler;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE STANDARD_SCALER_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE STANDARD_SCALER_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into standard_scaler_data values (0,array[1.0,0.5,-1.0]),(1,array[2.0,1.0,1.0]),(2,array[4.0,10.0,2.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into standard_scaler_data values (0,array[1.0,0.5,-1.0]),(1,array[2.0,1.0,1.0]),(2,array[4.0,10.0,2.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL MINMAX_SCALER_MODEL AS MINMAX_SCALER_TRANSFORMER(MINMAX_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL STANDARD_SCALER_MODEL AS STANDARD_SCALER_TRANSFORMER(STANDARD_SCALER_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.standard_scaler;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.standard_scaler;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.standard_scaler(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.standard_scaler(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.standard_scaler VALUES (ARRAY[1.0,0.5,-1.0]),(ARRAY[2.0,1.0,1.0]),(ARRAY[4.0,10.0,2.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.standard_scaler VALUES (ARRAY[1.0,0.5,-1.0]),(ARRAY[2.0,1.0,1.0]),(ARRAY[4.0,10.0,2.0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream standard_scaler_sink( scaledfeatures double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;standard_scaler_sink2&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;standard_scaler_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_standard_scaler_sink_01(
scaledfeatures double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;standard_scaler_sink2&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;standard_scaler_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_standard_scaler_sink_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into standard_scaler_sink SELECT scaledfeatures from  standard_scaler(STANDARD_SCALER_MODEL,standard_scaler_dbsource);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> insert into t_standard_scaler_sink_01 SELECT scaledfeatures from  standard_scaler(STANDARD_SCALER_MODEL,streamsql.standard_scaler);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream standard_scaler_sink( scaledfeatures double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;standard_scaler_sink2&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;standard_scaler_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_standard_scaler_source_01(
scaledfeatures double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;standard_scaler_sink2&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;standard_scaler_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_standard_scaler_source_01  set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_standard_scaler( scaledfeatures double ARRAY ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_standard_scaler(
scaledfeatures double ARRAY
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_standard_scaler( scaledfeatures double ARRAY ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  t_standard_scaler select * from t_standard_scaler_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_standard_scaler_source_01; " enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select ROUND(SCALEDFEATURES, 1) from t_standard_scaler;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1694722386">SCALEDFEATURES
ARRAY[1.3093073414159542E0,0.18704390591656492E0,0.6546536707079771E0]
ARRAY[2.6186146828319083E0,1.8704390591656492E0,1.3093073414159542E0]
ARRAY[0.6546536707079771E0,0.09352195295828246E0,-0.6546536707079771E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_standard_scaler_source_01; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_standard_scaler;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1694722386">SCALEDFEATURES
ARRAY[1.3093073414159542E0,0.18704390591656492E0,0.6546536707079771E0]
ARRAY[2.6186146828319083E0,1.8704390591656492E0,1.3093073414159542E0]
ARRAY[0.6546536707079771E0,0.09352195295828246E0,-0.6546536707079771E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="TestPlan.comments">之前的断言结果</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="645852823">SCALEDFEATURES</stringProp>
                    <stringProp name="248562032">ARRAY[1.3093073414159544E0,0.1870439059165649E0,0.6546536707079771E0]</stringProp>
                    <stringProp name="296615374">ARRAY[2.618614682831909E0,1.870439059165649E0,1.3093073414159542E0]</stringProp>
                    <stringProp name="-85826626">ARRAY[0.6546536707079772E0,0.09352195295828244E0,-0.6546536707079771E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL STANDARD_SCALER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL STANDARD_SCALER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists STANDARD_SCALER_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists STANDARD_SCALER_DATA;
drop table if exists t_standard_scaler;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 normalizer" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  NORMALIZER_MODEL1_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL NORMALIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL NORMALIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_normalizer_dbsource_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_normalizer_dbsource_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_model_Normalizer_source_02;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_model_Normalizer_source_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_model_Normalizer_sink_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_model_Normalizer_sink_02;
drop table if exists t_model_Normalizer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL NORMALIZER_MODEL AS NORMALIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL NORMALIZER_MODEL AS NORMALIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.normalizer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.normalizer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.normalizer(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.normalizer(FEATURES DOUBLE ARRAY) properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.normalizer VALUES (ARRAY[1.0, 0.1, -8.0]),(ARRAY[2.0, 1.0, -4.0]),(ARRAY[4.0, 10.0, 8.0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.normalizer VALUES (ARRAY[1.0, 0.1, -8.0]),(ARRAY[2.0, 1.0, -4.0]),(ARRAY[4.0, 10.0, 8.0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_model_Normalizer_sink_02( NORMFEATURES double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;NORMALIZER_MODEL1_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;Normalizer_002&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_model_Normalizer_sink_02(
NORMFEATURES double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;NORMALIZER_MODEL1_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;Normalizer_002&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_model_Normalizer_sink_02 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_model_Normalizer_sink_02 SELECT NORMFEATURES FROM NORMALIZER(NORMALIZER_MODEL,t_normalizer_dbsource_02);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_model_Normalizer_sink_02 SELECT NORMFEATURES FROM NORMALIZER(NORMALIZER_MODEL,streamsql.normalizer);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_model_Normalizer_source_02( NORMFEATURES double ARRAY ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;NORMALIZER_MODEL1_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;Normalizer_002&apos;, &apos;format&apos;:&apos;json&apos; );   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_model_Normalizer_source_02(
NORMFEATURES double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;NORMALIZER_MODEL1_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;Normalizer_002&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_model_Normalizer_source_02 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table  t_model_Normalizer( NORMFEATURES double ARRAY )    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table  t_model_Normalizer(
NORMFEATURES double ARRAY
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_model_Normalizer select * from t_model_Normalizer_source_02 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_model_Normalizer select * from t_model_Normalizer_source_02

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_model_Normalizer_source_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_model_Normalizer;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-895755065">ARRAY[0.12402519455653739E0,0.012402519455653741E0,-0.9922015564522991E0]</stringProp>
                    <stringProp name="1204538018">ARRAY[0.4364357804719848E0,0.2182178902359924E0,-0.8728715609439696E0]</stringProp>
                    <stringProp name="-258006663">ARRAY[0.29814239699997197E0,0.7453559924999299E0,0.5962847939999439E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.normalizer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.normalizer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_model_Normalizer_source_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_model_Normalizer_source_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL NORMALIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL NORMALIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_normalizer_dbsource_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_normalizer_dbsource_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_model_Normalizer_sink_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_model_Normalizer_sink_02;
drop table if exists t_model_Normalizer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 random_forest_classifier_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/bin/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  random_forest_classifier1</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL RANDOM_FOREST_CLASSIFIER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL RANDOM_FOREST_CLASSIFIER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_random_forest_classifier_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_random_forest_classifier_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_random_forest_classifier_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_random_forest_classifier_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists RANDOM_FOREST_CLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA;
drop table if exists t_random_forest_classifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE RANDOM_FOREST_CLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO RANDOM_FOREST_CLASSIFIER_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL RANDOM_FOREST_CLASSIFIER_MODEL AS RANDOM_FOREST_CLASSIFIER_TRAIN(RANDOM_FOREST_CLASSIFIER_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL RANDOM_FOREST_CLASSIFIER_MODEL AS RANDOM_FOREST_CLASSIFIER_TRAIN(streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.random_forest_classifier;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.random_forest_classifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.random_forest_classifier(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.random_forest_classifier(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO RANDOM_FOREST_CLASSIFIER_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.random_forest_classifier VALUES
 (ARRAY [0.2,0.4,3]), (ARRAY [4,1,0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  create stream t_random_forest_classifier_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;random_forest_classifier1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;random_forest_classifier_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_random_forest_classifier_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;random_forest_classifier1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;random_forest_classifier_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_random_forest_classifier_sink_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_random_forest_classifier_sink_01 SELECT * from  random_forest_classifier_predict(RANDOM_FOREST_CLASSIFIER_MODEL,t_random_forest_classifier_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_random_forest_classifier_sink_01 SELECT * from  random_forest_classifier_predict(RANDOM_FOREST_CLASSIFIER_MODEL,streamsql.random_forest_classifier);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_random_forest_classifier_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;random_forest_classifier1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;random_forest_classifier_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_random_forest_classifier_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;random_forest_classifier1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;random_forest_classifier_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_random_forest_classifier_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_random_forest_classifier( FEATURES double ARRAY, prediction double ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_random_forest_classifier(
FEATURES double ARRAY,
prediction double
) 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_random_forest_classifier select * from t_random_forest_classifier_source_01; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_random_forest_classifier select * from t_random_forest_classifier_source_01;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_random_forest_classifier_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_random_forest_classifier;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-219177299">ARRAY[0.2E0,0.4E0,3.0E0]	1.0
ARRAY[4.0E0,1.0E0,0.0E0]	0.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL RANDOM_FOREST_CLASSIFIER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL RANDOM_FOREST_CLASSIFIER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_random_forest_classifier_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_random_forest_classifier_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_random_forest_classifier_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_random_forest_classifier_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists RANDOM_FOREST_CLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA;
drop table if exists t_random_forest_classifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 onevsrest_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  onevsrest_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL ONEVSREST_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ONEVSREST_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_onevsrest_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_onevsrest_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_onevsrest_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_onevsrest_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_onevsrest_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_onevsrest_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists ONEVSREST_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists ONEVSREST_TRAIN_DATA;
drop table if exists t_onevsrest;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE ONEVSREST_TRAIN_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE ONEVSREST_TRAIN_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO ONEVSREST_TRAIN_DATA VALUES (0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,-10.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO ONEVSREST_TRAIN_DATA VALUES (0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,-10.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model onevsrest_model as onevsrest_train(onevsrest_train_data,1,&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model onevsrest_model as onevsrest_train(onevsrest_train_data,1,&apos;{&quot;classifier&quot;:&quot;org.apache.spark.ml.classification.LogisticRegression&quot;,&quot;regParam&quot;:0.0,&quot;elasticNetParam&quot;:0.0,&quot;maxIter&quot;:100,&quot;tol&quot;:1E-6,&quot;fitIntercept&quot;:true,&quot;standardization&quot;:true,&quot;threshold&quot;:0.5,&quot;family&quot;:&quot;auto&quot;}&apos;)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.onevsrest;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.onevsrest;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.onevsrest(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.onevsrest(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.onevsrest VALUES  (ARRAY  [0.2, 0.4]), (ARRAY [4.0, 0.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.onevsrest VALUES
 (ARRAY[0.2, 0.4]), (ARRAY[4.0, 0.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_onevsrest_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;onevsrest_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;onevsrest_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_onevsrest_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;onevsrest_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;onevsrest_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_onevsrest_sink_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_onevsrest_sink_01 SELECT * from  onevsrest_predict(ONEVSREST_MODEL,t_onevsrest_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_onevsrest_sink_01 SELECT * from  onevsrest_predict(ONEVSREST_MODEL,streamsql.onevsrest);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_onevsrest_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;onevsrest_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;onevsrest_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_onevsrest_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;onevsrest_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;onevsrest_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_onevsrest_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_onevsrest( FEATURES double ARRAY, prediction double ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_onevsrest(
FEATURES double ARRAY,
prediction double
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_onevsrest select * from t_onevsrest_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_onevsrest select * from t_onevsrest_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_onevsrest_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_onevsrest;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1007530292">ARRAY[0.2E0,0.4E0]	0.0
ARRAY[4.0E0,0.0E0]	0.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL ONEVSREST_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ONEVSREST_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_onevsrest_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_onevsrest_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists ONEVSREST_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists ONEVSREST_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_onevsrest_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_onevsrest_sink_01;
drop table if exists t_onevsrest;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 naive_bayes_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  naive_bayes_predict_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL NB_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL NB_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists NB_TRAININT_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists NB_TRAININT_DATA;
drop table if exists t_naive_bayes_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE NB_TRAININT_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE NB_TRAININT_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO NB_TRAININT_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO NB_TRAININT_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]),
 (2, ARRAY[0, 0, 1]),
 (2, ARRAY[0, 0, 2]),
 (2, ARRAY[0, 0, 3]),
 (2, ARRAY[0, 0, 4]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL NB_MODEL AS NAIVE_BAYES_TRAIN(NB_TRAININT_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL NB_MODEL AS NAIVE_BAYES_TRAIN(NB_TRAININT_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.naive_bayes;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.naive_bayes;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.naive_bayes(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.naive_bayes(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.naive_bayes VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.naive_bayes VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_naive_bayes_predict_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;naive_bayes_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;naive_bayes_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_naive_bayes_predict_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;naive_bayes_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;naive_bayes_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_naive_bayes_predict_sink_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_naive_bayes_predict_sink_01 SELECT * from  naive_bayes_predict(NB_MODEL,t_naive_bayes_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_naive_bayes_predict_sink_01 SELECT * from  naive_bayes_predict(NB_MODEL,streamsql.naive_bayes);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_naive_bayes_predict_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;naive_bayes_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;naive_bayes_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_naive_bayes_predict_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;naive_bayes_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;naive_bayes_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_naive_bayes_predict_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_naive_bayes_predict( FEATURES double ARRAY, prediction double ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_naive_bayes_predict(
FEATURES double ARRAY,
prediction double
) 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_naive_bayes_predict select * from t_naive_bayes_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_naive_bayes_predict select * from t_naive_bayes_predict_source_01;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_naive_bayes_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_naive_bayes_predict;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2065686156">ARRAY[0.2E0,0.4E0,3.0E0]	2.0
ARRAY[4.0E0,1.0E0,0.0E0]	0.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL NB_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL NB_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists NB_TRAININT_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists NB_TRAININT_DATA;
drop table if exists t_naive_bayes_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 multilayer_perceptron_classifier_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181,node73:2181,node74:2181/linkoopdb/luyao --topic  multilayer_perceptron_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL MULTILAYER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL MULTILAYER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  drop stream  if exists t_multilayer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_multilayer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_multilayer_perceptron_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_multilayer_perceptron_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_multilayer_perceptron_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_multilayer_perceptron_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA;
drop table if exists  t_multilayer_perceptron</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA VALUES (0,ARRAY[1.2,1.3,3.1]),
(1,ARRAY[2.2,2.3,2.1]),
(0,ARRAY[1.0,1.3,3.1]),
(0,ARRAY[0.2,1.3,3.1]),
(0,ARRAY[1.3,0.3,3.1]),
(1,ARRAY[1.3,1.3,4.1]),
(1,ARRAY[1.8,1.3,0.1]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL MULTILAYER_MODEL AS MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN(MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL MULTILAYER_MODEL AS MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN(MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.multilayer_perceptron_classifier;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.multilayer_perceptron_classifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.multilayer_perceptron_classifier(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.multilayer_perceptron_classifier(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.multilayer_perceptron_classifier VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.multilayer_perceptron_classifier VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_multilayer_perceptron_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;multilayer_perceptron_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;multilayer_perceptron_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_multilayer_perceptron_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;multilayer_perceptron_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;multilayer_perceptron_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_multilayer_perceptron_sink_01 SELECT * from  multilayer_perceptron_classifier_predict(MULTILAYER_MODEL,t_multilayer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_multilayer_perceptron_sink_01 SELECT * from  multilayer_perceptron_classifier_predict(MULTILAYER_MODEL,streamsql.multilayer_perceptron_classifier);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_multilayer_perceptron_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;multilayer_perceptron_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;multilayer_perceptron_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_multilayer_perceptron_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;multilayer_perceptron_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;multilayer_perceptron_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_multilayer_perceptron_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_multilayer_perceptron( FEATURES double ARRAY, prediction double ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_multilayer_perceptron(
FEATURES double ARRAY,
prediction double
) 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_multilayer_perceptron select * from t_multilayer_perceptron_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_multilayer_perceptron select * from t_multilayer_perceptron_source_01
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_multilayer_perceptron" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_multilayer_perceptron

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-769762560">FEATURES	PREDICTION
ARRAY[0.2E0,0.4E0,3.0E0]	0.0
ARRAY[4.0E0,1.0E0,0.0E0]	1.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL MULTILAYER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL MULTILAYER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  drop stream  if exists t_multilayer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_multilayer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_multilayer_perceptron_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_multilayer_perceptron_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_multilayer_perceptron_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_multilayer_perceptron_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA;
drop table if exists  t_multilayer_perceptron</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 logisticregression_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/bin/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  logisticregression_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL LOGISTICREGRESSION_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL LOGISTICREGRESSION_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_logisticregression_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_logisticregression_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_logisticregression_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_logisticregression_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_logisticregression_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_logisticregression_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LOGISTICREGRESSION_TRAINING_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LOGISTICREGRESSION_TRAINING_DATA;
drop table if exists t_logisticregression</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE LOGISTICREGRESSION_TRAINING_DATA(label double, features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE LOGISTICREGRESSION_TRAINING_DATA(label double, features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO LOGISTICREGRESSION_TRAINING_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO LOGISTICREGRESSION_TRAINING_DATA VALUES
 (0, array[1, 0, 0]),
 (0, array[2, 0, 0]),
 (0, array[3, 0, 0]),
 (0, array[4, 0, 0]),
 (1, array[0, 1, 0]),
 (1, array[0, 2, 0]),
 (1, array[0, 3, 0]),
 (1, array[0, 4, 0]),
 (2, array[0, 0, 1]),
 (2, array[0, 0, 2]),
 (2, array[0, 0, 3]),
 (2, array[0, 0, 4]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL LOGISTICREGRESSION_MODEL AS LOGISTICREGRESSION_TRAIN(LOGISTICREGRESSION_TRAINING_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL LOGISTICREGRESSION_MODEL AS LOGISTICREGRESSION_TRAIN(LOGISTICREGRESSION_TRAINING_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.logisticregression;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.logisticregression;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.logisticregression(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.logisticregression(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.logisticregression VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.logisticregression VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  create stream t_logisticregression_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;logisticregression_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;logisticregression_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_logisticregression_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;logisticregression_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;logisticregression_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_logisticregression_sink_01 SELECT * from logisticregression_predict(LOGISTICREGRESSION_MODEL,t_logisticregression_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_logisticregression_sink_01 SELECT * from logisticregression_predict(LOGISTICREGRESSION_MODEL,streamsql.logisticregression);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_logisticregression_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;logisticregression_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;logisticregression_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_logisticregression_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;logisticregression_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;logisticregression_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_logisticregression_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_logisticregression( FEATURES double ARRAY, prediction double )" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_logisticregression(
FEATURES double ARRAY,
prediction double
)

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_logisticregression select * from t_logisticregression_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_logisticregression select * from t_logisticregression_source_01</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_logisticregression_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_logisticregression

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1272991995">FEATURES	PREDICTION</stringProp>
                    <stringProp name="-1933807614">ARRAY[0.2E0,0.4E0,3.0E0]	2.0</stringProp>
                    <stringProp name="1422789188">ARRAY[4.0E0,1.0E0,0.0E0]	0.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL LOGISTICREGRESSION_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL LOGISTICREGRESSION_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_logisticregression_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_logisticregression_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_logisticregression_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_logisticregression_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_logisticregression_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_logisticregression_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LOGISTICREGRESSION_TRAINING_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LOGISTICREGRESSION_TRAINING_DATA;
drop table if exists t_logisticregression</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 linearsvc_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  linearsvc_predict_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL LINEARSVC_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL LINEARSVC_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_linearsvc_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_linearsvc_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linearsvc_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linearsvc_predict_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LINEARSVC_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LINEARSVC_TRAIN_DATA;
drop table if exists t_linearsvc_predict</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE LINEARSVC_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE LINEARSVC_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO LINEARSVC_TRAIN_DATA VALUES " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO LINEARSVC_TRAIN_DATA VALUES (0,ARRAY[1.2,1.3,3.1]),
  (1,ARRAY[2.2,2.3,2.1]),
  (0,ARRAY[1.0,1.3,3.1]),
  (0,ARRAY[0.2,1.3,3.1]),
  (0,ARRAY[1.3,0.3,3.1]),
  (1,ARRAY[1.3,1.3,4.1]),
  (1,ARRAY[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL LINEARSVC_MODEL AS LINEARSVC_TRAIN(LINEARSVC_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL LINEARSVC_MODEL AS LINEARSVC_TRAIN(LINEARSVC_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.linearsvc_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.linearsvc_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.linearsvc_predict(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.linearsvc_predict(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  INSERT INTO streamsql.logisticregression VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.linearsvc_predict VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linearsvc_predict_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;linearsvc_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;linearsvc_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_linearsvc_predict_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;linearsvc_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;linearsvc_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into linearsvc_predict_sink SELECT * from linearsvc_predict(LINEARSVC_MODEL,t_linearsvc_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_linearsvc_predict_sink_01 SELECT * from linearsvc_predict(LINEARSVC_MODEL,streamsql.linearsvc_predict);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linearsvc_predict_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;linearsvc_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;linearsvc_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_linearsvc_predict_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;linearsvc_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;linearsvc_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_linearsvc_predict_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_linearsvc_predict( FEATURES double ARRAY, prediction double ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_linearsvc_predict(
FEATURES double ARRAY,
prediction double
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_linearsvc_predict select * from t_linearsvc_predict_source_01  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_linearsvc_predict select * from t_linearsvc_predict_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_linearsvc_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_linearsvc_predict

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-769762560">FEATURES	PREDICTION
ARRAY[0.2E0,0.4E0,3.0E0]	0.0
ARRAY[4.0E0,1.0E0,0.0E0]	1.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL LINEARSVC_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL LINEARSVC_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_linearsvc_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_linearsvc_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linearsvc_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linearsvc_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linearsvc_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linearsvc_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LINEARSVC_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LINEARSVC_TRAIN_DATA;
drop table if exists t_linearsvc_predict</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 lda_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  lda_predict_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL lda_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL lda_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_lda_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_lda_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_lda_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_lda_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_lda_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_lda_predict_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists lda_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists lda_train_data;
drop table if exists t_lda_predict</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table lda_train_data (features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table lda_train_data (features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into lda_train_data VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into lda_train_data VALUES
(array[0.4314975441651938,0.23556758034173494,0.3329348754930712]),
(array[0.4102948931589844,0.24776090803928308,0.34194419880173255]),
(array[0.2097946758876284,0.45373753641180287,0.3364677877005687]),
(array[0.2979553770395886,0.3739169154377782,0.3281277075226332]),
(array[0.27280146347774675,0.3908486412393842,0.336349895282869]),
(array[0.5316139195059199,0.20597059190339642,0.2624154885906837]),
(array[0.424646102395855,0.23807706795712158,0.3372768296470235]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model lda_model as lda_train(lda_train_data,20,2,&apos;online&apos;,10,1024,0.51,0.05,true,true);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model lda_model as lda_train(lda_train_data,20,2,&apos;online&apos;,10,1024.0,0.51,0.05,true,true);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.lda_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.lda_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.lda_predict(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.lda_predict(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.lda_predict VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.lda_predict VALUES
 (ARRAY[0.23953838371693498, 0.4115439191094815, 0.3489176971735836]), (ARRAY[0.424646102395855, 0.23807706795712158, 0.3372768296470235]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_lda_predict_sink_01( FEATURES double ARRAY, prediction double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;lda_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;lda_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_lda_predict_sink_01(
FEATURES double ARRAY,
prediction double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;lda_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;lda_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_lda_predict_sink_01 SELECT * from lda_predict(lda_model,t_lda_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_lda_predict_sink_01 SELECT * from lda_predict(lda_model,streamsql.lda_predict);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_lda_predict_source_01( FEATURES double ARRAY, prediction double ARRAY ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;lda_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;lda_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_lda_predict_source_01(
FEATURES double ARRAY,
prediction double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;lda_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;lda_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_lda_predict_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_lda_predict( FEATURES double ARRAY, prediction double ARRAY ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_lda_predict(
FEATURES double ARRAY,
prediction double ARRAY
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_lda_predict( FEATURES double ARRAY, prediction double ARRAY ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_lda_predict select * from t_lda_predict_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_lda_predict_source_01 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_lda_predict

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1272991995">FEATURES	PREDICTION</stringProp>
                    <stringProp name="765352095">ARRAY[0.23953838371693498E0,0.4115439191094815E0,0.3489176971735836E0]	ARRAY[0.4887266211460053E0,0.5112733788539946E0]</stringProp>
                    <stringProp name="-1742205235">ARRAY[0.424646102395855E0,0.23807706795712158E0,0.3372768296470235E0]	ARRAY[0.5016249235702992E0,0.49837507642970075E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_lda_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_lda_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_lda_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_lda_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_lda_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_lda_predict_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists lda_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists lda_train_data;
drop table if exists t_lda_predict</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 kmeans_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/bin/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  kmeans_predict_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL KMEANS_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL KMEANS_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_kmeans_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_kmeans_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_kmeans_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kmeans_predict_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_kmeans_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kmeans_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists KMEANS_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists KMEANS_TRAIN_DATA;
drop table if exists  t_kmeans_predict</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE KMEANS_TRAIN_DATA  (features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE KMEANS_TRAIN_DATA  (features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO KMEANS_TRAIN_DATA  VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO KMEANS_TRAIN_DATA  VALUES
  (array[1.2,1.3,3.1]),
  (array[2.2,2.3,2.1]),
  (array[1.0,1.3,3.1]),
  (array[0.2,1.3,3.1]),
  (array[1.3,0.3,3.1]),
  (array[1.3,1.3,4.1]),
  (array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL KMEANS_MODEL AS KMEANS_TRAIN(KMEANS_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL KMEANS_MODEL AS KMEANS_TRAIN(KMEANS_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.kmeans_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.kmeans_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.kmeans_predict(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.kmeans_predict(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  INSERT INTO streamsql.kmeans_predict VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.kmeans_predict VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_kmeans_predict_sink_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;kmeans_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;kmeans_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_kmeans_predict_sink_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;kmeans_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;kmeans_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_kmeans_predict_sink_01 SELECT * from kmeans_predict(KMEANS_MODEL,t_kmeans_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_kmeans_predict_sink_01 SELECT * from kmeans_predict(KMEANS_MODEL,streamsql.kmeans_predict);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_kmeans_predict_source_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;kmeans_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;kmeans_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_kmeans_predict_source_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;kmeans_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;kmeans_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_kmeans_predict_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_kmeans_predict( FEATURES double ARRAY, prediction int )" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_kmeans_predict(
FEATURES double ARRAY,
prediction int
)
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_kmeans_predict_source_0 select * from t_kmeans_predict_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_kmeans_predict select * from t_kmeans_predict_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_kmeans_predict_source_01 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_kmeans_predict
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1272991995">FEATURES	PREDICTION</stringProp>
                    <stringProp name="-1722680769">ARRAY[0.2E0,0.4E0,3.0E0]	1</stringProp>
                    <stringProp name="975781122">ARRAY[4.0E0,1.0E0,0.0E0]	0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_kmeans_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_kmeans_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_kmeans_predict_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kmeans_predict_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_kmeans_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kmeans_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists KMEANS_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists KMEANS_TRAIN_DATA;
drop table if exists  t_kmeans_predict
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 gaussian_mixture_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  gaussian_mixture_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL GAUSSIAN_MIXTURE_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL GAUSSIAN_MIXTURE_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_gaussian_mixture_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_gaussian_mixture_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gaussian_mixture_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gaussian_mixture_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gaussian_mixture_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gaussian_mixture_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists GAUSSIAN_MIXTURE_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists GAUSSIAN_MIXTURE_TRAIN_DATA;
drop table if exists t_gaussian_mixture</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE GAUSSIAN_MIXTURE_TRAIN_DATA(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE GAUSSIAN_MIXTURE_TRAIN_DATA(FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO GAUSSIAN_MIXTURE_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO GAUSSIAN_MIXTURE_TRAIN_DATA VALUES
(ARRAY[1.2,1.3,3.1]),
(ARRAY[2.2,2.3,2.1]),
(ARRAY[1.0,1.3,3.1]),
(ARRAY[0.2,1.3,3.1]),
(ARRAY[1.3,0.3,3.1]),
(ARRAY[1.3,1.3,4.1]),
(ARRAY[1.8,1.3,0.1]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL GAUSSIAN_MIXTURE_MODEL AS GAUSSIAN_MIXTURE_TRAIN(GAUSSIAN_MIXTURE_TRAIN_DATA,2,100,0.01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL GAUSSIAN_MIXTURE_MODEL AS GAUSSIAN_MIXTURE_TRAIN(GAUSSIAN_MIXTURE_TRAIN_DATA,2,100,0.01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.gaussian_mixture;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.gaussian_mixture;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.gaussian_mixture(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.gaussian_mixture(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.gaussian_mixture VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.gaussian_mixture VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gaussian_mixture_sink_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gaussian_mixture_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;gaussian_mixture_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_gaussian_mixture_sink_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;gaussian_mixture_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;gaussian_mixture_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_gaussian_mixture_sink_01 SELECT * from kmeans_predict(KMEANS_MODEL,t_gaussian_mixture_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_gaussian_mixture_sink_01 SELECT * from gaussian_mixture_predict(GAUSSIAN_MIXTURE_MODEL,streamsql.gaussian_mixture);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gaussian_mixture_source_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gaussian_mixture_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;gaussian_mixture_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_gaussian_mixture_source_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;gaussian_mixture_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;gaussian_mixture_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_gaussian_mixture_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gaussian_mixture( FEATURES double ARRAY, prediction int )" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_gaussian_mixture(
FEATURES double ARRAY,
prediction int
)

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_gaussian_mixture select * from t_gaussian_mixture_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_gaussian_mixture select * from t_gaussian_mixture_source_01


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_gaussian_mixture_source_01  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_gaussian_mixture
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="808046191">FEATURES	PREDICTION
</stringProp>
                    <stringProp name="-1863496277">ARRAY[0.2E0,0.4E0,3.0E0]	1
</stringProp>
                    <stringProp name="975781122">ARRAY[4.0E0,1.0E0,0.0E0]	0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_gaussian_mixture_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_gaussian_mixture_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gaussian_mixture_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gaussian_mixture_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gaussian_mixture_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gaussian_mixture_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists GAUSSIAN_MIXTURE_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists GAUSSIAN_MIXTURE_TRAIN_DATA;
drop table if exists t_gaussian_mixture</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 decision_tree_regression_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  decision_tree_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_decision_tree_regression_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_decision_tree_regression_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;
drop table if exists t_decision_tree</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE DECISION_TREE_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE DECISION_TREE_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO DECISION_TREE_REGRESSION_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO DECISION_TREE_REGRESSION_TRAIN_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL DECISION_TREE_REGRESSION_MODEL AS DECISION_TREE_REGRESSION_TRAIN(DECISION_TREE_REGRESSION_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL DECISION_TREE_REGRESSION_MODEL AS DECISION_TREE_REGRESSION_TRAIN(DECISION_TREE_REGRESSION_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.decision_tree_regression;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.decision_tree_regression;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.decision_tree_regression(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.decision_tree_regression(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.decision_tree_regression VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.decision_tree_regression VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_decision_tree_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;decision_tree_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;decision_tree_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_decision_tree_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_decision_tree_sink_01 SELECT * from decision_tree_regression_predict(DECISION_TREE_REGRESSION_MODEL,t_decision_tree_regression_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_decision_tree_sink_01 SELECT * from decision_tree_regression_predict(DECISION_TREE_REGRESSION_MODEL,streamsql.decision_tree_regression);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_decision_tree_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;decision_tree_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;decision_tree_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_decision_tree_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter stream t_decision_tree_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_decision_tree( FEATURES double ARRAY, prediction double )" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_decision_tree(
FEATURES double ARRAY,
prediction double
)

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_decision_tree( FEATURES double ARRAY, prediction double )" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_decision_tree select * from t_decision_tree_source_01


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_decision_tree_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_decision_tree

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1515099934">FEATURES	PREDICTION
ARRAY[0.2E0,0.4E0,3.0E0]	1.0
ARRAY[4.0E0,1.0E0,0.0E0]	0.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_decision_tree_regression_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_decision_tree_regression_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;
drop table if exists t_decision_tree</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 linear_regression_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  linear_regression_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL  LINEAR_REGRESSION_MODEL  IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL  LINEAR_REGRESSION_MODEL  IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_linear_regression_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_linear_regression_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linear_regression_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linear_regression_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linear_regression_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linear_regression_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LINEAR_REGRESSION_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LINEAR_REGRESSION_TRAIN_DATA;
drop table if exists t_linear_regression</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE LINEAR_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE LINEAR_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO LINEAR_REGRESSION_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO LINEAR_REGRESSION_TRAIN_DATA VALUES
 (0.32, ARRAY[1, 0, 0]),
 (1.25, ARRAY[2, 0, 0]),
 (2.26, ARRAY[3, 0, 0]),
 (2.3, ARRAY[4, 0, 0]),
 (2.1, ARRAY[0, 1, 0]),
 (1.26, ARRAY[0, 2, 0]),
 (10, ARRAY[0, 3, 0]),
 (15, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL LINEAR_REGRESSION_MODEL AS LINEAR_REGRESSION_TRAIN(LINEAR_REGRESSION_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL LINEAR_REGRESSION_MODEL AS LINEAR_REGRESSION_TRAIN(LINEAR_REGRESSION_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.linear_regression;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.linear_regression;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.linear_regression(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM streamsql.linear_regression(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.linear_regression VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.linear_regression VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linear_regression_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;linear_regression_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;linear_regression_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_linear_regression_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;linear_regression_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;linear_regression_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_linear_regression_sink_01 SELECT * from linear_regression_predict(LINEAR_REGRESSION_MODEL,t_linear_regression_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_linear_regression_sink_01 SELECT * from linear_regression_predict(LINEAR_REGRESSION_MODEL,streamsql.linear_regression);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linear_regression_source_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;linear_regression_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;linear_regression_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_linear_regression_source_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;linear_regression_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;linear_regression_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_linear_regression_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linear_regression( FEATURES double ARRAY, prediction double )" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_linear_regression(
FEATURES double ARRAY,
prediction double
)
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linear_regression( FEATURES double ARRAY, prediction double )" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_linear_regression select * from t_linear_regression_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_linear_regression_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_linear_regression

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-889821399">FEATURES	PREDICTION
ARRAY[0.2E0,0.4E0,3.0E0]	-0.6030666159548821
ARRAY[4.0E0,1.0E0,0.0E0]	7.318999969032673</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL  LINEAR_REGRESSION_MODEL  IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL  LINEAR_REGRESSION_MODEL  IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_linear_regression_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_linear_regression_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linear_regression_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linear_regression_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linear_regression_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linear_regression_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LINEAR_REGRESSION_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LINEAR_REGRESSION_TRAIN_DATA;
drop table if exists t_linear_regression</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 bisecting_kmeans_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  linear_regression_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL bisecting_kmeans_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL bisecting_kmeans_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_bisecting_kmeans_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_bisecting_kmeans_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_bisecting_kmeans_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_bisecting_kmeans_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_bisecting_kmeans_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_bisecting_kmeans_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists bisecting_kmeans_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists bisecting_kmeans_train_data;
drop table if exists t_bisecting_kmeans</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table bisecting_kmeans_train_data (features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table bisecting_kmeans_train_data (features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into bisecting_kmeans_train_data VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into bisecting_kmeans_train_data VALUES
(array[1.2,1.3,3.1]),
(array[2.2,2.3,2.1]),
(array[1.0,1.3,3.1]),
(array[0.2,1.3,3.1]),
(array[1.3,0.3,3.1]),
(array[1.3,1.3,4.1]),
(array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model bisecting_kmeans_model as bisecting_kmeans_train(bisecting_kmeans_train_data,4,20,1.0);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model bisecting_kmeans_model as bisecting_kmeans_train(bisecting_kmeans_train_data,4,20,1.0);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.bisecting_kmeans;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.bisecting_kmeans;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.bisecting_kmeans(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.bisecting_kmeans(FEATURES DOUBLE ARRAY)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.bisecting_kmeans VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.bisecting_kmeans VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_bisecting_kmeans_sink_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;bisecting_kmeans_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;bisecting_kmeans_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_bisecting_kmeans_sink_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;bisecting_kmeans_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;bisecting_kmeans_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_bisecting_kmeans_sink_01 SELECT * from bisecting_kmeans_predict(bisecting_kmeans_model,t_bisecting_kmeans_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_bisecting_kmeans_sink_01 SELECT * from bisecting_kmeans_predict(bisecting_kmeans_model,streamsql.bisecting_kmeans);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_bisecting_kmeans_source_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;bisecting_kmeans_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;bisecting_kmeans_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_bisecting_kmeans_source_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;bisecting_kmeans_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;bisecting_kmeans_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_bisecting_kmeans_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_bisecting_kmeans_source_01( FEATURES double ARRAY, prediction int ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_bisecting_kmeans(
FEATURES double ARRAY,
prediction int
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_bisecting_kmeans select * from t_bisecting_kmeans_source_01 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_bisecting_kmeans select * from t_bisecting_kmeans_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_bisecting_kmeans_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_bisecting_kmeans

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2125638690">FEATURES	PREDICTION
ARRAY[0.2E0,0.4E0,3.0E0]	1
ARRAY[4.0E0,1.0E0,0.0E0]	0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL bisecting_kmeans_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL bisecting_kmeans_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_bisecting_kmeans_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_bisecting_kmeans_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_bisecting_kmeans_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_bisecting_kmeans_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_bisecting_kmeans_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_bisecting_kmeans_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists bisecting_kmeans_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists bisecting_kmeans_train_data;
drop table if exists t_bisecting_kmeans</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 string_indexer" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  string_indexer_sink1</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL STRING_INDEXER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL STRING_INDEXER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_string_indexer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_string_indexer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_string_indexer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_string_indexer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_string_indexer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_string_indexer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists STRINGINDEXER_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists STRINGINDEXER_DATA;
drop table if exists t_string_indexer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE STRINGINDEXER_DATA(CATEGORY VARCHAR(20));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE STRINGINDEXER_DATA(CATEGORY VARCHAR(20));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO STRINGINDEXER_DATA VALUES(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;a&apos;,&apos;b&apos;,&apos;b&apos;,&apos;c&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO STRINGINDEXER_DATA VALUES(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;a&apos;,&apos;b&apos;,&apos;b&apos;,&apos;c&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL STRING_INDEXER_MODEL AS STRING_INDEXER_TRANSFORMER(STRINGINDEXER_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL STRING_INDEXER_MODEL AS STRING_INDEXER_TRANSFORMER(STRINGINDEXER_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.string_indexer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.string_indexer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.string_indexer(category varchar(32));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.string_indexer(category varchar(32))properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.string_indexer VALUES(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;a&apos;,&apos;b&apos;,&apos;b&apos;,&apos;c&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.string_indexer VALUES(&apos;a&apos;),(&apos;b&apos;),(&apos;c&apos;),(&apos;a&apos;),(&apos;b&apos;),(&apos;b&apos;),(&apos;c&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_string_indexer_sink_01( category varchar(32), categoryIndex double  ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;string_indexer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;string_indexer_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_string_indexer_sink_01(
category varchar(32),
categoryIndex double 
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;string_indexer_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;string_indexer_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_string_indexer_sink_01 SELECT * from string_indexer(STRING_INDEXER_MODEL,t_string_indexer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_string_indexer_sink_01 SELECT * from string_indexer(STRING_INDEXER_MODEL,streamsql.string_indexer);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_string_indexer_source_01( category varchar(32), categoryIndex double  ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;string_indexer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;string_indexer_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_string_indexer_source_01(
category varchar(32),
categoryIndex double 
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;string_indexer_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;string_indexer_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_string_indexer_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_string_indexer( category varchar(32), categoryIndex double  )  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_string_indexer(
category varchar(32),
categoryIndex double 
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_string_indexer select * from t_string_indexer_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_string_indexer select * from t_string_indexer_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_string_indexer_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_string_indexer
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL STRING_INDEXER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL STRING_INDEXER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_string_indexer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_string_indexer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_string_indexer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_string_indexer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_string_indexer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_string_indexer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists STRINGINDEXER_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists STRINGINDEXER_DATA;
drop table if exists t_string_indexer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 chisqselector" enabled="true">
              <stringProp name="TestPlan.comments">没结果</stringProp>
            </GenericController>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  chisqselector_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;
drop table if exists t_chisqselector;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_chisqselector_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_chisqselector_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_chisqselector_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_chisqselector_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_chisqselector_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_chisqselector_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL CHISQSELECTOR_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL CHISQSELECTOR_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL RFORMULA_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL RFORMULA_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA(ID DOUBLE,COUNTRY VARCHAR(32) ,HOUR DOUBLE,CLICKED DOUBLE);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA(ID DOUBLE,COUNTRY VARCHAR(32) ,HOUR DOUBLE,CLICKED DOUBLE);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(7,&apos;us&apos;,18,1.0),(8,&apos;ca&apos;,18,1.0),(9,&apos;nz&apos;,19,1.0),(10,&apos;as&apos;,18,1.0),(11,&apos;uu&apos;,18,0.0);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(7,&apos;us&apos;,18,1.0),(8,&apos;ca&apos;,18,1.0),(9,&apos;nz&apos;,19,1.0),(10,&apos;as&apos;,18,1.0),(11,&apos;uu&apos;,18,0.0);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL RFORMULA_MODEL AS RFORMULA_TRANSFORMER((SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL RFORMULA_MODEL AS RFORMULA_TRANSFORMER((SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL CHISQSELECTOR_MODEL AS CHISQSELECTOR_TRANSFORMER((SELECT * FROM RFORMULA(RFORMULA_MODEL,(SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA))));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL CHISQSELECTOR_MODEL AS CHISQSELECTOR_TRANSFORMER((SELECT * FROM RFORMULA(RFORMULA_MODEL,(SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA))));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.chisqselector;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.chisqselector;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.chisqselector(features double array,label double);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.chisqselector(features double array,label double)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.chisqselector VALUES ((array[0.0, 1.0, 0.0, 0.0, 18.0]),1.0 ),((array[0.0, 0.0, 0.0, 0.0, 19.0]),1.0 );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.chisqselector VALUES
((array[0.0, 1.0, 0.0, 0.0, 18.0]),1.0 ),((array[0.0, 0.0, 0.0, 0.0, 19.0]),1.0 );</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_chisqselector_sink_01( selectFeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;chisqselector_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;chisqselector_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_chisqselector_sink_01(
selectFeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;chisqselector_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;chisqselector_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_chisqselector_sink_01 SELECT selectFeatures  from chisqselector(CHISQSELECTOR_MODEL, t_chisqselector_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_chisqselector_sink_01 SELECT selectFeatures  from chisqselector(CHISQSELECTOR_MODEL, streamsql.chisqselector);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_chisqselector_source_01( selectFeatures double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;chisqselector_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;chisqselector_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_chisqselector_source_01(
selectFeatures double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;chisqselector_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;chisqselector_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_chisqselector_source_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_chisqselector( selectFeatures double array ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_chisqselector(
selectFeatures double array
) 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_chisqselector select * from t_chisqselector_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_chisqselector select * from t_chisqselector_source_01
 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_chisqselector_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_chisqselector

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL RFORMULA_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL RFORMULA_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL CHISQSELECTOR_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL CHISQSELECTOR_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_chisqselector_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_chisqselector_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_chisqselector_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_chisqselector_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_chisqselector_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_chisqselector_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;
drop table if exists t_chisqselector;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 word2vec" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  word2vec_sink1</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL WORD2VEC_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL WORD2VEC_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_word2vec_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_word2vec_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_word2vec_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_word2vec_source_01;
drop table if exists t_word2vec</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_word2vec_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_word2vec_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL WORD2VEC_MODEL AS WORD2VEC_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL WORD2VEC_MODEL AS WORD2VEC_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  drop table if exists streamsql.word2vec;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.word2vec;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.word2vec(words varchar(32) array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.word2vec(words varchar(32) array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.word2vec VALUES (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.word2vec VALUES
(array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_word2vec_sink_01( Features double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;word2vec_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;word2vec_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_word2vec_sink_01(
Features double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;word2vec_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;word2vec_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_word2vec_sink_01 SELECT Features from word2vec(WORD2VEC_MODEL, t_word2vec_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_word2vec_sink_01 SELECT Features  from word2vec(WORD2VEC_MODEL, streamsql.word2vec);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_word2vec_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;word2vec_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;word2vec_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_word2vec_source_01(
Features double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;word2vec_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;word2vec_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_word2vec_source_01 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_word2vec_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;word2vec_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;word2vec_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_word2vec(
Features double array
)

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_word2vec_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;word2vec_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;word2vec_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_word2vec select * from t_word2vec_source_01
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_word2vec_source_01 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_word2vec
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL WORD2VEC_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL WORD2VEC_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_word2vec_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_word2vec_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_word2vec_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_word2vec_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_word2vec_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_word2vec_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;
drop table if exists t_word2vec</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 countvectorizer" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  countvectorizer_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL COUNTVECTORIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL COUNTVECTORIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_countvectorizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_countvectorizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_countvectorizer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_countvectorizer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_countvectorizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_countvectorizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;
drop table if exists t_countvectorizer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL COUNTVECTORIZER_MODEL AS COUNTVECTORIZER_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL COUNTVECTORIZER_MODEL AS COUNTVECTORIZER_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.countvectorizer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.countvectorizer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.countvectorizer(words varchar(32) array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.countvectorizer(words varchar(32) array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.word2vec VALUES (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.countvectorizer VALUES
(array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_countvectorizer_sink_01( Features double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;countvectorizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;countvectorizer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_countvectorizer_sink_01(
Features double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;countvectorizer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;countvectorizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_countvectorizer_sink_01 SELECT Features from countvectorizer(COUNTVECTORIZER_MODEL, t_countvectorizer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_countvectorizer_sink_01 SELECT Features from countvectorizer(COUNTVECTORIZER_MODEL, streamsql.countvectorizer);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_countvectorizer_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;countvectorizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;countvectorizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_countvectorizer_source_01(
Features double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;countvectorizer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;countvectorizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_countvectorizer_source_01 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_countvectorizer_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;countvectorizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;countvectorizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_countvectorizer(
Features double array
) 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_countvectorizer_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;countvectorizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;countvectorizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_countvectorizer select * from t_countvectorizer_source_01
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_countvectorizer_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_countvectorizer

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1534606396">ARRAY[1.0E0,1.0E0,0.0E0,0.0E0,1.0E0,1.0E0,0.0E0,0.0E0,0.0E0,1.0E0,0.0E0,0.0E0,0.0E0,1.0E0,0.0E0,1.0E0]</stringProp>
                    <stringProp name="1809106302">ARRAY[0.0E0,0.0E0,1.0E0,1.0E0,0.0E0,0.0E0,1.0E0,0.0E0,0.0E0,0.0E0,1.0E0,0.0E0,0.0E0,0.0E0,1.0E0,0.0E0]</stringProp>
                    <stringProp name="-1108082593">ARRAY[1.0E0,0.0E0,0.0E0,0.0E0,0.0E0,0.0E0,0.0E0,1.0E0,1.0E0,0.0E0,0.0E0,1.0E0,0.0E0,0.0E0,0.0E0,0.0E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL COUNTVECTORIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL COUNTVECTORIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_countvectorizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_countvectorizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_countvectorizer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_countvectorizer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_countvectorizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_countvectorizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;
drop table if exists t_countvectorizer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 gbtclassifier_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  gbtclassifier_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL GBTCLASSIFIER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL GBTCLASSIFIER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_gbtclassifier_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_gbtclassifier_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gbtclassifier_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gbtclassifier_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gbtclassifier_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gbtclassifier_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists GBTCLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists GBTCLASSIFIER_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE GBTCLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE GBTCLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO GBTCLASSIFIER_TRAIN_DATA VALUES  (0, ARRAY[1, 0, 0]),  (0, ARRAY[2, 0, 0]),  (0, ARRAY[3, 0, 0]),  (0, ARRAY[4, 0, 0]),  (1, ARRAY[0, 1, 0]),  (1, ARRAY[0, 2, 0]),  (1, ARRAY[0, 3, 0]),  (1, ARRAY[0, 4, 0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO GBTCLASSIFIER_TRAIN_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL GBTCLASSIFIER_MODEL AS GBTCLASSIFIER_TRAIN(GBTCLASSIFIER_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL GBTCLASSIFIER_MODEL AS GBTCLASSIFIER_TRAIN(GBTCLASSIFIER_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.gbtclassifier;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.gbtclassifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.gbtclassifier(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.gbtclassifier(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.gbtclassifier VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.gbtclassifier VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gbtclassifier_sink_01( Features double array, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gbtclassifier_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;gbtclassifier_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_gbtclassifier_sink_01(
Features double array,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;gbtclassifier_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;gbtclassifier_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_gbtclassifier_sink_01 SELECT *  from gbtclassifier_predict(GBTCLASSIFIER_MODEL, t_gbtclassifier_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_gbtclassifier_sink_01 SELECT *  from gbtclassifier_predict(GBTCLASSIFIER_MODEL, streamsql.gbtclassifier);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gbtclassifier_source_01( Features double array, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gbtclassifier_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;gbtclassifier_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_gbtclassifier_source_01(
Features double array,
prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;gbtclassifier_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;gbtclassifier_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_gbtclassifier_source_01 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gbtclassifier_source_01( Features double array, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gbtclassifier_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;gbtclassifier_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_gbtclassifier(
Features double array,
prediction double
)

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gbtclassifier_source_01( Features double array, prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gbtclassifier_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;gbtclassifier_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_gbtclassifier select * from t_gbtclassifier_source_01;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_gbtclassifier_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_gbtclassifier;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1933808575">ARRAY[0.2E0,0.4E0,3.0E0]	1.0</stringProp>
                    <stringProp name="1422789188">ARRAY[4.0E0,1.0E0,0.0E0]	0.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL GBTCLASSIFIER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL GBTCLASSIFIER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_gbtclassifier_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_gbtclassifier_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gbtclassifier_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gbtclassifier_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gbtclassifier_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gbtclassifier_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists GBTCLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists GBTCLASSIFIER_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 decision_tree_predict" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  decision_tree_sink1</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists DT_TRAINING_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DT_TRAINING_DATA;
drop table if exists t_decision_tree</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_decision_tree_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_decision_tree_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DT_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DT_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE DT_TRAINING_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE DT_TRAINING_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO DT_TRAINING_DATA" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO DT_TRAINING_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]),
 (2, ARRAY[0, 0, 1]),
 (2, ARRAY[0, 0, 2]),
 (2, ARRAY[0, 0, 3]),
 (2, ARRAY[0, 0, 4]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL DT_MODEL AS DECISION_TREE_TRAIN(DT_TRAINING_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL DT_MODEL AS DECISION_TREE_TRAIN(DT_TRAINING_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.decision_tree;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.decision_tree;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.decision_tree(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.decision_tree(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.decision_tree VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.decision_tree VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create t_stream decision_tree_sink_01( Features double array, Prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;decision_tree_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;decision_tree_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_decision_tree_sink_01(
Features double array,
Prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_decision_tree_sink_01 SELECT *  from decision_tree_predict(DT_MODEL, t_decision_tree_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_decision_tree_sink_01 SELECT * from decision_tree_predict(DT_MODEL, streamsql.decision_tree);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_decision_tree_source_01( Features double array, Prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;decision_tree_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;decision_tree_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_decision_tree_source_01(
Features double array,
Prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_decision_tree_source_01 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_decision_tree( Features double array, Prediction double ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_decision_tree(
Features double array,
Prediction double
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table t_decision_tree( Features double array, Prediction double ) " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_decision_tree select * from t_decision_tree_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_decision_tree_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_decision_tree

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1933807614">ARRAY[0.2E0,0.4E0,3.0E0]	2.0</stringProp>
                    <stringProp name="1422789188">ARRAY[4.0E0,1.0E0,0.0E0]	0.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DT_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DT_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_decision_tree_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_decision_tree_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists DT_TRAINING_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DT_TRAINING_DATA;
drop table if exists t_decision_tree</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 tokenizer " enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  tokenizer_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_tokenizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_tokenizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_tokenizer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_tokenizer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_tokenizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_tokenizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.tokenizer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.tokenizer;
drop stream if exists t_tokenizer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.tokenizer(sentence varchar(2048)); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.tokenizer(sentence varchar(2048))properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 NSERT INTO streamsql.tokenizer VALUES (&apos;Hi I heard about Spark&apos;),(&apos;I wish Java could use case classes&apos;),(&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.tokenizer VALUES
(&apos;Hi I heard about Spark&apos;),(&apos;I wish Java could use case classes&apos;),(&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_tokenizer_sink_01( words varchar(32) array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;tokenizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;tokenizer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_tokenizer_sink_01(
words varchar(32) array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;tokenizer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;tokenizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_tokenizer_sink_01 SELECT * from tokenizer(TOKENIZER_MODEL, t_tokenizer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_tokenizer_sink_01 SELECT words from tokenizer(TOKENIZER_MODEL, streamsql.tokenizer);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_tokenizer_source_01( words varchar(32) array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;tokenizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;tokenizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_tokenizer_source_01(
words varchar(32) array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;tokenizer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;tokenizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_tokenizer_source_01 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_tokenizer_source_01( words varchar(32) array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;tokenizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;tokenizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_tokenizer(
words varchar(32) array
)

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_tokenizer_source_01( words varchar(32) array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;tokenizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;tokenizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_tokenizer select * from t_tokenizer_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_tokenizer_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_tokenizer

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1981514974">ARRAY[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]</stringProp>
                    <stringProp name="-89081591">ARRAY[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]</stringProp>
                    <stringProp name="-49751875">ARRAY[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_tokenizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_tokenizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_tokenizer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_tokenizer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_tokenizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_tokenizer_sink_01;
drop stream if exists t_tokenizer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 hashingtf  " enabled="true">
              <stringProp name="TestPlan.comments">没结果</stringProp>
            </GenericController>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  hashingtf_sink8</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.hashingtf; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.hashingtf;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_hashingtf_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_hashingtf_source_01;
drop table if exists t_hashingtf</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_hashingtf_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_hashingtf_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_hashingtf_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_hashingtf_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL HASHINGTF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL HASHINGTF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.hashingtf(words varchar(32) array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.hashingtf(words varchar(32) array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.hashingtf values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.hashingtf values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_hashingtf_sink_01( rawfeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;hashingtf_sink8&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;hashingtf_sink&apos;, &apos;max.request.size&apos;:&apos;1048627&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_hashingtf_sink_01(
rawfeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;hashingtf_sink8&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;hashingtf_sink&apos;,
&apos;max.request.size&apos;:&apos;1048627&apos;,
&apos;format&apos;:&apos;json&apos;
);


 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_hashingtf_sink_01 SELECT * from hashingtf(HASHINGTF_MODEL, t_hashingtf_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_hashingtf_sink_01 SELECT rawfeatures from hashingtf(HASHINGTF_MODEL, streamsql.hashingtf);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_hashingtf_source_01( rawfeatures double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;hashingtf_sink8&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;hashingtf_sink&apos;, &apos;max.request.size&apos;:&apos;1048627&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_hashingtf_source_01(
rawfeatures double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;hashingtf_sink8&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;hashingtf_sink&apos;,
&apos;max.request.size&apos;:&apos;1048627&apos;,
&apos;format&apos;:&apos;json&apos;
);


 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_hashingtf_source_01 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_hashingtf_source_01( rawfeatures double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;hashingtf_sink8&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;hashingtf_sink&apos;, &apos;max.request.size&apos;:&apos;1048627&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_hashingtf(
rawfeatures double array
) 


 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_hashingtf_source_01( rawfeatures double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;hashingtf_sink8&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;hashingtf_sink&apos;, &apos;max.request.size&apos;:&apos;1048627&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_hashingtf select * from t_hashingtf_source_01


 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_hashingtf_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_hashingtf


 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL HASHINGTF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL HASHINGTF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_hashingtf_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_hashingtf_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_hashingtf_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_hashingtf_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_hashingtf_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_hashingtf_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.hashingtf; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.hashingtf;
drop table if exists t_hashingtf</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 idf" enabled="true">
              <stringProp name="TestPlan.comments">没结果</stringProp>
            </GenericController>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  idf_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;
drop table if exists t_idf</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_idf_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_idf_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_idf_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_idf_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_idf_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_idf_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL IDF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL IDF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL HASHINGTF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL HASHINGTF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL IDF_MODEL AS IDF_TRANSFORMER((SELECT * FROM HASHINGTF(HASHINGTF_MODEL,(SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)))));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL IDF_MODEL AS IDF_TRANSFORMER((SELECT * FROM HASHINGTF(HASHINGTF_MODEL,(SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)))));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.idf; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.idf;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.idf(rawfeatures double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.idf(rawfeatures double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.idf values (array[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 1.0]),(array[0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 3.0]),(array[0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.idf values (array[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 1.0]),(array[0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 3.0]),(array[0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_idf_sink_01( Features double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;idf_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;idf_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_idf_sink_01(
Features double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;idf_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;idf_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_idf_sink_01 SELECT Features from idf(IDF_MODEL, t_idf_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_idf_sink_01 SELECT Features from idf(IDF_MODEL, streamsql.idf);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_idf_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;idf_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;idf_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_idf_source_01(
Features double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;idf_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;idf_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">alter stream t_idf_source_01 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">data值为float</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_idf_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;idf_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;idf_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_idf(
Features double array
) 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_idf_source_01( Features double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;idf_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;idf_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_idf select * from t_idf_source_01


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_idf_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_idf
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-455199022">ARRAY[1.3862943611198906E0,0.0E0,0.0E0,0.0E0,0.0E0,1.3862943611198906E0,0.0E0,2.772588722239781E0,0.0E0,1.3862943611198906E0]</stringProp>
                    <stringProp name="1769537273">ARRAY[0.0E0,0.0E0,1.3862943611198906E0,1.3862943611198906E0,0.0E0,1.3862943611198906E0,0.0E0,1.3862943611198906E0,0.0E0,4.1588830833596715E0]</stringProp>
                    <stringProp name="297552536">ARRAY[0.0E0,0.0E0,0.0E0,1.3862943611198906E0,1.3862943611198906E0,1.3862943611198906E0,1.3862943611198906E0,0.0E0,1.3862943611198906E0,0.0E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="false">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic idf_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1522009874">{&quot;FEATURES&quot;:[1.3862943611198906,0.0,0.0,0.0,0.0,1.3862943611198906,0.0,2.772588722239781,0.0,1.3862943611198906]}</stringProp>
                    <stringProp name="-1635804329"> {&quot;FEATURES&quot;:[0.0,0.0,1.3862943611198906,1.3862943611198906,0.0,1.3862943611198906,0.0,1.3862943611198906,0.0,4.1588830833596715]}</stringProp>
                    <stringProp name="-1535152392">{&quot;FEATURES&quot;:[0.0,0.0,0.0,1.3862943611198906,1.3862943611198906,1.3862943611198906,1.3862943611198906,0.0,1.3862943611198906,0.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL HASHINGTF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL HASHINGTF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_idf_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_idf_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL IDF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL IDF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_idf_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_idf_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_idf_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_idf_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;
drop table if exists t_idf</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 binarizer ***" enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  binarizer_sink1</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL binarizer_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL binarizer_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_binarizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_binarizer_dbsource_01;
drop table if exists t_binarizer</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_binarizer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_binarizer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_binarizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_binarizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model binarizer_model as binarizer_transformer();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model binarizer_model as binarizer_transformer();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.binarizer; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.binarizer;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.binarizer(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.binarizer(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.binarizer values (array[0.8]),(array[1.0]),(array[0.5]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.binarizer values (array[0.8]),(array[1.0]),(array[0.5]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_binarizer_sink_01( binarizedfeature double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;binarizer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;binarizer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_binarizer_sink_01(
binarizedfeature double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;binarizer_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;binarizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_binarizer_sink_01 SELECT * from binarizer(binarizer_model, t_binarizer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_binarizer_sink_01 SELECT binarizedfeature from binarizer(binarizer_model, streamsql.binarizer);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_binarizer_source_01( binarizedfeature double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;binarizer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;binarizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_binarizer_source_01(
binarizedfeature double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;binarizer_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;binarizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_binarizer_source_01( binarizedfeature double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;binarizer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;binarizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_binarizer(
binarizedfeature double array
)

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_binarizer_source_01( binarizedfeature double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;binarizer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;binarizer_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  t_binarizer select * from t_binarizer_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_binarizer_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_binarizer

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic binarizer_sink1  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-242020219">{&quot;BINARIZEDFEATURE&quot;:[1.0]}</stringProp>
                    <stringProp name="-242020219">{&quot;BINARIZEDFEATURE&quot;:[1.0]}</stringProp>
                    <stringProp name="-242020219">{&quot;BINARIZEDFEATURE&quot;:[1.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL binarizer_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL binarizer_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_binarizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_binarizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_binarizer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_binarizer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_binarizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_binarizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.binarizer; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.binarizer;
drop table if exists t_binarizer
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 dct" enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  dct_sink</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL dct_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL dct_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_dct_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_dct_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_dct_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dct_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_dct_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dct_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model dct_model as dct_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model dct_model as dct_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.dct; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.dct;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.dct(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.dct(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.dct values (array[0.0, 1.0, -2.0, 3.0]),(array[-1.0, 2.0, 4.0, -7.0]),(array[14.0, -2.0, -5.0, 1.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.dct values (array[0.0, 1.0, -2.0, 3.0]),(array[-1.0, 2.0, 4.0, -7.0]),(array[14.0, -2.0, -5.0, 1.0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_dct_sink_01( featuresdct double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;dct_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;dct_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_dct_sink_01(
featuresdct double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;dct_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;dct_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_dct_sink_01 SELECT * from dct(dct_model, t_dct_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_dct_sink_01 SELECT featuresdct from dct(dct_model, streamsql.dct);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_dct_source_01( featuresdct double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;dct_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;dct_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_dct_source_01(
featuresdct double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;dct_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;dct_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_dct_source_01( featuresdct double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;dct_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;dct_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_dct_source_01(
featuresdct double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;dct_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;dct_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_dct_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_dct_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic dct_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1251276174">{&quot;FEATURESDCT&quot;:[-1.0,3.378492794482933,-7.000000000000001,2.9301512653149677]}
{&quot;FEATURESDCT&quot;:[4.0,9.304453421915744,11.000000000000002,1.5579302036357163]}
{&quot;FEATURESDCT&quot;:[1.0,-1.1480502970952693,2.0000000000000004,-2.7716385975338604]}
</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1726655869">{&quot;FEATURESDCT&quot;:[-1.0,3.378492794482933,-7.000000000000001,2.9301512653149677]}</stringProp>
                    <stringProp name="1726655869">{&quot;FEATURESDCT&quot;:[-1.0,3.378492794482933,-7.000000000000001,2.9301512653149677]}</stringProp>
                    <stringProp name="-551243800">{&quot;FEATURESDCT&quot;:[1.0,-1.1480502970952693,2.0000000000000004,-2.7716385975338604]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL dct_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL dct_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_dct_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dct_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_dct_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_dct_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_dct_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dct_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.dct; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.dct;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 ngram " enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  binarizer_sink1</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL ngram_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ngram_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_ngram_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_ngram_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_ngram_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_ngram_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_ngram_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_ngram_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model ngram_model as ngram_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model ngram_model as ngram_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.ngram; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.ngram;
drop table if exists t_ngram</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.ngram(words varchar(32) array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.ngram(words varchar(32) array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.ngram values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.ngram values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_ngram_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.ngram&apos;);" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_ngram_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;${dburl}&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.ngram&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_ngram_sink_01( ngrams varchar(32) array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;ngram_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;ngram_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_ngram_sink_01(
ngrams varchar(32) array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;ngram_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;ngram_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_ngram_sink_01 SELECT ngrams from ngram(ngram_model, t_ngram_dbsource_01); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_ngram_sink_01 SELECT ngrams from ngram(ngram_model, streamsql.ngram);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="763063948">{&quot;NGRAMS&quot;:[&quot;logistic regression&quot;,&quot;regression models&quot;,&quot;models are&quot;,&quot;are neat&quot;]}</stringProp>
                    <stringProp name="-1605476865">{&quot;NGRAMS&quot;:[&quot;i wish&quot;,&quot;wish java&quot;,&quot;java could&quot;,&quot;could use&quot;,&quot;use case&quot;,&quot;case classes&quot;]}</stringProp>
                    <stringProp name="816538656">{&quot;NGRAMS&quot;:[&quot;hi i&quot;,&quot;i heard&quot;,&quot;heard about&quot;,&quot;about spark&quot;]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_ngram_source_01( ngrams varchar(32) array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;ngram_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;ngram_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_ngram_source_01(
ngrams varchar(32) array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;ngram_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;ngram_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_ngram_source_01( ngrams varchar(32) array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;ngram_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;ngram_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table t_ngram(
ngrams varchar(32) array
)
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_ngram_source_01( ngrams varchar(32) array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;ngram_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;ngram_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into t_ngram select * from t_ngram_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_ngram_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_ngram

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic ngram_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1280625101">{&quot;NGRAMS&quot;:[&quot;i wish&quot;,&quot;wish java&quot;,&quot;java could&quot;,&quot;could use&quot;,&quot;use case&quot;,&quot;case classes&quot;]}
{&quot;NGRAMS&quot;:[&quot;logistic regression&quot;,&quot;regression models&quot;,&quot;models are&quot;,&quot;are neat&quot;]}
{&quot;NGRAMS&quot;:[&quot;hi i&quot;,&quot;i heard&quot;,&quot;heard about&quot;,&quot;about spark&quot;]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL ngram_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ngram_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_ngram_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_ngram_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_ngram_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_ngram_dbsource_01;
drop table if exists t_ngram</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_ngram_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_ngram_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 element_wise_product ***" enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  element_wise_product_sink</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL element_wise_product_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL element_wise_product_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_element_wise_product_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_element_wise_product_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_element_wise_product_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_element_wise_product_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_element_wise_product_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_element_wise_product_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model element_wise_product_model as element_wise_product_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model element_wise_product_model as element_wise_product_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.element_wise_product;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.element_wise_product;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.element_wise_product(vector double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.element_wise_product(vector double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.element_wise_product values (array[1.0, 2.0, 3.0]),(array[4.0, 5.0, 6.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.element_wise_product values (array[1.0, 2.0, 3.0]),(array[4.0, 5.0, 6.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_element_wise_product_dbsource_01 (vector double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.element_wise_product&apos;);" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_element_wise_product_dbsource_01 (vector double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;${dburl}&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.element_wise_product&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_element_wise_product_sink_01( transformedvector double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;element_wise_product_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;element_wise_product_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_element_wise_product_sink_01(
transformedvector double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;element_wise_product_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;element_wise_product_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_element_wise_product_sink_01 SELECT * from element_wise_product(element_wise_product_model, t_element_wise_product_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_element_wise_product_sink_01 SELECT transformedvector from element_wise_product(element_wise_product_model, streamsql.element_wise_product);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_element_wise_product_sink_01( transformedvector double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;element_wise_product_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;element_wise_product_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_element_wise_product_source_01(
transformedvector double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;element_wise_product_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;element_wise_product_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_element_wise_product_source_01 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_element_wise_product_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic element_wise_product_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="775205902">{&quot;TRANSFORMEDVECTOR&quot;:[0.0,5.0,12.0]}</stringProp>
                    <stringProp name="-2029684118">{&quot;TRANSFORMEDVECTOR&quot;:[0.0,2.0,6.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.element_wise_product;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.element_wise_product;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_element_wise_product_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_element_wise_product_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL element_wise_product_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL element_wise_product_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_element_wise_product_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_element_wise_product_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_element_wise_product_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_element_wise_product_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 pca ***" enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  pca_sink</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL pca_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL pca_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_pca_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_pca_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_pca_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_pca_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_pca_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_pca_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists pca_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists pca_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table pca_data(id double,features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table pca_data(id double,features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into pca_data values" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into pca_data values (0,array[2.0, 0.0, 3.0, 4.0, 5.0]),
  (1,array[2.0, 0.0, 3.0, 4.0, 4.1]),
  (0,array[4.0, 0.0, 0.0, 6.0, 7.0]),
  (0,array[4.0, 0.0, 1.0, 6.0, 7.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model pca_model as pca_transformer(pca_data)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model pca_model as pca_transformer(pca_data);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.pca;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.pca;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.pca(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.pca(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.pca values (array[2.0, 0.0, 3.0, 4.0, 4.1]),(array[4.0, 0.0, 0.0, 6.0, 7.0]),(array[4.0, 0.0, 1.0, 6.0, 7.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.pca values (array[2.0, 0.0, 3.0, 4.0, 4.1]),(array[4.0, 0.0, 0.0, 6.0, 7.0]),(array[4.0, 0.0, 1.0, 6.0, 7.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_pca_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.pca&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_pca_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;${dburl}&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.pca&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_pca_sink_01( pcafeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;pca_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;pca_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_pca_sink_01(
pcafeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;pca_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;pca_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_pca_sink_01 SELECT * from pca(pca_model, t_pca_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_pca_sink_01 SELECT pcafeatures from pca(pca_model, streamsql.pca);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_pca_source_01( pcafeatures double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;pca_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;pca_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_pca_source_01(
pcafeatures double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;pca_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;pca_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_pca_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_pca_source_01
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic pca_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1443369080">{&quot;PCAFEATURES&quot;:[-8.218890855780355,5.251348701527853,1.9680370717372098]}</stringProp>
                    <stringProp name="-1185707792">{&quot;PCAFEATURES&quot;:[-7.657213937895005,5.99300244779436,2.3347368952491214]}</stringProp>
                    <stringProp name="255000703">{&quot;PCAFEATURES&quot;:[-3.1915192672528043,5.309217877947139,2.331611093480392]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL pca_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL pca_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_pca_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_pca_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_pca_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_pca_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_pca_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_pca_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists pca_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists pca_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 polynomial_expansion ***" enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  polynomial_expansion_sink</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL polynomial_expansion_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL polynomial_expansion_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_polynomial_expansion_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_polynomial_expansion_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_polynomial_expansion_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_polynomial_expansion_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_polynomial_expansion_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_polynomial_expansion_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model polynomial_expansion_model as polynomial_expansion_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model polynomial_expansion_model as polynomial_expansion_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.polynomial_expansion;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.polynomial_expansion;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.polynomial_expansion(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.polynomial_expansion(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.polynomial_expansion values (array[2.0,1.0]),(array[0.0,0.0]),(array[3.0,-1.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.polynomial_expansion values (array[2.0,1.0]),(array[0.0,0.0]),(array[3.0,-1.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_polynomial_expansion_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.polynomial_expansion&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_polynomial_expansion_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;${dburl}&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.polynomial_expansion&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_polynomial_expansion_sink_01( polyfeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;polynomial_expansion_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;polynomial_expansion_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_polynomial_expansion_sink_01(
polyfeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;polynomial_expansion_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;polynomial_expansion_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_polynomial_expansion_sink_01 SELECT * from polynomial_expansion(polynomial_expansion_model, t_polynomial_expansion_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_polynomial_expansion_sink_01 SELECT polyfeatures from polynomial_expansion(polynomial_expansion_model, streamsql.polynomial_expansion);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_polynomial_expansion_source_01( polyfeatures double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;polynomial_expansion_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;polynomial_expansion_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_polynomial_expansion_source_01(
polyfeatures double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;polynomial_expansion_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;polynomial_expansion_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_polynomial_expansion_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_polynomial_expansion_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic polynomial_expansion_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="251653047">{&quot;POLYFEATURES&quot;:[0.0,0.0,0.0,0.0,0.0]}</stringProp>
                    <stringProp name="-2091967942">{&quot;POLYFEATURES&quot;:[3.0,9.0,-1.0,-3.0,1.0]}</stringProp>
                    <stringProp name="-2114762047">{&quot;POLYFEATURES&quot;:[2.0,4.0,1.0,2.0,1.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL polynomial_expansion_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL polynomial_expansion_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_polynomial_expansion_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_polynomial_expansion_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_polynomial_expansion_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_polynomial_expansion_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_polynomial_expansion_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_polynomial_expansion_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.polynomial_expansion;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.polynomial_expansion;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 stop_words_remover  ****" enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  stop_words_remover_sink</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL stop_words_remover_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL stop_words_remover_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_stop_words_remover_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_stop_words_remover_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_stop_words_remover_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_stop_words_remover_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_stop_words_remover_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_stop_words_remover_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model stop_words_remover_model as stop_words_remover_transformer(false,array[&apos;i&apos;,&apos;my&apos;,&apos;me&apos;,&apos;myself&apos;,&apos;we&apos;,&apos;ours&apos;,&apos;ourselves&apos;,&apos;our&apos;])" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> create model stop_words_remover_model as stop_words_remover_transformer(false,array[&apos;i&apos;,&apos;my&apos;,&apos;me&apos;,&apos;myself&apos;,&apos;we&apos;,&apos;ours&apos;,&apos;ourselves&apos;,&apos;our&apos;])</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.stop_words_remover;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.stop_words_remover;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.stop_words_remover(words varchar(32) array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.stop_words_remover(words varchar(32) array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.stop_words_remover values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.stop_words_remover values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_stop_words_remover_sink_01( filtered varchar(32) array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;stop_words_remover_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;stop_words_remover_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_stop_words_remover_sink_01(
filtered varchar(32) array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;stop_words_remover_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;stop_words_remover_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_stop_words_remover_sink_01 SELECT * from stop_words_remover(stop_words_remover_model, t_stop_words_remover_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_stop_words_remover_sink_01 SELECT filtered from stop_words_remover(stop_words_remover_model, streamsql.stop_words_remover);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="214966946">{&quot;FILTERED&quot;:[&quot;logistic&quot;,&quot;regression&quot;,&quot;models&quot;,&quot;are&quot;,&quot;neat&quot;]}</stringProp>
                    <stringProp name="534434074">{&quot;FILTERED&quot;:[&quot;wish&quot;,&quot;java&quot;,&quot;could&quot;,&quot;use&quot;,&quot;case&quot;,&quot;classes&quot;]}</stringProp>
                    <stringProp name="1764476908">{&quot;FILTERED&quot;:[&quot;hi&quot;,&quot;heard&quot;,&quot;about&quot;,&quot;spark&quot;]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_stop_words_remover_source_01( filtered varchar(32) array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;stop_words_remover_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;stop_words_remover_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_stop_words_remover_source_01(
filtered varchar(32) array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;stop_words_remover_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;stop_words_remover_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_stop_words_remover_source_01 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_stop_words_remover_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic stop_words_remover_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="251653047">{&quot;POLYFEATURES&quot;:[0.0,0.0,0.0,0.0,0.0]}</stringProp>
                    <stringProp name="-2091967942">{&quot;POLYFEATURES&quot;:[3.0,9.0,-1.0,-3.0,1.0]}</stringProp>
                    <stringProp name="-2114762047">{&quot;POLYFEATURES&quot;:[2.0,4.0,1.0,2.0,1.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL stop_words_remover_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL stop_words_remover_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_stop_words_remover_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_stop_words_remover_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_stop_words_remover_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_stop_words_remover_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.stop_words_remover;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.stop_words_remover;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_stop_words_remover_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_stop_words_remover_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11  vector_indexer ******" enabled="false"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic  vector_indexer_sink</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL vector_indexer_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL vector_indexer_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_vector_indexer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_vector_indexer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vector_indexer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vector_indexer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vector_indexer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vector_indexer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists vector_indexer_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists vector_indexer_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table vector_indexer_data(id double,features double array)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table vector_indexer_data(id double,features double array)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into vector_indexer_data values" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into vector_indexer_data values (0,array[1.2,1.3,3.1]),
  (1,array[2.2,2.3,2.1]),
  (0,array[1.0,1.3,3.1]),
  (0,array[0.2,1.3,3.1]),
  (0,array[1.3,0.3,3.1]),
  (1,array[1.3,1.3,4.1]),
  (1,array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model vector_indexer_model as vector_indexer_transformer(vector_indexer_data);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model vector_indexer_model as vector_indexer_transformer(vector_indexer_data);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.vector_indexer; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.vector_indexer;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.vector_indexer(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.vector_indexer(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.vector_indexer values (array[1.2, 1.3, 3.1]),(array[2.2, 2.3, 2.1]),(array[1.0, 1.3, 3.1]),(array[0.2, 1.3, 3.1]),(array[1.3, 0.3, 3.1]),(array[1.3, 1.3, 4.1]),(array[1.8, 1.3, 0.1]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.vector_indexer values (array[1.2, 1.3, 3.1]),(array[2.2, 2.3, 2.1]),(array[1.0, 1.3, 3.1]),(array[0.2, 1.3, 3.1]),(array[1.3, 0.3, 3.1]),(array[1.3, 1.3, 4.1]),(array[1.8, 1.3, 0.1]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream  t_vector_indexer_sink_01( features double array, indexedfeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;vector_indexer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;vector_indexer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream  t_vector_indexer_sink_01(
features double array,
indexedfeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;vector_indexer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;vector_indexer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_vector_indexer_sink_01 SELECT * from  vector_indexer(vector_indexer_model, t_vector_indexer_dbsource_01); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_vector_indexer_sink_01 SELECT * from  vector_indexer(vector_indexer_model, streamsql.vector_indexer);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream  t_vector_indexer_source_01( features double array, indexedfeatures double array ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;vector_indexer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;vector_indexer_sink&apos;, &apos;format&apos;:&apos;json&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream  t_vector_indexer_source_01(
features double array,
indexedfeatures double array
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;vector_indexer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;vector_indexer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_vector_indexer_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_vector_indexer_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1057042135">{&quot;FEATURES&quot;:[1.3,1.3,4.1],&quot;INDEXEDFEATURES&quot;:[3.0,1.0,3.0]}</stringProp>
                    <stringProp name="1289549289">{&quot;FEATURES&quot;:[2.2,2.3,2.1],&quot;INDEXEDFEATURES&quot;:[5.0,2.0,1.0]}</stringProp>
                    <stringProp name="1641914722">{&quot;FEATURES&quot;:[0.2,1.3,3.1],&quot;INDEXEDFEATURES&quot;:[0.0,1.0,2.0]}</stringProp>
                    <stringProp name="-1939583963">{&quot;FEATURES&quot;:[1.3,0.3,3.1],&quot;INDEXEDFEATURES&quot;:[3.0,0.0,2.0]}</stringProp>
                    <stringProp name="-645631771">{&quot;FEATURES&quot;:[1.2,1.3,3.1],&quot;INDEXEDFEATURES&quot;:[2.0,1.0,2.0]}</stringProp>
                    <stringProp name="545164514">{&quot;FEATURES&quot;:[1.0,1.3,3.1],&quot;INDEXEDFEATURES&quot;:[1.0,1.0,2.0]}</stringProp>
                    <stringProp name="-620794648">{&quot;FEATURES&quot;:[1.8,1.3,0.1],&quot;INDEXEDFEATURES&quot;:[4.0,1.0,0.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 TC-kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic vector_indexer_sink  --timeout-ms 10000  --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL vector_indexer_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL vector_indexer_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vector_indexer_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vector_indexer_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_vector_indexer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_vector_indexer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vector_indexer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vector_indexer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists vector_indexer_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists vector_indexer_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 train_validation_split" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1034 LDBX081-11 kafka topic delete" enabled="true">
                <stringProp name="command">${kafka_dir}/kafka-topics.sh --delete --zookeeper node72:2181/linkoopdb/luyao --topic  train_validation_split_sink</stringProp>
                <stringProp name="hostname">192.168.1.74</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">stream74</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists trainValidationSplit_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists trainValidationSplit_train_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_train_validation_split_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_train_validation_split_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_train_validation_split_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_train_validation_split_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL trainValidationSplit_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL trainValidationSplit_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM TRAIN_VALIDATION_SPLIT_DBSOURCE (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;${dburl}&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.train_validation_split&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01 (id VARCHAR(10), features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.train_validation_split values" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01 values (&apos;ls&apos;, array[0.2, 0.4, 3.0]),
(&apos;zs&apos;, array[4.0, 1.0, 0.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table trainValidationSplit_train_data(label double,features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream trainValidationSplit_train_data(label double,features double array)properties( &apos;connector&apos;:&apos;pallas&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into trainValidationSplit_train_data VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into trainValidationSplit_train_data VALUES
(0,array[1.2,1.3,3.1]),
(1,array[2.2,2.3,2.1]),
(1,array[1.0,1.3,3.1]),
(1,array[0.2,1.3,3.1]),
(0,array[1.3,0.3,3.1]),
(0,array[1.3,1.3,4.1]),
(1,array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model trainValidationSplit_model as train_validation_split(trainValidationSplit_train_data,&apos;GBTClassifier&apos;,&apos;{&quot;maxDepth&quot;:[5,10],&quot;maxBins&quot;:[32,16],&quot;minInfoGain&quot;:[0.0,0.1]}&apos;,&apos;BinaryClassificationEvaluator&apos;,0.75);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model trainValidationSplit_model as train_validation_split(trainValidationSplit_train_data,&apos;GBTClassifier&apos;,&apos;{&quot;maxDepth&quot;:[5,10],&quot;maxBins&quot;:[32,16],&quot;minInfoGain&quot;:[0.0,0.1]}&apos;,&apos;BinaryClassificationEvaluator&apos;,0.75);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_train_validation_split_sink_01( Features double array, Prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;train_validation_split_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;train_validation_split_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_train_validation_split_sink_01(
id varchar(10),
Features double array,
Prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;train_validation_split_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;train_validation_split_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  insert into t_train_validation_split_sink_01 SELECT * from train_validation_split(trainValidationSplit_model, t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_train_validation_split_sink_01 SELECT * from train_validation_predict(trainValidationSplit_model,t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_train_validation_split_source_01( Features double array, Prediction double ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;train_validation_split_sink&apos;, &apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;, &apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;, &apos;group.id&apos;:&apos;train_validation_split_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_train_validation_split_source_01(
id varchar(10),
Features double array,
Prediction double
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;train_validation_split_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;train_validation_split_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from t_train_validation_split_source_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_train_validation_split_source_01

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="626280429">ID	FEATURES	PREDICTION</stringProp>
                    <stringProp name="542181539">ls	ARRAY[0.2E0,0.4E0,3.0E0]	1.0</stringProp>
                    <stringProp name="220044789">zs	ARRAY[4.0E0,1.0E0,0.0E0]	1.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL trainValidationSplit_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL trainValidationSplit_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_train_validation_split_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_train_validation_split_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_train_validation_split_source_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_train_validation_split_source_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists trainValidationSplit_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists trainValidationSplit_train_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table streamsql.train_validation_split if exists;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table streamsql.train_validation_split if exists;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 index_to_string" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL INDEX_TO_STRING_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL INDEX_TO_STRING_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_index_to_string_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_index_to_string_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_index_to_string_dbsink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_index_to_string_dbsink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.index_to_string;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.index_to_string;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.index_to_string_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.index_to_string_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.index_to_string(CATEGORYINDEX double,CATEGORY varchar(32));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.index_to_string_sink(originalCategory  varchar(32))properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.index_to_string(CATEGORYINDEX double,CATEGORY varchar(32));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream streamsql.index_to_string(CATEGORYINDEX double,CATEGORY varchar(32))properties( &apos;connector&apos;:&apos;pallas&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  INSERT INTO streamsql.index_to_string VALUES (2.0,&apos;c&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.index_to_string VALUES (2.0,&apos;c&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL INDEX_TO_STRING_MODEL AS INDEX_TO_STRING_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL INDEX_TO_STRING_MODEL AS INDEX_TO_STRING_TRANSFORMER(array[&apos;b&apos;,&apos;a&apos;,&apos;c&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  insert into t_index_to_string_dbsink_01 SELECT * from  index_to_string(INDEX_TO_STRING_MODEL,t_index_to_string_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> insert into streamsql.index_to_string_sink SELECT originalCategory from  index_to_string(INDEX_TO_STRING_MODEL,streamsql.index_to_string);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  TC-select * from streamsql.index_to_string-01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from streamsql.index_to_string_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="99">c</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL INDEX_TO_STRING_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL INDEX_TO_STRING_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_index_to_string_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_index_to_string_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_index_to_string_dbsink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_index_to_string_dbsink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.index_to_string;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.index_to_string;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.index_to_string_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.index_to_string_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 vectorslicer" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL VECTORSLICER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL VECTORSLICER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_vectorslicer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_vectorslicer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vectorslicer_dbsink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vectorslicer_dbsink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.vectorslicer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists streamsql.vectorslicer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.vectorslicer(features double array)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream streamsql.vectorslicer(features double array)properties( &apos;connector&apos;:&apos;pallas&apos;)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into streamsql.vectorslicer values (array[0.0, 1.0, 0.0, 0.0, 18.0]),(array[0.0, 0.0, 0.0, 0.0, 19.0 ]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into streamsql.vectorslicer values (array[0.0, 1.0, 0.0, 0.0, 18.0]),(array[0.0, 0.0, 0.0, 0.0, 19.0 ]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL VECTORSLICER_MODEL AS VECTORSLICER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL VECTORSLICER_MODEL AS VECTORSLICER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists vectorslicer_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.vectorslicer_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.vectorslicer_sink(features double array,selectFeatures  double array);" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.vectorslicer_sink(features double array,selectFeatures  double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM  t_vectorslicer_dbsink_01 (features double array,selectFeatures  double array) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.vectorslicer_sink&apos;);     " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM  t_vectorslicer_dbsink_01 (features double array,selectFeatures  double array) properties (&apos;connector&apos;:&apos;pallas&apos;);  


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_vectorslicer_dbsink_01 SELECT * from  vectorslicer(VECTORSLICER_MODEL, t_vectorslicer_dbsource_01); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_vectorslicer_dbsink_01 SELECT * from  vectorslicer(VECTORSLICER_MODEL, streamsql.vectorslicer);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from streamsql.vectorslicer_sink_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_vectorslicer_dbsink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1634278384">ARRAY[0.0E0,0.0E0,0.0E0,0.0E0,19.0E0]	ARRAY[0.0E0,0.0E0]</stringProp>
                    <stringProp name="-553133811">ARRAY[0.0E0,1.0E0,0.0E0,0.0E0,18.0E0]	ARRAY[0.0E0,1.0E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL VECTORSLICER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL VECTORSLICER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_vectorslicer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_vectorslicer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vectorslicer_dbsink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vectorslicer_dbsink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.vectorslicer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.vectorslicer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
