<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4db连接池</stringProp>
          </elementProp>
          <elementProp name="node1" elementType="Argument">
            <stringProp name="Argument.name">node1</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.78)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node8</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb" elementType="Argument">
            <stringProp name="Argument.name">udb</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb_password" elementType="Argument">
            <stringProp name="Argument.name">udb_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="umysql" elementType="Argument">
            <stringProp name="Argument.name">umysql</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql用户</stringProp>
          </elementProp>
          <elementProp name="umysql_password" elementType="Argument">
            <stringProp name="Argument.name">umysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql密码</stringProp>
          </elementProp>
          <elementProp name="user" elementType="Argument">
            <stringProp name="Argument.name">user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4用户名</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4密码</stringProp>
          </elementProp>
          <elementProp name="nodenew" elementType="Argument">
            <stringProp name="Argument.name">nodenew</stringProp>
            <stringProp name="Argument.value">node6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4 mysql连接池</stringProp>
          </elementProp>
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.71)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node2</stringProp>
          </elementProp>
          <elementProp name="node4" elementType="Argument">
            <stringProp name="Argument.name">node4</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.73)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${user}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:mysql://node4:3306/jmeter_istreamsql</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${umysql}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">9999999999</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat">000</stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="501 Stream Table join cache type " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="501 left join test" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;);


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_01 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;memory&apos;,&apos;dataType&apos;:&apos;static&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_01 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;memory&apos;,&apos;dataType&apos;:&apos;static&apos; );


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsink_cache_bch_01 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink&apos;,&apos;updateMode&apos;:&apos;retract&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cache_bch_01 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink&apos;,&apos;updateMode&apos;:&apos;retract&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 delete from cachesink；" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cachesink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 insert into t_jdbcsink_cache_bch_01 select * from t_jdbcsource_cache_bch_02 left join t_jdbcsource_cache_bch_01  on t_jdbcsource_cache_bch_01.id = t_jdbcsource_cache_bch_02.id;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cache_bch_01 select * from t_jdbcsource_cache_bch_02 left join t_jdbcsource_cache_bch_01  on t_jdbcsource_cache_bch_01.id = t_jdbcsource_cache_bch_02.id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 TC-left join test-01" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from cachesink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1469865786">1	a	key1	second_key3	1	a	key1	second_key3	2018-12-17 21:11:47.0</stringProp>
                  <stringProp name="1680125371">2	b	key1	second_key3	2	b	key1	second_key3	2018-12-17 21:11:48.0</stringProp>
                  <stringProp name="1890384956">3	c	key1	second_key3	3	c	key1	second_key3	2018-12-17 21:11:49.0</stringProp>
                  <stringProp name="-1336326254">4	d	key	second_key	4	d	key	second_key	2018-12-17 21:11:50.0</stringProp>
                  <stringProp name="-1626100077">5	e	key	second_key	5	e	key	second_key	2018-12-17 21:11:51.0</stringProp>
                  <stringProp name="-1282312972">6	a	key2	second_key4	6	a	key2	second_key4	2018-12-17 21:11:52.0</stringProp>
                  <stringProp name="-1072053387">7	b	key2	second_key4	7	b	key2	second_key4	2018-12-17 21:11:53.0</stringProp>
                  <stringProp name="-861793802">8	c	key2	second_key4	8	c	key2	second_key4	2018-12-17 21:11:54.0</stringProp>
                  <stringProp name="-985048649">9	f	key	second_key	9	f	key	second_key	2018-12-17 21:11:55.0</stringProp>
                  <stringProp name="521318824">10	f	k	s	null	null	null	null	null</stringProp>
                  <stringProp name="-618359783">11	f	f	f	null	null	null	null	null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="501 right join test" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_04;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_04;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501  CREATE STREAM t_jdbcsink_cache_bch_04 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp,) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink4&apos;,&apos;updateMode&apos;:&apos;retract&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cache_bch_04 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp,) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink4&apos;,&apos;updateMode&apos;:&apos;retract&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;);


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501  CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 delete from cachesink4；" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cachesink4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 insert into t_jdbcsink_cache_bch_04 select * from t_jdbcsource_cache_bch_02  right join t_jdbcsource_cache_bch_03  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cache_bch_04 select * from t_jdbcsource_cache_bch_02  right join t_jdbcsource_cache_bch_03  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 TC-right join test-02；" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from cachesink4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1469865786">1	a	key1	second_key3	1	a	key1	second_key3	2018-12-17 21:11:47.0</stringProp>
                  <stringProp name="1680125371">2	b	key1	second_key3	2	b	key1	second_key3	2018-12-17 21:11:48.0</stringProp>
                  <stringProp name="1890384956">3	c	key1	second_key3	3	c	key1	second_key3	2018-12-17 21:11:49.0</stringProp>
                  <stringProp name="-1336326254">4	d	key	second_key	4	d	key	second_key	2018-12-17 21:11:50.0</stringProp>
                  <stringProp name="-1626100077">5	e	key	second_key	5	e	key	second_key	2018-12-17 21:11:51.0</stringProp>
                  <stringProp name="-1282312972">6	a	key2	second_key4	6	a	key2	second_key4	2018-12-17 21:11:52.0</stringProp>
                  <stringProp name="-1072053387">7	b	key2	second_key4	7	b	key2	second_key4	2018-12-17 21:11:53.0</stringProp>
                  <stringProp name="-861793802">8	c	key2	second_key4	8	c	key2	second_key4	2018-12-17 21:11:54.0</stringProp>
                  <stringProp name="-985048649">9	f	key	second_key	9	f	key	second_key	2018-12-17 21:11:55.0</stringProp>
                  <stringProp name="521318824">10	f	k	s	null	null	null	null	null</stringProp>
                  <stringProp name="-618359783">11	f	f	f	null	null	null	null	null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_04;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_04;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="501 inner join test" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_05;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_05;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501  CREATE STREAM t_jdbcsink_cache_bch_05 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp,) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink5&apos;,&apos;updateMode&apos;:&apos;retract&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cache_bch_05 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp,) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink5&apos;,&apos;updateMode&apos;:&apos;retract&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501  CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;);


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 delete from cachesink5；" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cachesink5;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 insert into t_jdbcsink_cache_bch_05 select * from t_jdbcsource_cache_bch_02  inner join t_jdbcsource_cache_bch_03  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cache_bch_05 select * from t_jdbcsource_cache_bch_02  inner join t_jdbcsource_cache_bch_03  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 TC-inner join test-03" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from cachesink5;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1469865786">1	a	key1	second_key3	1	a	key1	second_key3	2018-12-17 21:11:47.0</stringProp>
                  <stringProp name="1680125371">2	b	key1	second_key3	2	b	key1	second_key3	2018-12-17 21:11:48.0</stringProp>
                  <stringProp name="1890384956">3	c	key1	second_key3	3	c	key1	second_key3	2018-12-17 21:11:49.0</stringProp>
                  <stringProp name="-1336326254">4	d	key	second_key	4	d	key	second_key	2018-12-17 21:11:50.0</stringProp>
                  <stringProp name="-1626100077">5	e	key	second_key	5	e	key	second_key	2018-12-17 21:11:51.0</stringProp>
                  <stringProp name="-1282312972">6	a	key2	second_key4	6	a	key2	second_key4	2018-12-17 21:11:52.0</stringProp>
                  <stringProp name="-1072053387">7	b	key2	second_key4	7	b	key2	second_key4	2018-12-17 21:11:53.0</stringProp>
                  <stringProp name="-861793802">8	c	key2	second_key4	8	c	key2	second_key4	2018-12-17 21:11:54.0</stringProp>
                  <stringProp name="-985048649">9	f	key	second_key	9	f	key	second_key	2018-12-17 21:11:55.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_05;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_05;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="501 a left join b test" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;);


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsink_cache_bch_02 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink2&apos;,&apos;updateMode&apos;:&apos;retract&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cache_bch_02 (id int, name string, key1 string, key2 string, id0 int, name0 string, key10 string, key20 string, time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink2&apos;,&apos;updateMode&apos;:&apos;retract&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 delete from cachesink2；" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cachesink2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 insert into t_jdbcsink_cache_bch_02 select * from t_jdbcsource_cache_bch_02 left join t_jdbcsource_cache_bch_03  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cache_bch_02 select * from t_jdbcsource_cache_bch_02 left join t_jdbcsource_cache_bch_03  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 TC- a left join b-04" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from cachesink2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1469865786">1	a	key1	second_key3	1	a	key1	second_key3	2018-12-17 21:11:47.0</stringProp>
                  <stringProp name="1680125371">2	b	key1	second_key3	2	b	key1	second_key3	2018-12-17 21:11:48.0</stringProp>
                  <stringProp name="1890384956">3	c	key1	second_key3	3	c	key1	second_key3	2018-12-17 21:11:49.0</stringProp>
                  <stringProp name="-1336326254">4	d	key	second_key	4	d	key	second_key	2018-12-17 21:11:50.0</stringProp>
                  <stringProp name="-1626100077">5	e	key	second_key	5	e	key	second_key	2018-12-17 21:11:51.0</stringProp>
                  <stringProp name="-1282312972">6	a	key2	second_key4	6	a	key2	second_key4	2018-12-17 21:11:52.0</stringProp>
                  <stringProp name="-1072053387">7	b	key2	second_key4	7	b	key2	second_key4	2018-12-17 21:11:53.0</stringProp>
                  <stringProp name="-861793802">8	c	key2	second_key4	8	c	key2	second_key4	2018-12-17 21:11:54.0</stringProp>
                  <stringProp name="-985048649">9	f	key	second_key	9	f	key	second_key	2018-12-17 21:11:55.0</stringProp>
                  <stringProp name="521318824">10	f	k	s	null	null	null	null	null</stringProp>
                  <stringProp name="-618359783">11	f	f	f	null	null	null	null	null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="501 b left join a test" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_02 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep11&apos;);


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501  CREATE STREAM t_jdbcsink_cache_bch_03 (id int, name string, key1 string, key2 string, time1 timestamp, id0 int, name0 string, key10 string, key20 string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink3&apos;,&apos;updateMode&apos;:&apos;retract&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cache_bch_03 (id int, name string, key1 string, key2 string, time1 timestamp, id0 int, name0 string, key10 string, key20 string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cachesink3&apos;,&apos;updateMode&apos;:&apos;retract&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cache_bch_03 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;cep12&apos;,&apos;cacheType&apos;:&apos;file&apos;,&apos;dataType&apos;:&apos;static&apos; );


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 delete from cachesink3；" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cachesink3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 insert into t_jdbcsink_cache_bch_03 select * from t_jdbcsource_cache_bch_03  left join t_jdbcsource_cache_bch_02  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cache_bch_03 select * from t_jdbcsource_cache_bch_03  left join t_jdbcsource_cache_bch_02  on t_jdbcsource_cache_bch_03.id = t_jdbcsource_cache_bch_02.id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 TC- b left join a-05" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from cachesink3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-785905736">1	a	key1	second_key3	2018-12-17 21:11:47.0	1	a	key1	second_key3</stringProp>
                  <stringProp name="660763607">2	b	key1	second_key3	2018-12-17 21:11:48.0	2	b	key1	second_key3</stringProp>
                  <stringProp name="2107432950">3	c	key1	second_key3	2018-12-17 21:11:49.0	3	c	key1	second_key3</stringProp>
                  <stringProp name="-1655605088">4	d	key	second_key	2018-12-17 21:11:50.0	4	d	key	second_key</stringProp>
                  <stringProp name="4507903">5	e	key	second_key	2018-12-17 21:11:51.0	5	e	key	second_key</stringProp>
                  <stringProp name="1676481086">6	a	key2	second_key4	2018-12-17 21:11:52.0	6	a	key2	second_key4</stringProp>
                  <stringProp name="-1171816867">7	b	key2	second_key4	2018-12-17 21:11:53.0	7	b	key2	second_key4</stringProp>
                  <stringProp name="274852476">8	c	key2	second_key4	2018-12-17 21:11:54.0	8	c	key2	second_key4</stringProp>
                  <stringProp name="1990219227">9	f	key	second_key	2018-12-17 21:11:55.0	9	f	key	second_key</stringProp>
                  <stringProp name="-475478198">null	null	null	null	null	10	f	k	s</stringProp>
                  <stringProp name="412020665">null	null	null	null	null	11	f	f	f</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsource_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="501 drop stream if exists t_jdbcsink_cache_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cache_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 CEP SQL支持 集成版" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 PATTERN (A B* C)  AFTER MATCH SKIP PAST LAST ROW" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_01 " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_01
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_01 (symbol varchar(20), tax int,price int,rowtime timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;cep1003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;rowtime.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_01 (symbol varchar(20), tax int,price int,rowtime timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;cep1003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;rowtime.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_01 (symbol varchar(20), lastPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_01 (symbol varchar(20), lastPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_01 set properties(&apos;group.id&apos;:&apos;1${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_01 set properties(&apos;group.id&apos;:&apos;1${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_01 SELECT symbol,lastPrice FROM t_kafkasource_cep_bch_01     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             C.price AS  lastPrice &#x9;&#x9;ONE ROW PER MATCH         AFTER MATCH SKIP PAST LAST ROW         PATTERN (A B* C)         DEFINE             A AS price &gt; 10,             B AS price &lt; 15,             C AS price &gt; 12     );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_01
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch_01
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">50000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1690717227">XYZ	16</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch001 " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch001
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch001;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 PATTERN (A+ C) AFTER MATCH SKIP PAST LAST ROW" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_02 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep1&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_02 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep1&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;2${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;2${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-delete from cep1;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_02 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP PAST LAST ROW         PATTERN (A+ C)         DEFINE             A AS A.price&gt;=10     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_02
SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10
    );



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep1-02;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="477946370">XYZ	10	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="755162692">insert into t_jdbcsink_cep_bch002
SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 AFTER MATCH SKIP TO NEXT ROW" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_03; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_03 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep2&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_03 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep2&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;3${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;3${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-delete from cep2;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_03 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A+ C)         DEFINE             A AS A.price&gt;=10     );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_03
SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10
    );



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep2-03;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="477946370">XYZ	10	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="818762073">insert into t_jdbcsink_cep_bch003
SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_03; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 DEFINE  A AS A.price&gt;=10,  C AS C.price&lt;9" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_jdbcsink_cep_bch_05 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep4&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_05 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep4&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;5${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;5${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-delete from cep4;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_05 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A+ C)         DEFINE             A AS A.price&gt;=10,             C AS C.price&lt;9     );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_05
SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&lt;9
    );



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep4-04;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="477946370">XYZ	10	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-211386669">insert into t_jdbcsink_cep_bch005
SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&lt;9
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 DEFINE  A AS A.price&gt;=10, C AS C.price&gt;4" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_06; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_06;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_06 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep5&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_06 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep5&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;6${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;6${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-delete from cep5;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep5;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_06 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A+ C)         DEFINE             A AS A.price&gt;=10,             C AS C.price&gt;4     );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_06
SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep5-05;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep5;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="477946370">XYZ	10	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-242837125">insert into t_jdbcsink_cep_bch006
SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_06; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_06;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 t_kafkasource_cep_bch003" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_03; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_07; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_07;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_03 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep3&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00001&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_03 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep3&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00001&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_07 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep6&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_07 (symbol varchar(20),sumPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep6&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_03 set properties(&apos;group.id&apos;:&apos;71${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_03 set properties(&apos;group.id&apos;:&apos;71${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep6;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep6;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_07 SELECT * FROM t_kafkasource_cep_bch_03     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A+ C)         DEFINE             A AS A.price&gt;=10,             C AS C.price&gt;4     );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_07
SELECT *
FROM t_kafkasource_cep_bch_03
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );







</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep6-06;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep6;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="477946370">XYZ	10	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="799736987">insert into t_jdbcsink_cep_bch007
SELECT *
FROM t_kafkasource_cep_bch003
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_03; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_07; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_07;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 ORDER BY proctime no PARTITION BY" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_04; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_04;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_08;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_08;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_04 (id int,name string) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep4_new&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00001&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;proctime&apos;:&apos;proctime&apos;,  &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_04 (id int,name string)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep4_new&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00001&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;proctime&apos;:&apos;proctime&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_08 (aid int,bid int,cid int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep7&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_08 (aid int,bid int,cid int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep7&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_04 set properties(&apos;group.id&apos;:&apos;8${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_04 set properties(&apos;group.id&apos;:&apos;8${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600delete from cep7;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep7;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_08 SELECT T.aid, T.bid, T.cid FROM t_kafkasource_cep_bch_04 MATCH_RECOGNIZE (   ORDER BY proctime   MEASURES     A.id AS aid,     B.id AS bid,     C.id AS cid   ONE ROW PER MATCH   AFTER MATCH SKIP TO NEXT ROW   PATTERN (A B C)   DEFINE      A AS name = &apos;a&apos;,     B AS name = &apos;b&apos;,     C AS name = &apos;c&apos; ) AS T; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_08
SELECT T.aid, T.bid, T.cid
FROM t_kafkasource_cep_bch_04
MATCH_RECOGNIZE (
  ORDER BY proctime
  MEASURES
    A.id AS aid,
    B.id AS bid,
    C.id AS cid
  ONE ROW PER MATCH
  AFTER MATCH SKIP TO NEXT ROW
  PATTERN (A B C)
  DEFINE 
    A AS name = &apos;a&apos;,
    B AS name = &apos;b&apos;,
    C AS name = &apos;c&apos;
) AS T;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">  ORDER BY proctime</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep7-07;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep7;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="50191443">6	7	8</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-632084850">insert into t_jdbcsink_cep_bch008
SELECT T.aid, T.bid, T.cid
FROM t_kafkasource_cep_bch004
MATCH_RECOGNIZE (
  ORDER BY proctime
  MEASURES
    A.id AS aid,
    B.id AS bid,
    C.id AS cid
  ONE ROW PER MATCH
  AFTER MATCH SKIP TO NEXT ROW
  PATTERN (A B C)
  DEFINE 
    A AS name = &apos;a&apos;,
    B AS name = &apos;b&apos;,
    C AS name = &apos;c&apos;
) AS T;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_04; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_04;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_08;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_08;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 SELECT T.aid, T.bid, T.cid,T.startTime,T.endTime" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_09;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_09;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_05 (id int,name string,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep5&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00001&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_05 (id int,name varchar(20),time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep5_new&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00001&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_09 (aid int,bid int,cid int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep8&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_09 (aid int,bid int,cid int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep8&apos;);







</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_05 set properties(&apos;group.id&apos;:&apos;9${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_05 set properties(&apos;group.id&apos;:&apos;9${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep8;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep8;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_09 SELECT T.aid, T.bid, T.cid,T.startTime,T.endTime FROM t_kafkasource_cep_bch_05 MATCH_RECOGNIZE (   ORDER BY myrowtime   MEASURES     A.id AS aid,     B.id AS bid,     C.id AS cid,     FIRST(myrowtime) as startTime,     LAST(myrowtime) as endTime   ONE ROW PER MATCH   AFTER MATCH SKIP TO NEXT ROW   PATTERN (A B C)   DEFINE      A AS name = &apos;a&apos;,     B AS name = &apos;b&apos;,     C AS name = &apos;c&apos; ) AS T;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_09
SELECT T.aid, T.bid, T.cid,T.startTime,T.endTime
FROM t_kafkasource_cep_bch_05
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    A.id AS aid,
    B.id AS bid,
    C.id AS cid,
    FIRST(myrowtime) as startTime,
    LAST(myrowtime) as endTime
  ONE ROW PER MATCH
  AFTER MATCH SKIP TO NEXT ROW
  PATTERN (A B C)
  DEFINE 
    A AS name = &apos;a&apos;,
    B AS name = &apos;b&apos;,
    C AS name = &apos;c&apos;
) AS T;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep8-08;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep8;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1411009165">6	7	8	2018-09-17 10:00:06.0	2018-09-17 10:00:08.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-DB SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="669731520">insert into t_jdbcsink_cep_bch009
SELECT T.aid, T.bid, T.cid,T.startTime,T.endTime
FROM t_kafkasource_cep_bch005
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    A.id AS aid,
    B.id AS bid,
    C.id AS cid,
    FIRST(myrowtime) as startTime,
    LAST(myrowtime) as endTime
  ONE ROW PER MATCH
  AFTER MATCH SKIP TO NEXT ROW
  PATTERN (A B C)
  DEFINE 
    A AS name = &apos;a&apos;,
    B AS name = &apos;b&apos;,
    C AS name = &apos;c&apos;
) AS T;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_09;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_09;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 PATTERN (A+ C)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_10; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_10;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;10${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;10${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_10 (symbol varchar(20),SUMPRICE int, SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep10_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_10 (symbol varchar(20),SUMPRICE int, SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep10_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep10_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep10_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_10 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A+ C)         DEFINE             A AS A.price&gt;=10,             C AS C.price&gt;4     );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_10 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep10_sink-09;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep10_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="289409422">XYZ	10	5	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="829005859">insert into t_jdbcsink_cep_bch010 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_10; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_10;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 PATTERN (A C)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_11;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_11;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;11${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;11${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_11 (symbol varchar(20),SUMPRICE int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep11_sink&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_11 (symbol varchar(20),SUMPRICE int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep11_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-delete from cep11_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep11_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_11 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A C)         DEFINE             A AS A.price&gt;=10,             C AS C.price&gt;4     ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_11 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep11_sink-10;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep11_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="477946370">XYZ	10	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-90863914">insert into t_jdbcsink_cep_bch011 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_11;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_11;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  PATTERN (A* C)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_12;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_12;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_12 (symbol varchar(20),SUMPRICE int,cPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep12_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_12 (symbol varchar(20),SUMPRICE int,cPrice int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep12_sink&apos;);






 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-delete from cep12_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep12_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_12 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             c.price AS cPrice,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A* C)         DEFINE             A AS A.price&gt;=10,             C AS C.price&gt;4     );       " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_12 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            c.price AS cPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A* C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );

    
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep12_sink-11;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep12_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="450250419">XYZ	null	7	2018-09-17 10:00:01.0	2018-09-17 10:00:01.0</stringProp>
                  <stringProp name="-733471625">XYZ	null	9	2018-09-17 10:00:02.0	2018-09-17 10:00:02.0</stringProp>
                  <stringProp name="289409422">XYZ	10	5	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                  <stringProp name="1915073527">XYZ	null	5	2018-09-17 10:00:04.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2006603253">insert into t_jdbcsink_cep_bch012 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            c.price AS cPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A* C)
        DEFINE
            A AS A.price&gt;=10,
            C AS C.price&gt;4
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_12;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_12;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  PATTERN (A{3} C)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_13;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_13;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;13${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;13${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_13 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep13_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_13 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep13_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-delete from cep13_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep13_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 INSERT INTO t_jdbcsink_cep_bch_13 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A{3} C)         DEFINE             A AS A.price&gt;=5,             C AS C.price&gt;4     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">INSERT INTO t_jdbcsink_cep_bch_13 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A{3} C)
        DEFINE
            A AS A.price&gt;=5,
            C AS C.price&gt;4
    );


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep13_sink-12；" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep13_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="148860812">XYZ	10	5	2018-09-17 10:00:01.0	2018-09-17 10:00:04.0</stringProp>
                  <stringProp name="-1097983555">XYZ	5	17	2018-09-17 10:00:02.0	2018-09-17 10:00:05.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-608130366">INSERT INTO t_jdbcsink_cep_bch013 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A{3} C)
        DEFINE
            A AS A.price&gt;=5,
            C AS C.price&gt;4
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_13;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_13;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  PATTERN (A{2,3} C)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_14;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_14;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;14${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;14${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_14 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep14_sink&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_14 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep14_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep14_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep14_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 INSERT INTO t_jdbcsink_cep_bch_14 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A{2,3} C)         DEFINE             A AS A.price&lt;=9,             C AS C.price&gt;=10     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> INSERT INTO t_jdbcsink_cep_bch_14 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A{2,3} C)
        DEFINE
            A AS A.price&lt;=9,
            C AS C.price&gt;=10
    );

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep14_sink-13;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep14_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-417137873">XYZ	9	10	2018-09-17 10:00:01.0	2018-09-17 10:00:03.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1396378429">INSERT INTO t_jdbcsink_cep_bch014 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A{2,3} C)
        DEFINE
            A AS A.price&lt;=9,
            C AS C.price&gt;=10
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_14;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_14;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  MEASURES  A.price AS sumPrice, C.price AS sumPrice1,   FIRST(myrowtime) as startTime, LAST(myrowtime) as endTime" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_16;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_16;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_16 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep16_sink&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_16 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep16_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep16_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep16_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 INSERT INTO t_jdbcsink_cep_bch_16 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A{2,} C)         DEFINE             A AS A.price&gt;6,             C AS C.price&lt;=5     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">INSERT INTO t_jdbcsink_cep_bch_16 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A{2,} C)
        DEFINE
            A AS A.price&gt;6,
            C AS C.price&lt;=5
    );


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep16_sink-13;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep16_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="148860812">XYZ	10	5	2018-09-17 10:00:01.0	2018-09-17 10:00:04.0</stringProp>
                  <stringProp name="-1928348531">XYZ	10	5	2018-09-17 10:00:02.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="193809140">INSERT INTO t_jdbcsink_cep_bch016 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A{2,} C)
        DEFINE
            A AS A.price&gt;6,
            C AS C.price&lt;=5
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_16;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_16;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  PATTERN (A C+?)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_18;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_18;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;16${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;16${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_18 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep18_sink&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_18 (symbol varchar(20),SUMPRICE int,SUMPRICE1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep18_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep18_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep18_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_18 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A C+?)         DEFINE             A AS A.price&gt;6,             C AS C.price&lt;=5     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_18 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A C+?)
        DEFINE
            A AS A.price&gt;6,
            C AS C.price&lt;=5
    );


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep18_sink-14;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep18_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="289409422">XYZ	10	5	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1797568938">insert into t_jdbcsink_cep_bch018 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A C+?)
        DEFINE
            A AS A.price&gt;6,
            C AS C.price&lt;=5
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_18;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_18;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  ORDER BY proctime  PARTITION BY key1, key2" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_19;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_19;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch_01 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,  &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;proctime&apos;:&apos;proctime&apos;, &apos;tableName&apos;: &apos;cep11&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch_01 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,  &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;proctime&apos;:&apos;proctime&apos;, &apos;tableName&apos;: &apos;cep11&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_19 (KEY1 String, KEY2 String, AID int , AKEY1 String, BID Integer, CID Integer, CKEY2 String) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep19_sink&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_19 (KEY1 String, KEY2 String, AID int , AKEY1 String, BID Integer, CID Integer, CKEY2 String) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep19_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep19_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep19_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_19 SELECT *          FROM t_jdbcsource_cep_bch_01          MATCH_RECOGNIZE (            PARTITION BY key1, key2            ORDER BY proctime            MEASURES             A.id AS aid,              A.key1 AS akey1,              LAST(B.id) AS bid,              C.id AS cid,              C.key2 AS ckey2            PATTERN (A B C)            DEFINE              A AS name = &apos;a&apos; AND key1 LIKE &apos;%key%&apos; AND id &gt; 0,              B AS name = &apos;b&apos; AND LAST(A.name, 2) IS NULL,              C AS name = &apos;c&apos; AND LAST(A.name) = &apos;a&apos;          ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_19 SELECT *
         FROM t_jdbcsource_cep_bch_01
         MATCH_RECOGNIZE (
           PARTITION BY key1, key2
           ORDER BY proctime
           MEASURES
            A.id AS aid,
             A.key1 AS akey1,
             LAST(B.id) AS bid,
             C.id AS cid,
             C.key2 AS ckey2
           PATTERN (A B C)
           DEFINE
             A AS name = &apos;a&apos; AND key1 LIKE &apos;%key%&apos; AND id &gt; 0,
             B AS name = &apos;b&apos; AND LAST(A.name, 2) IS NULL,
             C AS name = &apos;c&apos; AND LAST(A.name) = &apos;a&apos;
         ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments"> ORDER BY proctime</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep19_sink-15;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep19_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-239327468">key1	second_key3	1	key1	2	3	second_key3</stringProp>
                  <stringProp name="-1122261703">key2	second_key4	6	key2	7	8	second_key4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_19;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_19;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  PARTITION BY key1, key2" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsource_cep_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_20;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_20;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch_02 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep12&apos;);      " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch_02 (id Int, name String, key1 String, key2 String,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep12&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_20 (KEY1 String, KEY2 String, AID int , AKEY1 String, BID Integer, CID Integer, CKEY2 String) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep20_sink&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_20 (KEY1 String, KEY2 String, AID int , AKEY1 String, BID Integer, CID Integer, CKEY2 String) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep20_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep20_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep20_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_20 SELECT *          FROM t_jdbcsource_cep_bch_02          MATCH_RECOGNIZE (            PARTITION BY key1, key2            ORDER BY myrowtime            MEASURES             A.id AS aid,              A.key1 AS akey1,              LAST(B.id) AS bid,              C.id AS cid,              C.key2 AS ckey2            PATTERN (A B C)            DEFINE              A AS name = &apos;a&apos; AND key1 LIKE &apos;%key%&apos; AND id &gt; 0,              B AS name = &apos;b&apos; AND LAST(A.name, 2) IS NULL,              C AS name = &apos;c&apos; AND LAST(A.name) = &apos;a&apos;          ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_20 SELECT *
         FROM t_jdbcsource_cep_bch_02
         MATCH_RECOGNIZE (
           PARTITION BY key1, key2
           ORDER BY myrowtime
           MEASURES
            A.id AS aid,
             A.key1 AS akey1,
             LAST(B.id) AS bid,
             C.id AS cid,
             C.key2 AS ckey2
           PATTERN (A B C)
           DEFINE
             A AS name = &apos;a&apos; AND key1 LIKE &apos;%key%&apos; AND id &gt; 0,
             B AS name = &apos;b&apos; AND LAST(A.name, 2) IS NULL,
             C AS name = &apos;c&apos; AND LAST(A.name) = &apos;a&apos;
         ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments"> PARTITION BY</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep20_sink-16;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep20_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-239327468">key1	second_key3	1	key1	2	3	second_key3</stringProp>
                  <stringProp name="-1122261703">key2	second_key4	6	key2	7	8	second_key4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsource_cep_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-drop stream if exists t_jdbcsink_cep_bch_20;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_20;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 DEFINE  DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL," enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_21;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_21;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_21 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep21_sink&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_21 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep21_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep21_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep21_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_21 SELECT * FROM t_jdbcsource_cep_bch_03 MATCH_RECOGNIZE (   ORDER BY myrowtime   MEASURES     FIRST(DOWN.price) as first,     LAST(DOWN.price) as last,     FIRST(DOWN.price, 5) as nullPrice,     UP.price AS price   ONE ROW PER MATCH   AFTER MATCH SKIP PAST LAST ROW   PATTERN (DOWN{2,} UP)   DEFINE     DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,     UP AS price &gt; LAST(DOWN.price)    ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_21 SELECT *
FROM t_jdbcsource_cep_bch_03
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  ONE ROW PER MATCH
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep21_sink-17;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep21_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="352277178">19	13	null	20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_21;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_21;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  PATTERN (DOWN{2,} UP)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_22;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_22;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_22 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep22_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_22 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep22_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep22_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep22_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_22 SELECT * FROM t_jdbcsource_cep_bch_03 MATCH_RECOGNIZE (   ORDER BY myrowtime   MEASURES     FIRST(DOWN.price) as first,     LAST(DOWN.price) as last,     FIRST(DOWN.price, 5) as nullPrice,     UP.price AS price   AFTER MATCH SKIP PAST LAST ROW   PATTERN (DOWN{2,} UP)   DEFINE     DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,     UP AS price &gt; LAST(DOWN.price)    ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_22 SELECT *
FROM t_jdbcsource_cep_bch_03
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">ONE ROW PER MATCH</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep22_sink-18;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep22_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="352277178">19	13	null	20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_22;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_22;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  no  PARTITION BY " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_24;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_24;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch_05 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep15&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch_05 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep15&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_24 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep24_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_24 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep24_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep24_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep24_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_24 SELECT * FROM t_jdbcsource_cep_bch_05 MATCH_RECOGNIZE (   ORDER BY myrowtime   MEASURES     FIRST(DOWN.price) as first,     LAST(DOWN.price) as last,     FIRST(DOWN.price, 5) as nullPrice,     UP.price AS price   AFTER MATCH SKIP PAST LAST ROW   PATTERN (DOWN{2,} UP)   DEFINE     DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,     UP AS price &gt; LAST(DOWN.price)    ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_24 SELECT *
FROM t_jdbcsource_cep_bch_05
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">myrowtime不是严格升序</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">25000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep24_sink-19;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep24_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="94111718">17	13	null	19</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">25000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_24;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_24;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600 ORDER BY  myrowtime,tax" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_26; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_26;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_26 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep26_sink&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_26 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep26_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep26_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep26_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_26 SELECT * FROM t_jdbcsource_cep_bch_03 MATCH_RECOGNIZE (   ORDER BY  myrowtime,tax   MEASURES     FIRST(DOWN.price) as first,     LAST(DOWN.price) as last,     FIRST(DOWN.price, 5) as nullPrice,     UP.price AS price   AFTER MATCH SKIP PAST LAST ROW   PATTERN (DOWN{2,} UP)   DEFINE     DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,     UP AS price &gt; LAST(DOWN.price)    ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_26 SELECT *
FROM t_jdbcsource_cep_bch_03
MATCH_RECOGNIZE (
  ORDER BY  myrowtime,tax
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">ORDER BY 多个字段,时间第一个</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep26_sink-20;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep26_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="352277178">19	13	null	20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsource_cep_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_26; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_26;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="895 ISQL600  PATTERN (A? C)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_27; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_27;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp) PROPERTIES(      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;cep2&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;00003&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_cep_bch_02 (symbol varchar(20), tax int,price int,time1 timestamp)
PROPERTIES(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;cep2&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;00003&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );





 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;17${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_cep_bch_02 set properties(&apos;group.id&apos;:&apos;17${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600  CREATE STREAM t_jdbcsink_cep_bch_27 (symbol string, sumPrice int,sumPrice1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep27_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_27 (symbol string, sumPrice int,sumPrice1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep27_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 delete from cep27_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep27_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 insert into t_jdbcsink_cep_bch_27 SELECT * FROM t_kafkasource_cep_bch_02     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A? C)         DEFINE             A AS A.price&gt;=7,             C AS C.price&lt;=5     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_27 SELECT *
FROM t_kafkasource_cep_bch_02
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A? C)
        DEFINE
            A AS A.price&gt;=7,
            C AS C.price&lt;=5
    );


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 TC-select *  from cep27_sink-21;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep27_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="289409422">XYZ	10	5	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0</stringProp>
                  <stringProp name="1915073527">XYZ	null	5	2018-09-17 10:00:04.0	2018-09-17 10:00:04.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600-CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600- SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1362677931">insert into t_jdbcsink_cep_bch027 SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A? C)
        DEFINE
            A AS A.price&gt;=7,
            C AS C.price&lt;=5
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_kafkasource_cep_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_cep_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="895 ISQL600 drop stream if exists t_jdbcsink_cep_bch_27; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_27;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 兼容istream语法易用性" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show stream properties" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_source_kafka_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_source_kafka_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_source_jdbc_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_source_jdbc_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_source_files_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_source_files_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 create stream t_source_kafka_01(  name string,   id int,   time1 timestamp )    PROPERTIES    (     &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,     &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;watermark&apos;,     &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    &apos;group.id&apos;: &apos;121001&apos;,     &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,     &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos;,  &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;  );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_source_kafka_01(
 name string, 
 id int, 
 time1 timestamp
)    PROPERTIES    (   
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,   
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;watermark&apos;,   
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,  
 &apos;group.id&apos;: &apos;121001&apos;,   
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,   
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos;,
 &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
 );</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 create stream t_source_jdbc_02( id int, name string, time1 timestamp ) properties(      &apos;type&apos;: &apos;source&apos;,  &#x9;&apos;connector&apos;: &apos;jdbc&apos;,  &#x9;&apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &#x9;&apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,  &#x9;&apos;username&apos;: &apos;test&apos;, &#x9;&apos;password&apos;: &apos;123456&apos;,  &#x9;&apos;tableName&apos;: &apos;jdbc_event&apos;, &#x9;&apos;increaseColumn&apos;:&apos;id&apos;, &#x9;&apos;rowtime&apos;: &apos;time1.myrowtimea&apos;, &#x9;&apos;watermarksDelay&apos;:&apos;60000&apos; &#x9;) " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_source_jdbc_02(
id int,
name string,
time1 timestamp
) properties(
     &apos;type&apos;: &apos;source&apos;, 
	&apos;connector&apos;: &apos;jdbc&apos;, 
	&apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
	&apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, 
	&apos;username&apos;: &apos;test&apos;,
	&apos;password&apos;: &apos;123456&apos;, 
	&apos;tableName&apos;: &apos;jdbc_event&apos;,
	&apos;increaseColumn&apos;:&apos;id&apos;,
	&apos;rowtime&apos;: &apos;time1.myrowtimea&apos;,
	&apos;watermarksDelay&apos;:&apos;60000&apos;
	)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 create stream t_source_files_03( cd_demo_sk int,  cd_gender string,  cd_marital_status string,  cd_education_status string,  cd_purchase_estimate int,  cd_credit_rating string,  cd_dep_count int,  cd_dep_employed_count int,  cd_dep_college_count int ) properties(  &apos;type&apos;:&apos;source&apos;,  &apos;connector&apos;:&apos;filesystem&apos;,  &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv&apos;,  &apos;format&apos;:&apos;csv&apos;,   &apos;separator&apos;:&apos;|&apos;,   &apos;quoteChar&apos;:&apos;\&quot;&apos;,  &apos;escapeChar&apos;:&apos;\\&apos;,  &apos;commentPrefix&apos;:&apos;#&apos;,  &apos;dataType&apos;:&apos;static&apos;   ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_source_files_03(
cd_demo_sk int, 
cd_gender string, 
cd_marital_status string, 
cd_education_status string, 
cd_purchase_estimate int, 
cd_credit_rating string, 
cd_dep_count int, 
cd_dep_employed_count int, 
cd_dep_college_count int
) properties( 
&apos;type&apos;:&apos;source&apos;, 
&apos;connector&apos;:&apos;filesystem&apos;, 
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;, 
 &apos;separator&apos;:&apos;|&apos;, 
 &apos;quoteChar&apos;:&apos;\&quot;&apos;,
 &apos;escapeChar&apos;:&apos;\\&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;dataType&apos;:&apos;static&apos; 
 );
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show stream properties-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show stream properties t_source_kafka_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-770787687">connector	kafka
zookeeper.connect	node1:2181 node2:2181 node3:2181/istream/node6/kafka
rowtime	time1.myrowtime1
group.id	121001
format	csv
topic	watermark
bootstrap.servers	node6:9096
type	source
version	0.10
separator	,
rowtime.watermarks.type	periodic-ascending</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show stream properties-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show stream properties t_source_jdbc_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1503001690">password	123456
connector	jdbc
driver	com.mysql.jdbc.Driver
rowtime	time1.myrowtimea
watermarksDelay	60000
type	source
dbUrl	jdbc:mysql://node4:3306/jmeter_istreamsql
username	test
tableName	jdbc_event
increaseColumn	id</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show stream properties-03" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show stream properties t_source_files_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1207157752">path	hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv
quoteChar	\&quot;
escapeChar	\\
connector	filesystem
commentPrefix	#
dataType	static
format	csv
type	source
separator	|</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_source_kafka_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_source_kafka_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_source_jdbc_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_source_jdbc_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_source_files_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_source_files_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc formatted" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc formatted stream" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_kafkasource_formatted_bch_04;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kafkasource_formatted_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_formatted_bch_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_formatted_bch_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_formatted_bch_03;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_formatted_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_kafkasource_formatted_bch_05;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kafkasource_formatted_bch_05;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM t_kafkasource_formatted_bch_04 (id INT,users string) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;upsert1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0001&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_kafkasource_formatted_bch_04
(id INT,users string)
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;upsert1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0001&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos; );
 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM t_jdbcsource_formatted_bch_02 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_formatted_bch_02 (id integer,name string,primary key(id, name)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);


 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 create stream t_jdbcsource_formatted_bch_03( cd_demo_sk int,  cd_gender string,  cd_marital_status string,  cd_education_status string,  cd_purchase_estimate int,  cd_credit_rating string,  cd_dep_count int,  cd_dep_employed_count int,  cd_dep_college_count int ) properties(  &apos;type&apos;:&apos;source&apos;,  &apos;connector&apos;:&apos;filesystem&apos;,  &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv&apos;,  &apos;format&apos;:&apos;csv&apos;,   &apos;separator&apos;:&apos;|&apos;,   &apos;quoteChar&apos;:&apos;\&quot;&apos;,  &apos;escapeChar&apos;:&apos;\\&apos;,  &apos;commentPrefix&apos;:&apos;#&apos;,  &apos;dataType&apos;:&apos;static&apos;   ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_jdbcsource_formatted_bch_03(
cd_demo_sk int, 
cd_gender string, 
cd_marital_status string, 
cd_education_status string, 
cd_purchase_estimate int, 
cd_credit_rating string, 
cd_dep_count int, 
cd_dep_employed_count int, 
cd_dep_college_count int
) properties( 
&apos;type&apos;:&apos;source&apos;, 
&apos;connector&apos;:&apos;filesystem&apos;, 
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;, 
 &apos;separator&apos;:&apos;|&apos;, 
 &apos;quoteChar&apos;:&apos;\&quot;&apos;,
 &apos;escapeChar&apos;:&apos;\\&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;dataType&apos;:&apos;static&apos; 
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM t_kafkasource_formatted_bch_05 (time1 timestamp,id INT,users string) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;winno1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0222&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_kafkasource_formatted_bch_05
(time1 timestamp,id INT,users string)
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;winno1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0222&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc formatted-01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">DESC FORMATTED t_kafkasource_formatted_bch_05;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1584728095">FIELD_NAME	FIELD_TYPE
TIME1	TIMESTAMP
ID	INTEGER
USERS	VARCHAR(16777216)
PROPERTY_KEY	PROPERTY_VALUE
connector	kafka
zookeeper.connect	node1:2181 node2:2181 node3:2181/istream/node6/kafka
rowtime	time1.myrowtime
group.id	0222
format	csv
topic	winno1
bootstrap.servers	node6:9096
type	source
version	0.10
rowtime.watermarks.type	periodic-ascending
separator	,
</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc formatted-02" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">DESC FORMATTED t_jdbcsource_formatted_bch_02;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2027683968">FIELD_NAME	FIELD_TYPE
ID	INTEGER
NAME	VARCHAR(16777216)
PROPERTY_KEY	PROPERTY_VALUE
password	123456
connector	jdbc
driver	com.mysql.jdbc.Driver
type	source
dbUrl	jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql
username	test
tableName	test_002</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc formatted-03" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">DESC FORMATTED t_jdbcsource_formatted_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-529705927">FIELD_NAME	FIELD_TYPE
CD_DEMO_SK	INTEGER
CD_GENDER	VARCHAR(16777216)
CD_MARITAL_STATUS	VARCHAR(16777216)
CD_EDUCATION_STATUS	VARCHAR(16777216)
CD_PURCHASE_ESTIMATE	INTEGER
CD_CREDIT_RATING	VARCHAR(16777216)
CD_DEP_COUNT	INTEGER
CD_DEP_EMPLOYED_COUNT	INTEGER
CD_DEP_COLLEGE_COUNT	INTEGER
PROPERTY_KEY	PROPERTY_VALUE
path	hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv
quoteChar	\&quot;
escapeChar	\\
connector	filesystem
commentPrefix	#
dataType	static
format	csv
type	source
separator	|</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc formatted-04" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">DESC FORMATTED t_kafkasource_formatted_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="826135325">FIELD_NAME	FIELD_TYPE
ID	INTEGER
USERS	VARCHAR(16777216)
PROPERTY_KEY	PROPERTY_VALUE
connector	kafka
zookeeper.connect	node1:2181 node2:2181 node3:2181/istream/node6/kafka
group.id	0001
format	csv
topic	upsert1
bootstrap.servers	node6:9096
type	source
version	0.10
separator	,</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_kafkasource_formatted_bch_04;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kafkasource_formatted_bch_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_kafkasource_formatted_bch_05;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kafkasource_formatted_bch_05;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_formatted_bch_03;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_formatted_bch_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_formatted_bch_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_formatted_bch_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc view" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view if exists  &quot;v_jdbcsource_view_bch_03&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view if exists  &quot;v_jdbcsource_view_bch_03&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view if exists v_jdbcsource_view_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view if exists v_jdbcsource_view_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream  if exists &quot;t_jdbcsource_view_bch_04&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream  if exists &quot;t_jdbcsource_view_bch_04&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM &quot;t_jdbcsource_view_bch_04&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM &quot;t_jdbcsource_view_bch_04&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE view v_jdbcsource_view_bch_02 AS SELECT id from &quot;t_jdbcsource_view_bch_04&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE view v_jdbcsource_view_bch_02 AS SELECT id from &quot;t_jdbcsource_view_bch_04&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE view &quot;v_jdbcsource_view_bch_03&quot; AS SELECT * from &quot;t_jdbcsource_view_bch_04&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE view &quot;v_jdbcsource_view_bch_03&quot; AS SELECT * from &quot;t_jdbcsource_view_bch_04&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc view-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">DESC view &quot;v_jdbcsource_view_bch_03&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1199537225">SELECT * FROM &quot;T_JDBCSOURCE_VIEW_BCH_04&quot;;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc view-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">DESC view  v_jdbcsource_view_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-319670754">SELECT ID FROM &quot;T_JDBCSOURCE_VIEW_BCH_04&quot;;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show jobs" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_jobs_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_jobs_bch_01; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsink_jobs_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_jobs_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsink_jobs_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_jobs_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM t_jdbcsource_jobs_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_jobs_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM t_jdbcsink_jobs_bch_02 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;showjobs1&apos;,&apos;batchSize&apos;:&apos;1&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_jobs_bch_02 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;showjobs1&apos;,&apos;batchSize&apos;:&apos;1&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05  CREATE STREAM t_jdbcsink_jobs_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;showjobs&apos;,&apos;batchSize&apos;:&apos;1&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_jobs_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;showjobs&apos;,&apos;batchSize&apos;:&apos;1&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 insert into t_jdbcsink_jobs_bch_02 select * from t_jdbcsource_jobs_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_jobs_bch_02 select * from t_jdbcsource_jobs_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show jobs-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show jobs;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-70981625">INSERT INTO `PUBLIC$T_JDBCSINK_JOBS_BCH_02` SELECT `PUBLIC$T_JDBCSOURCE_JOBS_BCH_01`.ID,`PUBLIC$T_JDBCSOURCE_JOBS_BCH_01`.NAME FROM `PUBLIC$T_JDBCSOURCE_JOBS_BCH_01`	</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 insert into t_jdbcsink_jobs_bch_01 select * from t_jdbcsource_jobs_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_jobs_bch_01 select * from t_jdbcsource_jobs_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show jobs-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show jobs;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1865166970">INSERT INTO `PUBLIC$T_JDBCSINK_JOBS_BCH_01` SELECT `PUBLIC$T_JDBCSOURCE_JOBS_BCH_01`.ID,`PUBLIC$T_JDBCSOURCE_JOBS_BCH_01`.NAME FROM `PUBLIC$T_JDBCSOURCE_JOBS_BCH_01`	</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsource_jobs_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_jobs_bch_01; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsink_jobs_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_jobs_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_jdbcsink_jobs_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_jobs_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show views" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view if exists  V_jdbcsource_show_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view if exists  V_jdbcsource_show_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop view if exists &quot;V_jdbcsource_show_bch_03&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop view if exists &quot;V_jdbcsource_show_bch_03&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists &quot;t_jdbcsource_view_bch_01&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists &quot;t_jdbcsource_view_bch_01&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM &quot;t_jdbcsource_view_bch_01&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM &quot;t_jdbcsource_view_bch_01&quot;  (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE view V_jdbcsource_show_bch_02 AS SELECT id from &quot;t_jdbcsource_view_bch_01&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE view V_jdbcsource_show_bch_02 AS SELECT id from &quot;t_jdbcsource_view_bch_01&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE view &quot;V_jdbcsource_show_bch_03&quot; AS SELECT * from &quot;t_jdbcsource_view_bch_01&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE view &quot;V_jdbcsource_show_bch_03&quot; AS SELECT * from &quot;t_jdbcsource_view_bch_01&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show views;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1023033994">V_JDBCSOURCE_SHOW_BCH_02	PUBLIC</stringProp>
                  <stringProp name="-249744779">V_jdbcsource_show_bch_03	PUBLIC</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 desc function/show functions " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop function if exists F_STRING_bch_02; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop function if exists F_STRING_bch_02;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop STREAM if exists T_show_functions_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> drop STREAM if exists T_show_functions_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop function if exists F_STRING_bch_03; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop function if exists F_STRING_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM T_show_functions_bch_01 (id Int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;aaaaa&apos; ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM T_show_functions_bch_01 (id Int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;aaaaa&apos; );
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE FUNCTION F_STRING_bch_02(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE FUNCTION F_STRING_bch_02(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE FUNCTION F_STRING_bch_02(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE FUNCTION F_STRING_bch_03(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-desc FUNCTION-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">desc FUNCTION F_STRING_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-338964426">A	INTEGER</stringProp>
                  <stringProp name="-2146418889">B	INTEGER</stringProp>
                  <stringProp name="1672917868">BODY	CLASSPATH:org.apache.TestUDF.getString</stringProp>
                  <stringProp name="931413152">RETURN_TYPE	VARCHAR(20)</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-SHOW FUNCTIONS-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW FUNCTIONS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-253460046">PUBLIC	F_STRING_BCH_02	FUNCTION</stringProp>
                  <stringProp name="-449973551">PUBLIC	F_STRING_BCH_03	FUNCTION</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show create streams" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists &quot;t_createstream_bch_001&quot;;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists &quot;t_createstream_bch_001&quot;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 CREATE STREAM &quot;t_createstream_bch_001&quot; (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM &quot;t_createstream_bch_001&quot; (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show create stream-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show create stream &quot;t_createstream_bch_001&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1420486042">CREATE STREAM t_createstream_bch_001 (ID INTEGER,NAME VARCHAR(16777216)) PROPERTIES (&apos;password&apos;:&apos;123456&apos;,&apos;connector&apos;:&apos;JDBC&apos;,&apos;driver&apos;:&apos;com.mysql.jdbc.Driver&apos;,&apos;type&apos;:&apos;SOURCE&apos;,&apos;dbUrl&apos;:&apos;jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql&apos;,&apos;tableName&apos;:&apos;test_002&apos;,&apos;username&apos;:&apos;test&apos;)</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists &quot;t_createstream_bch_001&quot;;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists &quot;t_createstream_bch_001&quot;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="929 LDBX081-05 show streams" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream if exists t_showstreams_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_showstreams_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 create stream t_showstreams_bch_01(  name string,   id int,   time1 timestamp )    PROPERTIES    (     &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,     &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;watermark&apos;,     &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    &apos;group.id&apos;: &apos;121001&apos;,     &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,     &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos;,  &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;  );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_showstreams_bch_01(
 name string, 
 id int, 
 time1 timestamp
)    PROPERTIES    (   
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,   
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;watermark&apos;,   
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,  
 &apos;group.id&apos;: &apos;121001&apos;,   
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,   
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos;,
 &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
 );</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 TC-show streams-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">show streams;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1569481741">T_SHOWSTREAMS_BCH_01</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="929 LDBX081-05 drop stream t_showstreams_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream t_showstreams_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08 Functions(Same with LinkoopDB) " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08-UDF" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08 -no inherit-function" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop-stream-T_UDF_jsource_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists T_UDF_jsource_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop-stream-T_UDF_jsink_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists T_UDF_jsink_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop-table-T_UDF_jsink_001" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop table if exists T_UDF_jsink_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 DT-function-TEST_STRING-001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_STRING;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop-stream-T_UDF_jsource_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_UDF_jsource_001 (
	 id Int
 ) properties (
	 &apos;type&apos;: &apos;source&apos;, 
	 &apos;connector&apos;: &apos;jdbc&apos;, 
	 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, 
	 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,
	 &apos;username&apos;: &apos;test&apos;, 
	 &apos;password&apos;: &apos;123456&apos;,
	 &apos;tableName&apos;: &apos;aaaaa&apos; 
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop-stream-T_UDF_jsink_001 " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_UDF_jsink_001 (
 	data varchar(20)
 ) properties (
	 &apos;type&apos;: &apos;sink&apos;,
	 &apos;connector&apos;: &apos;jdbc&apos;, 
	 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
	 &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,
	 &apos;username&apos;: &apos;${umysql}&apos;,
	 &apos;password&apos;: &apos;${umysql_password}&apos;,
	 &apos;batchSize&apos;:&apos;1&apos;,
	 &apos;tableName&apos;: &apos;T_UDF_jsink_001&apos;
 );


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 create-table-T_UDF_jsink_001" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> create table T_UDF_jsink_001(data varchar(20));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 SF-function-TEST_STRING-001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_STRING(A INT ,B INT ) RETURNS VARCHAR(20) 
LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 insert into-T_UDF_jsink_001                     " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into T_UDF_jsink_001 select TEST_STRING(2,19)  from T_UDF_jsource_001;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 set session" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-TEST_STRING-001" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from T_UDF_jsink_001;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1552630">2@19</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 DT-function-TEST_DOU-002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_DOU;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 SF-function-TEST_DOU-002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_DOU(A INT ,B INT ) RETURNS DOUBLE 
LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDFDouble.getString&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 set session" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-TEST_DOU-002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_DOU(2,19)  from  T_UDF_jsource_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1538113">21.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 DT-function-TEST_DOUBLE-003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_DOUBLE;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 SF-TEST_DOUBLE-003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_DOUBLE(a DOUBLE ,b INT ) RETURNS DOUBLE 
LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.IntDouble.getString&apos; </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 set session" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-TEST_DOUBLE-003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_DOUBLE(2.78,19) from  T_UDF_jsource_001;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="47681776">21.78</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 DT-function-TEST_ST-004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_ST;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 SF-function-TEST_ST-004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_ST(b BOOLEAN ) RETURNS BOOLEAN 
LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.BooleanTest.getString&apos; </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 set session" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-TEST_ST-004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_ST(TRUE)from T_UDF_jsource_001;


                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 DT-function-TEST_SHORT1-005" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_SHORT1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 SF-function-TEST_SHORT1-005" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_SHORT1(A SMALLINT ,B SMALLINT ) RETURNS INT 
LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestShort.getString&apos; </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 set session" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-TEST_SHORT1-005" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_SHORT1(-32768,-32768 ) from  T_UDF_jsource_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1339813420">-65536</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 DT-function-TEST_SHORT-006" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_SHORT;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 SF-function-TEST_SHORT-006" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_SHORT(A SMALLINT ,B SMALLINT ) RETURNS DOUBLE 
LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.ShortDouble.getString&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 set session" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-TEST_SHORT-006" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_SHORT(-32768,-32768 ) from T_UDF_jsource_001;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-929490706">-65536.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop-table-T_UDF_jsink_001" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop table if exists T_UDF_jsink_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop-stream-T_UDF_jsource_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists T_UDF_jsource_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="983 ISQL201 stream datatype same with linkoopdb " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if existst_jdbcsink_datatype_bch_01" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_datatype_bch_01;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if exists t_jdbcsource_datatype_bch_01;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_datatype_bch_01;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if t_jdbcsink_datatype_bch_03" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_datatype_bch_03;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if exists t_jdbcsource_datatype_bch_02;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_datatype_bch_02;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if t_jdbcsink_datatype_bch_02" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsink_datatype_bch_02;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if exists t_jdbcsource_datatype_bch_03;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_datatype_bch_03;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop table if exists datatype_sink1;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table if exists datatype_sink1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 create  table datatype_sink1 (s_varchar varchar(20), s_var varchar(30), s_de decimal, d_ded decimal(10), s_decimal decimal(20, 3), s_num numeric(21, 5), d_ded1 decimal(10,0));" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create  table datatype_sink1 (s_varchar varchar(20),
s_var varchar(30),
s_de decimal,
d_ded decimal(10),
s_decimal decimal(20, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201  CREATE STREAM t_jdbcsource_datatype_bch_01 (s_varchar varchar(20), s_var varchar(30), s_de decimal, d_ded decimal(10), s_decimal decimal(20, 3), s_num numeric(21, 5), d_ded1 decimal(10,0) ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;datatype&apos;);" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_datatype_bch_01 (s_varchar varchar(20),
s_var varchar(30),
s_de decimal,
d_ded decimal(10),
s_decimal decimal(20, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0)
) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;datatype&apos;);




 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201  CREATE STREAM t_jdbcsink_datatype_bch_01 (s_varchar varchar(20), s_var varchar(3), s_de decimal, d_ded decimal(10), s_decimal decimal(20, 3), s_num numeric(21, 5), d_ded1 decimal(10,0) ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password} &apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink1&apos;);   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsink_datatype_bch_01 (s_varchar varchar(20),
s_var varchar(3),
s_de decimal,
d_ded decimal(10),
s_decimal decimal(20, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0)
) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink1&apos;);



 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201-insert into t_jdbcsink_datatype_bch_02 select * from t_jdbcsource_datatype_bch_01;   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into t_jdbcsink_datatype_bch_01 select * from t_jdbcsource_datatype_bch_01;
 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 TC-select * from datatype_sink1;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from datatype_sink1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1542376534">wwweee33333	343333rrrrrrrrr	34	335	324333.990	4455.99889	444555</stringProp>
                <stringProp name="1945271727">33	2019-09-08 09:08:09	4	44444445	44444.988	334.09877	34098878</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop table if exists datatype_sink2;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table if exists datatype_sink2;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 create  table datatype_sink2 (s_varchar varchar(20), s_var varchar(3), s_de decimal, d_ded decimal(10), s_decimal decimal(20, 3), s_num numeric(21, 5), d_ded1 decimal(10,0));" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create  table datatype_sink2 (s_varchar varchar(20),
s_var varchar(30),
s_de decimal,
d_ded decimal(10),
s_decimal decimal(20, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201  CREATE STREAM t_jdbcsink_datatype_bch_02 (s_varchar varchar(20), s_var varchar(3), s_de decimal, d_ded decimal(10), s_decimal decimal(20, 3), s_num numeric(21, 5), d_ded1 decimal(10,0) ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password} &apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink2&apos;);    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsink_datatype_bch_02 (s_varchar varchar(20),
s_var varchar(30),
s_de decimal,
d_ded decimal(10),
s_decimal decimal(20, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0)
) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink2&apos;);




 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201  CREATE STREAM t_jdbcsource_datatype_bch_02 (s_varchar varchar, s_var varchar(3), s_de decimal, d_ded decimal(10), s_decimal decimal(20, 3), s_num numeric(21, 5), d_ded1 decimal(10,0) ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password} &apos;, &apos;tableName&apos;: &apos;datatype1&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_datatype_bch_02 (s_varchar varchar(20),
s_var varchar(3),
s_de decimal,
d_ded decimal(10),
s_decimal decimal(20, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0)
) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;datatype1&apos;);




 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201-INSERT INTO t_jdbcsink_datatype_bch_02 select * from t_jdbcsource_datatype_bch_02;    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">INSERT INTO t_jdbcsink_datatype_bch_02 select * from t_jdbcsource_datatype_bch_02;
 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 TC-select * from datatype_sink2;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from datatype_sink2;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1542376534">wwweee33333	343333rrrrrrrrr	34	335	324333.990	4455.99889	444555</stringProp>
                <stringProp name="1945271727">33	2019-09-08 09:08:09	4	44444445	44444.988	334.09877	34098878</stringProp>
                <stringProp name="2116770873">eeeeeeee	eeeeeeee	44	444	5666.000	4.00000	4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop table if exists datatype_sink3;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table if exists datatype_sink3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 create  table datatype_sink3 (s_varchar varchar(20), s_var varchar(3), s_de decimal(5,5), d_ded decimal(10), s_decimal decimal(10, 3), s_num numeric(21, 5), d_ded1 decimal(10,0));" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create  table datatype_sink3 (s_varchar varchar(20),
s_var varchar(30),
s_de decimal(7,5),
d_ded decimal(10),
s_decimal decimal(10, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201   CREATE STREAM t_jdbcsink_datatype_bch_03 (s_varchar varchar(20), s_var varchar(3), s_de decimal(5,5), d_ded decimal(10), s_decimal decimal(10, 3), s_num numeric(21, 5), d_ded1 decimal(10,0) ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password} &apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink3&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsink_datatype_bch_03 (s_varchar varchar(20),
s_var varchar(30),
s_de decimal(7,5),
d_ded decimal(10),
s_decimal decimal(10, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0)
) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink3&apos;);




 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 CREATE STREAM t_jdbcsource_datatype_bch_03 (s_varchar varchar, s_var varchar(3), s_de decimal(5,5), d_ded decimal(10), s_decimal decimal(10, 3), s_num numeric(21, 5), d_ded1 decimal(10,0) ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos; jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;datatype2&apos;);    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE STREAM t_jdbcsource_datatype_bch_03 (s_varchar varchar(20),
s_var varchar(30),
s_de decimal(7,5),
d_ded decimal(10),
s_decimal decimal(10, 3),
s_num numeric(21, 5),
d_ded1 decimal(10,0)
) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;datatype2&apos;);




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201-INSERT INTO t_jdbcsink_datatype_bch_03 select * from t_jdbcsource_datatype_bch_03;    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">INSERT INTO t_jdbcsink_datatype_bch_03 select * from t_jdbcsource_datatype_bch_03;
 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 TC-select * from datatype_sink3;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from datatype_sink3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1913920501">wwweee33333	343333rrrrrrrrr	34.00000	335	324334.000	4455.99889	444555</stringProp>
                <stringProp name="664097290">eeeeeeee	eeeeeeee	-0.93400	444	5666.000	4.00000	4</stringProp>
                <stringProp name="1568588178">3	34	23.35000	4	-9.087	-99.03360	8999999999</stringProp>
                <stringProp name="963892433">33	2019-09-08 09:08:09	4.09900	44444445	44444.988	334.09877	34098878</stringProp>
                <stringProp name="-7088138">33	2019-09-08 09:08:09	77.09800	44444445	44444.988	334.09877	34098878</stringProp>
                <stringProp name="-1395414576">33	2019-09-08 09:08:09	4.09800	44444445	44444.988	334.09877	34098878</stringProp>
                <stringProp name="89378054">33	2019-09-08 09:08:09	-23.09400	44444445	44444.988	334.09877	34098878</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if exists t_jdbcsource_datatype_bch_01;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_datatype_bch_01;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if exists t_jdbcsource_datatype_bch_02;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_datatype_bch_02;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="983 ISQL201 drop stream if exists t_jdbcsource_datatype_bch_03;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_datatype_bch_03;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="913 ISQL005 JDBC upsert模式支持 " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="913 ISQL005 id primary key" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_jdbcsink_upsert_bch_01 (id INT primary key,users varchar) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_upsert_bch_01 (id INT primary key,users varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_kafkasource_upsert_bch_01 (id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;upsert1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0021&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_upsert_bch_01
(id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;upsert1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;0021&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos; );
 


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 alter stream t_kafkasource_upsert_bch_01 set properties(&apos;group.id&apos;:&apos;00${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_upsert_bch_01 set properties(&apos;group.id&apos;:&apos;00${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 delete from upsert;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from upsert;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 insert into t_jdbcsink_upsert_bch_01 SELECT * FROM t_kafkasource_upsert_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_upsert_bch_01 SELECT * FROM t_kafkasource_upsert_bch_01;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 TC-id primary key-01" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from upsert;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="47466">1	b</stringProp>
                  <stringProp name="48427">2	b</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="913 ISQL005 USERS primary key " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_02;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_02;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_02;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_02;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_kafkasource_upsert_bch_02 (id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;upsert1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0020&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_upsert_bch_02
(id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;upsert1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;0020&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 alter stream t_kafkasource_upsert_bch_02 set properties(&apos;group.id&apos;:&apos;01${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_upsert_bch_02 set properties(&apos;group.id&apos;:&apos;01${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_jdbcsink_upsert_bch_02 (id INT ,users varchar primary key) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert2&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_upsert_bch_02 (id INT ,users varchar(20) primary key) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert2&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 insert into t_jdbcsink_upsert_bch_02 SELECT * FROM t_kafkasource_upsert_bch_02;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_upsert_bch_02 SELECT * FROM t_kafkasource_upsert_bch_02;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 delete from upsert2;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from upsert2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 TC-users primary key-02" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from upsert2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="48426">2	a</stringProp>
                  <stringProp name="48427">2	b</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_02;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_02;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_02;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_02;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="913 ISQL005 id primary key,users primary key " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_kafkasource_upsert_bch_03 (id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;upsert1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0030&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_upsert_bch_03
(id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;upsert1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;0030&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_jdbcsink_upsert_bch_03 (id INT primary key,users varchar primary key) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert3&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_upsert_bch_03 (id INT , users varchar(20),primary key(id, users)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert3&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 alter stream t_kafkasource_upsert_bch_03 set properties(&apos;group.id&apos;:&apos;02${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_upsert_bch_03 set properties(&apos;group.id&apos;:&apos;02${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 insert into t_jdbcsink_upsert_bch_03 SELECT * FROM t_kafkasource_upsert_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_upsert_bch_03 SELECT * FROM t_kafkasource_upsert_bch_03;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 delete from upsert3;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from upsert3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 TC-id primary key,users primary key-03" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from upsert3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="47465">1	a</stringProp>
                  <stringProp name="48426">2	a</stringProp>
                  <stringProp name="47466">1	b</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="913 ISQL005  NO primary key" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_04;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_04;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_04;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_04;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_kafkasource_upsert_bch_04 (id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;upsert1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0023&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_upsert_bch_04
(id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;upsert1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,    
 &apos;group.id&apos;: &apos;0023&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005  CREATE STREAM t_jdbcsink_upsert_bch_04 (id INT,users varchar) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert4&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_upsert_bch_04 (id INT,users varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;upsert&apos;, &apos;tableName&apos;: &apos;upsert4&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 alter stream t_kafkasource_upsert_bch_04 set properties(&apos;group.id&apos;:&apos;03${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_upsert_bch_04 set properties(&apos;group.id&apos;:&apos;03${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 insert into t_jdbcsink_upsert_bch_04 SELECT * FROM t_kafkasource_upsert_bch_04;   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_upsert_bch_04 SELECT * FROM t_kafkasource_upsert_bch_04;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 delete from upsert4;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from upsert4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 TC-NO primary key-04" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from upsert4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="47465">1	a</stringProp>
                  <stringProp name="48426">2	a</stringProp>
                  <stringProp name="47466">1	b</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_kafkasource_upsert_bch_04;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_upsert_bch_04;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="913 ISQL005 drop stream if exists t_jdbcsink_upsert_bch_04;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_upsert_bch_04;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 兼容 istream语法 开窗函数" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 event time" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 db数据源" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 tumble" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbcsource_TUMPLE_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsource_TUMPLE_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_TUMPLE_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_TUMPLE_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsink_TUMPLE_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsink_TUMPLE_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.TUMPLE;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists streamsql.TUMPLE;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  streamsql.TUMPLE(id integer,users string, amount double,time1 timestamp);" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create  table  streamsql.TUMPLE(id integer,users string, amount double,time1 timestamp);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  insert into  streamsql.TUMPLE values(12,&apos;lichen&apos;,1234,&apos;2018-11-21 09:41:54&apos;), (32,&apos;dengchao&apos;,3456,&apos;2018-11-22 09:42:18&apos;), (34,&apos;lily&apos;,2345,&apos;2018-11-23 09:42:47&apos; ), (45,&apos;chenhe&apos;,4567,&apos;2018-11-26 01:44:33&apos;), (23,&apos;lichen&apos;,4578,&apos;2018-11-25 09:43:25&apos; ), (67,&apos;lichen&apos;,2390,&apos;2018-11-25 09:56:58&apos;), (9,&apos;lichen&apos;,76,&apos;2018-11-26 08:57:39&apos;), (11,&apos;dog&apos;,76,&apos;2018-11-26 08:50:39&apos;) ;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into  streamsql.TUMPLE values(12,&apos;lichen&apos;,1234,&apos;2018-11-21 09:41:54&apos;),
(32,&apos;dengchao&apos;,3456,&apos;2018-11-22 09:42:18&apos;),
(34,&apos;lily&apos;,2345,&apos;2018-11-23 09:42:47&apos; ),
(45,&apos;chenhe&apos;,4567,&apos;2018-11-26 01:44:33&apos;),
(23,&apos;lichen&apos;,4578,&apos;2018-11-25 09:43:25&apos; ),
(67,&apos;lichen&apos;,2390,&apos;2018-11-25 09:56:58&apos;),
(9,&apos;lichen&apos;,76,&apos;2018-11-26 08:57:39&apos;),
(11,&apos;dog&apos;,76,&apos;2018-11-26 08:50:39&apos;)
;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_dbcsource_TUMPLE_bch_01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.TUMPLE&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_dbsource_TUMPLE_bch_01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.TUMPLE&apos;);





</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists TUMPLEsink;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists TUMPLEsink;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  TUMPLEsink(users string, amount double);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create  table  TUMPLEsink(users varchar(20), amount double);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_jdbcsink_TUMPLE_bch_01 (users string, amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;TUMPLEsink&apos;);   " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_TUMPLE_bch_01 (users string, amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;TUMPLEsink&apos;);




</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.TUMPLEsink1;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists streamsql.TUMPLEsink1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  streamsql.TUMPLEsink1(sta_time timestamp,end_time timestamp, users string);" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create  table  streamsql.TUMPLEsink1(sta_time timestamp,end_time timestamp, users string);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE STREAM t_dbsink_TUMPLE_bch_02 (sta_time timestamp,end_time timestamp, users string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.TUMPLEsink1&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">CREATE STREAM t_dbsink_TUMPLE_bch_02 (sta_time timestamp,end_time timestamp, users string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.TUMPLEsink1&apos;);




</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO t_dbsink_TUMPLE_bch_01 SELECT users, SUM(amount) FROM t_dbcsource_TUMPLE_bch_01 GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">INSERT INTO t_jdbcsink_TUMPLE_bch_01 SELECT users, SUM(amount)
FROM t_dbsource_TUMPLE_bch_01
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  INSERT INTO t_dbsink_TUMPLE_bch_02 SELECT TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; DAY), TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; DAY), users FROM t_dbcsource_TUMPLE_bch_01  GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">INSERT INTO t_dbsink_TUMPLE_bch_02 SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; DAY),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; DAY),
users
FROM t_dbsource_TUMPLE_bch_01 
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  TC-no TUMBLE_START/TUMBLE_END-01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from TUMPLEsink;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-306588254">lichen	1234.0</stringProp>
                      <stringProp name="199812704">dengchao	3456.0</stringProp>
                      <stringProp name="-583443453">lily	2345.0</stringProp>
                      <stringProp name="-156884635">lichen	6968.0</stringProp>
                      <stringProp name="874841262">dog	76.0</stringProp>
                      <stringProp name="-2112097310">chenhe	4567.0</stringProp>
                      <stringProp name="665784447">lichen	76.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  TC-TUMBLE_START/TUMBLE_END-02" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from streamsql.TUMPLEsink1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-226842196">2018-11-26 00:00:00.0	2018-11-27 00:00:00.0	chenhe</stringProp>
                      <stringProp name="-1483156886">2018-11-25 00:00:00.0	2018-11-26 00:00:00.0	lichen</stringProp>
                      <stringProp name="-1484023643">2018-11-23 00:00:00.0	2018-11-24 00:00:00.0	lily</stringProp>
                      <stringProp name="31678252">2018-11-26 00:00:00.0	2018-11-27 00:00:00.0	lichen</stringProp>
                      <stringProp name="1517814907">2018-11-26 00:00:00.0	2018-11-27 00:00:00.0	dog</stringProp>
                      <stringProp name="1328718694">2018-11-22 00:00:00.0	2018-11-23 00:00:00.0	dengchao</stringProp>
                      <stringProp name="1047437154">2018-11-21 00:00:00.0	2018-11-22 00:00:00.0	lichen</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 hop" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_hop_bch_001;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsource_hop_bch_001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_HOP_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_HOP_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.HOP;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists streamsql.HOP;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  streamsql.HOP(id integer,users string, amount double,time1 timestamp);" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create  table  streamsql.HOP(id integer,users string, amount double,time1 timestamp);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 insert into streamsql.HOP values  (67,&apos;lichen&apos;  ,2390.0E0,&apos;2018-11-25 09:56:58&apos;),(45,&apos;chenhe &apos; ,4567.0E0,&apos;2018-11-26 01:44:33&apos;),(34,&apos;lily &apos;   ,2345.0E0,&apos;2018-11-23 09:42:47&apos;),( 9,&apos;lichen &apos; ,  76.0E0,&apos;2018-11-26 08:57:39&apos;),(23,&apos;lichen&apos;  ,4578.0E0,&apos;2018-11-25 09:43:25&apos;),(32,&apos;dengchao&apos;,3456.0E0,&apos;2018-11-22 09:42:18&apos;),(12,&apos;lichen&apos;  ,1234.0E0,&apos;2018-11-21 09:41:54&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into streamsql.HOP values 
(67,&apos;lichen&apos;  ,2390.0E0,&apos;2018-11-25 09:56:58&apos;),(45,&apos;chenhe &apos; ,4567.0E0,&apos;2018-11-26 01:44:33&apos;),(34,&apos;lily &apos;   ,2345.0E0,&apos;2018-11-23 09:42:47&apos;),( 9,&apos;lichen &apos; ,  76.0E0,&apos;2018-11-26 08:57:39&apos;),(23,&apos;lichen&apos;  ,4578.0E0,&apos;2018-11-25 09:43:25&apos;),(32,&apos;dengchao&apos;,3456.0E0,&apos;2018-11-22 09:42:18&apos;),(12,&apos;lichen&apos;  ,1234.0E0,&apos;2018-11-21 09:41:54&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE STREAM t_dbsource_hop_bch_001 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;admin&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;streamsql.HOP&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_dbsource_hop_bch_001 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.HOP&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists HOPSINK;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists HOPSINK;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  HOPSINK(sta_time timestamp,end_time timestamp, users string,amount double);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create  table  HOPSINK(sta_time timestamp ,end_time timestamp DEFAULT &apos;2019-09-09 09:09:09&apos;, users VARCHAR(20),amount double);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users string,amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;HOPSINK&apos;);   " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users string,amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;HOPSINK&apos;);






</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  INSERT INTO t_dbsink_HOP_bch_001 SELECT    HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),   HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),   users, SUM(amount) FROM t_dbsource_hop_bch_001 GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users; " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query"> INSERT INTO  t_jdbcsink_HOP_bch_01 SELECT 
  HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  users, SUM(amount)
FROM t_dbsource_hop_bch_001
GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">30000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 TC-hop-02" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT *  FROM  HOPSINK;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1022352701">2018-11-21 09:41:00.0	2018-11-21 09:42:00.0	lichen	1234.0</stringProp>
                      <stringProp name="371170237">2018-11-21 09:41:30.0	2018-11-21 09:42:30.0	lichen	1234.0</stringProp>
                      <stringProp name="-1804583111">2018-11-22 09:41:30.0	2018-11-22 09:42:30.0	dengchao	3456.0</stringProp>
                      <stringProp name="281886909">2018-11-22 09:42:00.0	2018-11-22 09:43:00.0	dengchao	3456.0</stringProp>
                      <stringProp name="-1640701252">2018-11-23 09:42:00.0	2018-11-23 09:43:00.0	lily 	2345.0</stringProp>
                      <stringProp name="-348822910">2018-11-23 09:42:30.0	2018-11-23 09:43:30.0	lily 	2345.0</stringProp>
                      <stringProp name="-117363693">2018-11-25 09:42:30.0	2018-11-25 09:43:30.0	lichen	4578.0</stringProp>
                      <stringProp name="-1795637609">2018-11-25 09:43:00.0	2018-11-25 09:44:00.0	lichen	4578.0</stringProp>
                      <stringProp name="1348677577">2018-11-25 09:56:00.0	2018-11-25 09:57:00.0	lichen	2390.0</stringProp>
                      <stringProp name="-1552766781">2018-11-25 09:56:30.0	2018-11-25 09:57:30.0	lichen	2390.0</stringProp>
                      <stringProp name="1303203671">2018-11-26 01:44:00.0	2018-11-26 01:45:00.0	chenhe 	4567.0</stringProp>
                      <stringProp name="1552741789">2018-11-26 01:44:30.0	2018-11-26 01:45:30.0	chenhe 	4567.0</stringProp>
                      <stringProp name="1117670890">2018-11-26 08:57:00.0	2018-11-26 08:58:00.0	lichen 	76.0</stringProp>
                      <stringProp name="-1885418064">2018-11-26 08:57:30.0	2018-11-26 08:58:30.0	lichen 	76.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_hop_bch_001;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsource_hop_bch_001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsink_HOP_bch_001;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsink_HOP_bch_001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 session" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_session_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsource_session_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.SESSION;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists streamsql.SESSION;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_HOP_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_HOP_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE table streamsql.SESSION (users VARCHAR(20), clicks VARCHAR(20),time1 timestamp);" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">CREATE table streamsql.SESSION (users VARCHAR(20), clicks VARCHAR(20),time1 timestamp);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO streamsql.SESSION VALUES(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:58&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:00&apos;),(&apos;Timo&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:02:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:05&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:49&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">INSERT INTO streamsql.SESSION VALUES(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:58&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:00&apos;),(&apos;Timo&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:02:10&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:01:05&apos;),(&apos;Jark&apos;, &apos;http://taobao.com/xxx&apos;,&apos;2017-10-10 10:00:49&apos;);




</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists SESSIONSINK;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists SESSIONSINK;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  SESSIONSINK(sta_time timestamp,end_time timestamp DEFAULT &apos;2019-09-09 09:09:09&apos;, users VARCHAR(20),amount BIGINT);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create  table  SESSIONSINK(sta_time timestamp,end_time timestamp DEFAULT &apos;2019-09-09 09:09:09&apos;, users VARCHAR(20),amount BIGINT);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users string,amount double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;HOPSINK&apos;);   " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_HOP_bch_01 (sta_time timestamp,end_time timestamp, users VARCHAR(20),amount BIGINT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;SESSIONSINK&apos;);






</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_dbsource_session_bch01 (users string, clicks string,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.SESSION&apos;);   " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_dbsource_session_bch01 (users string, clicks string,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.SESSION&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 insert into t_jdbcsink_HOP_bch_01 SELECT  SESSION_START(myrowtime, INTERVAL &apos;30&apos; SECOND), SESSION_END(myrowtime, INTERVAL &apos;30&apos; SECOND), users,  COUNT(clicks) FROM t_dbsource_session_bch01 GROUP BY SESSION(myrowtime, INTERVAL &apos;30&apos; SECOND), users;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_HOP_bch_01 SELECT 
SESSION_START(myrowtime, INTERVAL &apos;30&apos; SECOND),
SESSION_END(myrowtime, INTERVAL &apos;30&apos; SECOND),
users, 
COUNT(clicks)
FROM t_dbsource_session_bch01
GROUP BY SESSION(myrowtime, INTERVAL &apos;30&apos; SECOND), users;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 TC-SESSION-01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT * FROM SESSIONSINK;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="388300469">2017-10-10 10:00:00.0	2017-10-10 10:00:40.0	Jark	2</stringProp>
                      <stringProp name="-146557205">2017-10-10 10:00:49.0	2017-10-10 10:01:35.0	Jark	2</stringProp>
                      <stringProp name="-1975608854">2017-10-10 10:01:58.0	2017-10-10 10:02:28.0	Jark	1</stringProp>
                      <stringProp name="1362313888">2017-10-10 10:02:10.0	2017-10-10 10:02:40.0	Timo	1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_session_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsource_session_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_HOP_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_HOP_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.SESSION;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists streamsql.SESSION;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists SESSIONSINK;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists SESSIONSINK;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 proc time E  已提bug， issue号：1147" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 db数据源" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="930 LDBX081-06 tumble" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_jdbcsink_proc_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_proc_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop stream if exists t_dbsource_TUMPLE_PROC_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_dbsource_TUMPLE_PROC_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists streamsql.PROCTIME1;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists streamsql.PROCTIME1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 drop table if exists PROCSINK;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists PROCSINK;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 create  table  PROCSINK( users VARCHAR(20),SUMID BIGINT);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create  table  PROCSINK(users VARCHAR(50),sumid int);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 CREATE table streamsql.PROCTIME1 (id integer,users VARCHAR(50));" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">CREATE table streamsql.PROCTIME1 (id integer,users VARCHAR(50));
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO streamsql.PROCTIME1 VALUES (3 ,&apos;C  &apos; ),( 4,&apos; D &apos; ),( 5,&apos; E &apos; ),( 6,&apos; F &apos; ),(12,&apos; AB&apos; ),( 1,&apos; A &apos; );  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">INSERT INTO streamsql.PROCTIME1 VALUES (3,&apos;C&apos;),( 4,&apos;D&apos;),(5,&apos;E&apos;),(6,&apos;F&apos;),(12,&apos;AB&apos;),(1,&apos;A&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06   CREATE STREAM t_jdbcsink_proc_bch_01 ( users VARCHAR(20),SUMID BIGINT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;PROCSINK&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_proc_bch_01 (users VARCHAR(50),sumid int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;PROCSINK&apos;);





</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06  CREATE STREAM t_dbsource_TUMPLE_PROC_bch01 (id integer,users string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;proctime&apos;:&apos;proctime&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.PROCTIME&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_dbsource_TUMPLE_PROC_bch01 (id integer,users VARCHAR(50)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;proctime&apos;:&apos;proctime&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.PROCTIME1&apos;);






</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 INSERT INTO t_jdbcsink_proc_bch_01 SELECT users, SUM(id) FROM t_dbsource_TUMPLE_PROC_bch01 GROUP BY TUMBLE(proctime, INTERVAL &apos;1&apos; DAY), users; " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">INSERT INTO t_jdbcsink_proc_bch_01 SELECT users, SUM(id)
FROM t_dbsource_TUMPLE_PROC_bch01
GROUP BY TUMBLE(proctime, INTERVAL &apos;1&apos; SECOND), users;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="930 LDBX081-06 TC-proc-01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from PROCSINK;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="7901327">lichen                    1234.0</stringProp>
                      <stringProp name="-1962404233">dengchao                   3456.0</stringProp>
                      <stringProp name="-813142054">lily                     2345.0</stringProp>
                      <stringProp name="157604946">lichen                    6968.0</stringProp>
                      <stringProp name="-495296532">lichen                      76.0</stringProp>
                      <stringProp name="-285609009">chenhe                    4567.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="931 LDBX081-07 兼容istream语法 join(time window) " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="931 LDBX081-07 DB 数据源" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table  streamsql.joinwintime(id integer,users string, amount double,time1 timestamp);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  streamsql.joinwintime(id integer,users string, amount double,time1 timestamp);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 insert into  streamsql.joinwintime  values(12,&apos;lichen&apos;,1234,&apos;2018-11-21 09:41:54&apos;), (32,&apos;dengchao&apos;,3456,&apos;2018-11-22 09:42:18&apos;), (34,&apos;lily&apos;,2345,&apos;2018-11-23 09:42:47&apos; ), (45,&apos;chenhe&apos;,4567,&apos;2018-11-26 01:44:33&apos;), (23,&apos;lichen&apos;,4578,&apos;2018-11-25 09:43:25&apos; ), (67,&apos;lichen&apos;,2390,&apos;2018-11-25 09:56:58&apos;), (9,&apos;lichen&apos;,76,&apos;2018-11-26 08:57:39&apos;), (11,&apos;dog&apos;,76,&apos;2018-11-26 08:50:39&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into  streamsql.joinwintime  values(12,&apos;lichen&apos;,1234,&apos;2018-11-21 09:41:54&apos;),
(32,&apos;dengchao&apos;,3456,&apos;2018-11-22 09:42:18&apos;),
(34,&apos;lily&apos;,2345,&apos;2018-11-23 09:42:47&apos; ),
(45,&apos;chenhe&apos;,4567,&apos;2018-11-26 01:44:33&apos;),
(23,&apos;lichen&apos;,4578,&apos;2018-11-25 09:43:25&apos; ),
(67,&apos;lichen&apos;,2390,&apos;2018-11-25 09:56:58&apos;),
(9,&apos;lichen&apos;,76,&apos;2018-11-26 08:57:39&apos;),
(11,&apos;dog&apos;,76,&apos;2018-11-26 08:50:39&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsource_winjoin_bch_01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_winjoin_bch_01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime&apos;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime1;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table  streamsql.joinwintime1(id integer,users string, amount double,time1 timestamp);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  streamsql.joinwintime1(id integer,users string, amount double,time1 timestamp);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 insert into  streamsql.joinwintime1 values(12,&apos;lichen&apos;,1234,&apos;2018-11-21 09:41:54&apos;), (32,&apos;dengchao&apos;,3456,&apos;2018-11-22 11:42:18&apos;), (34,&apos;lily&apos;,2345,&apos;2018-11-23 09:42:47&apos; ), (45,&apos;chenhe&apos;,4567,&apos;2018-11-26 01:44:33&apos;), (23,&apos;lichen&apos;,4578,&apos;2018-11-25 09:43:25&apos; ), (67,&apos;lichen&apos;,2390,&apos;2018-11-24 09:56:58&apos;), (9,&apos;lichen&apos;,76,&apos;2018-11-26 12:57:39&apos;), (11,&apos;dog&apos;,76,&apos;2018-11-26 11:50:39&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into  streamsql.joinwintime1 values(12,&apos;lichen&apos;,1234,&apos;2018-11-21 09:41:54&apos;),
(32,&apos;dengchao&apos;,3456,&apos;2018-11-22 11:42:18&apos;),
(34,&apos;lily&apos;,2345,&apos;2018-11-23 09:42:47&apos; ),
(45,&apos;chenhe&apos;,4567,&apos;2018-11-26 01:44:33&apos;),
(23,&apos;lichen&apos;,4578,&apos;2018-11-25 09:43:25&apos; ),
(67,&apos;lichen&apos;,2390,&apos;2018-11-24 09:56:58&apos;),
(9,&apos;lichen&apos;,76,&apos;2018-11-26 12:57:39&apos;),
(11,&apos;dog&apos;,76,&apos;2018-11-26 11:50:39&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07  CREATE STREAM t_dbsource_winjoin_bch_02 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime1&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_winjoin_bch_02 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.joinwintime1&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table  streamsql.WINJOIN_SINK_001 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  streamsql.WINJOIN_SINK_001 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsink_winjoin_bch_01 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_001&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsink_winjoin_bch_01 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_001&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists WINJOIN_SINK_002;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_002;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table  streamsql.WINJOIN_SINK_002 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  streamsql.WINJOIN_SINK_002 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsink_winjoin_bch_02 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_002&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsink_winjoin_bch_02 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_002&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists WINJOIN_SINK_003;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_003;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table  streamsql.WINJOIN_SINK_003 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  streamsql.WINJOIN_SINK_003 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsink_winjoin_bch_03 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;:  &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_003&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsink_winjoin_bch_03 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: 
&apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_003&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 INSERT INTO t_dbsink_winjoin_bch_01 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02 WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND       t_dbsource_winjoin_bch_01.myrowtime BETWEEN t_dbsource_winjoin_bch_02.myrowtime1- INTERVAL &apos;4&apos; HOUR AND t_dbsource_winjoin_bch_02.myrowtime1;     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">INSERT INTO t_dbsink_winjoin_bch_01 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount
FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02
WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND
      t_dbsource_winjoin_bch_01.myrowtime BETWEEN t_dbsource_winjoin_bch_02.myrowtime1- INTERVAL &apos;4&apos; HOUR AND t_dbsource_winjoin_bch_02.myrowtime1;

   </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 INSERT INTO t_dbsink_winjoin_bch_02 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02 WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND       t_dbsource_winjoin_bch_01.myrowtime = t_dbsource_winjoin_bch_02.myrowtime1;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">INSERT INTO t_dbsink_winjoin_bch_02 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount
FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02
WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND
      t_dbsource_winjoin_bch_01.myrowtime = t_dbsource_winjoin_bch_02.myrowtime1;

  </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 INSERT INTO t_dbsink_winjoin_bch_03 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02 WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND            t_dbsource_winjoin_bch_02.myrowtime1 &gt;= t_dbsource_winjoin_bch_01.myrowtime AND t_dbsource_winjoin_bch_02.myrowtime1 &lt; t_dbsource_winjoin_bch_01.myrowtime + INTERVAL &apos;10&apos; MINUTE;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">INSERT INTO t_dbsink_winjoin_bch_03 SELECT t_dbsource_winjoin_bch_01.id,t_dbsource_winjoin_bch_01.users,t_dbsource_winjoin_bch_01.amount,t_dbsource_winjoin_bch_01.myrowtime,t_dbsource_winjoin_bch_02.id,t_dbsource_winjoin_bch_02.users,t_dbsource_winjoin_bch_02.amount
FROM t_dbsource_winjoin_bch_01, t_dbsource_winjoin_bch_02
WHERE t_dbsource_winjoin_bch_01.id = t_dbsource_winjoin_bch_02.id AND
           t_dbsource_winjoin_bch_02.myrowtime1 &gt;= t_dbsource_winjoin_bch_01.myrowtime AND t_dbsource_winjoin_bch_02.myrowtime1 &lt; t_dbsource_winjoin_bch_01.myrowtime + INTERVAL &apos;10&apos; MINUTE;

  </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 TC-test between and-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  streamsql.WINJOIN_SINK_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                  <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                  <stringProp name="-634720280">11	dog	76.0	2018-11-26 08:50:39.0	11	dog	76.0</stringProp>
                  <stringProp name="-1150765416">45	chenhe	4567.0	2018-11-26 01:44:33.0	45	chenhe	4567.0</stringProp>
                  <stringProp name="-1217634013">32	dengchao	3456.0	2018-11-22 09:42:18.0	32	dengchao	3456.0</stringProp>
                  <stringProp name="-132320207">9	lichen	76.0	2018-11-26 08:57:39.0	9	lichen	76.0</stringProp>
                  <stringProp name="-323445493">23	lichen	4578.0	2018-11-25 09:43:25.0	23	lichen	4578.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 TC-test and-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  streamsql.WINJOIN_SINK_002;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1150765416">45	chenhe	4567.0	2018-11-26 01:44:33.0	45	chenhe	4567.0</stringProp>
                  <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                  <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                  <stringProp name="-323445493">23	lichen	4578.0	2018-11-25 09:43:25.0	23	lichen	4578.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 TC-test&gt;= and &lt; -03" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  streamsql.WINJOIN_SINK_003;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                  <stringProp name="-323445493">23	lichen	4578.0	2018-11-25 09:43:25.0	23	lichen	4578.0</stringProp>
                  <stringProp name="-1150765416">45	chenhe	4567.0	2018-11-26 01:44:33.0	45	chenhe	4567.0</stringProp>
                  <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsource_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.joinwintime1;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.joinwintime1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists WINJOIN_SINK_002;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_002;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists WINJOIN_SINK_003;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_003;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="931 LDBX081-07 kafka 数据源" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_kafkasource_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_kafkasource_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_04;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_04;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_05;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_05;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_06;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_06;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_kafkasource_winjoin_bch_01 (id integer,users string, amount double,time1 timestamp) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;joinwintimenew&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0001&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,  &apos;watermarksDelay&apos;:&apos;0&apos;,  &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_winjoin_bch_01
(id integer,users string, amount double,time1 timestamp)
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;joinwintimenew&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0001&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
 &apos;watermarksDelay&apos;:&apos;0&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_kafkasource_winjoin_bch_02 (id integer,users string, amount double,time1 timestamp) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;joinwintime1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0001&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,  &apos;watermarksDelay&apos;:&apos;0&apos;,  &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_kafkasource_winjoin_bch_02
(id integer,users string, amount double,time1 timestamp)
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;joinwintime1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0001&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
 &apos;watermarksDelay&apos;:&apos;0&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 alter stream t_kafkasource_winjoin_bch_02 set properties(&apos;group.id&apos;:&apos;13${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_winjoin_bch_02 set properties(&apos;group.id&apos;:&apos;13${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_004;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_004;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_005;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_005;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_006;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_006;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table streamsql.WINJOIN_SINK_004(id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.WINJOIN_SINK_004(id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table streamsql.WINJOIN_SINK_005(id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.WINJOIN_SINK_005(id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 create table streamsql.WINJOIN_SINK_006(id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.WINJOIN_SINK_006(id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsink_winjoin_bch_04 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;,  &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_004&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsink_winjoin_bch_04 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;,  &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_004&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsink_winjoin_bch_05 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;,  &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_005&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsink_winjoin_bch_05 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;,  &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_005&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CREATE STREAM t_dbsink_winjoin_bch_06 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_006&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsink_winjoin_bch_06 (id integer,users string, amount double,time1 timestamp,id1 integer,users1 string, amount1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;updateMode&apos;:&apos;retract&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;streamsql.WINJOIN_SINK_006&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 insert into t_dbsink_winjoin_bch_04  SELECT t_kafkasource_winjoin_bch_01.id,t_kafkasource_winjoin_bch_01.users,t_kafkasource_winjoin_bch_01.amount,t_kafkasource_winjoin_bch_01.myrowtime,t_kafkasource_winjoin_bch_02.id,t_kafkasource_winjoin_bch_02.users,t_kafkasource_winjoin_bch_02.amount FROM t_kafkasource_winjoin_bch_01, t_kafkasource_winjoin_bch_02 WHERE t_kafkasource_winjoin_bch_01.id = t_kafkasource_winjoin_bch_02.id AND       t_kafkasource_winjoin_bch_01.myrowtime BETWEEN t_kafkasource_winjoin_bch_02.myrowtime1- INTERVAL &apos;4&apos; HOUR AND t_kafkasource_winjoin_bch_02.myrowtime1; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_dbsink_winjoin_bch_04  SELECT t_kafkasource_winjoin_bch_01.id,t_kafkasource_winjoin_bch_01.users,t_kafkasource_winjoin_bch_01.amount,t_kafkasource_winjoin_bch_01.myrowtime,t_kafkasource_winjoin_bch_02.id,t_kafkasource_winjoin_bch_02.users,t_kafkasource_winjoin_bch_02.amount
FROM t_kafkasource_winjoin_bch_01, t_kafkasource_winjoin_bch_02
WHERE t_kafkasource_winjoin_bch_01.id = t_kafkasource_winjoin_bch_02.id AND
      t_kafkasource_winjoin_bch_01.myrowtime BETWEEN t_kafkasource_winjoin_bch_02.myrowtime1- INTERVAL &apos;4&apos; HOUR AND t_kafkasource_winjoin_bch_02.myrowtime1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;14${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 alter stream t_kafkasource_winjoin_bch_02 set properties(&apos;group.id&apos;:&apos;13${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_winjoin_bch_02 set properties(&apos;group.id&apos;:&apos;15${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07  insert into t_dbsink_winjoin_bch_05 SELECT t_kafkasource_winjoin_bch_01.id,t_kafkasource_winjoin_bch_01.users,t_kafkasource_winjoin_bch_01.amount,t_kafkasource_winjoin_bch_01.myrowtime,t_kafkasource_winjoin_bch_02.id,t_kafkasource_winjoin_bch_02.users,t_kafkasource_winjoin_bch_02.amount FROM t_kafkasource_winjoin_bch_01, t_kafkasource_winjoin_bch_02 WHERE t_kafkasource_winjoin_bch_01.id = t_kafkasource_winjoin_bch_02.id AND       t_kafkasource_winjoin_bch_01.myrowtime = t_kafkasource_winjoin_bch_02.myrowtime1;   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_dbsink_winjoin_bch_05 SELECT t_kafkasource_winjoin_bch_01.id,t_kafkasource_winjoin_bch_01.users,t_kafkasource_winjoin_bch_01.amount,t_kafkasource_winjoin_bch_01.myrowtime,t_kafkasource_winjoin_bch_02.id,t_kafkasource_winjoin_bch_02.users,t_kafkasource_winjoin_bch_02.amount
FROM t_kafkasource_winjoin_bch_01, t_kafkasource_winjoin_bch_02
WHERE t_kafkasource_winjoin_bch_01.id = t_kafkasource_winjoin_bch_02.id AND
      t_kafkasource_winjoin_bch_01.myrowtime = t_kafkasource_winjoin_bch_02.myrowtime1;
  </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;12${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_winjoin_bch_01 set properties(&apos;group.id&apos;:&apos;16${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 alter stream t_kafkasource_winjoin_bch_02 set properties(&apos;group.id&apos;:&apos;13${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_winjoin_bch_02 set properties(&apos;group.id&apos;:&apos;17${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 insert into t_dbsink_winjoin_bch_06 SELECT t_kafkasource_winjoin_bch_01.id,t_kafkasource_winjoin_bch_01.users,t_kafkasource_winjoin_bch_01.amount,t_kafkasource_winjoin_bch_01.myrowtime,t_kafkasource_winjoin_bch_02.id,t_kafkasource_winjoin_bch_02.users,t_kafkasource_winjoin_bch_02.amount FROM t_kafkasource_winjoin_bch_01, t_kafkasource_winjoin_bch_02 WHERE t_kafkasource_winjoin_bch_01.id = t_kafkasource_winjoin_bch_02.id AND            t_kafkasource_winjoin_bch_02.myrowtime1 &gt;= t_kafkasource_winjoin_bch_01.myrowtime AND t_kafkasource_winjoin_bch_02.myrowtime1 &lt; t_kafkasource_winjoin_bch_01.myrowtime + INTERVAL &apos;10&apos; MINUTE;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_dbsink_winjoin_bch_06 SELECT t_kafkasource_winjoin_bch_01.id,t_kafkasource_winjoin_bch_01.users,t_kafkasource_winjoin_bch_01.amount,t_kafkasource_winjoin_bch_01.myrowtime,t_kafkasource_winjoin_bch_02.id,t_kafkasource_winjoin_bch_02.users,t_kafkasource_winjoin_bch_02.amount
FROM t_kafkasource_winjoin_bch_01, t_kafkasource_winjoin_bch_02
WHERE t_kafkasource_winjoin_bch_01.id = t_kafkasource_winjoin_bch_02.id AND
           t_kafkasource_winjoin_bch_02.myrowtime1 &gt;= t_kafkasource_winjoin_bch_01.myrowtime AND t_kafkasource_winjoin_bch_02.myrowtime1 &lt; t_kafkasource_winjoin_bch_01.myrowtime + INTERVAL &apos;10&apos; MINUTE;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 TC-between and kafka-01" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  streamsql.WINJOIN_SINK_004;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2050701477">9	ichen	76.0	2018-11-26 08:57:39.0	9	lichen	76.0</stringProp>
                  <stringProp name="-1150765416">45	chenhe	4567.0	2018-11-26 01:44:33.0	45	chenhe	4567.0</stringProp>
                  <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                  <stringProp name="-634720280">11	dog	76.0	2018-11-26 08:50:39.0	11	dog	76.0</stringProp>
                  <stringProp name="-323445493">23	lichen	4578.0	2018-11-25 09:43:25.0	23	lichen	4578.0</stringProp>
                  <stringProp name="-1217634013">32	dengchao	3456.0	2018-11-22 09:42:18.0	32	dengchao	3456.0</stringProp>
                  <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 TC-and kafka-02" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  streamsql.WINJOIN_SINK_006;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                  <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                  <stringProp name="-323445493">23	lichen	4578.0	2018-11-25 09:43:25.0	23	lichen	4578.0</stringProp>
                  <stringProp name="-1150765416">45	chenhe	4567.0	2018-11-26 01:44:33.0	45	chenhe	4567.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 TC-&gt;= and &lt;kafka-03" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from streamsql.WINJOIN_SINK_005;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                  <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                  <stringProp name="-323445493">23	lichen	4578.0	2018-11-25 09:43:25.0	23	lichen	4578.0</stringProp>
                  <stringProp name="-1150765416">45	chenhe	4567.0	2018-11-26 01:44:33.0	45	chenhe	4567.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_kafkasource_winjoin_bch_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_winjoin_bch_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_04;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_04;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_kafkasource_winjoin_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_winjoin_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_06;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_06;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop stream if exists t_dbsink_winjoin_bch_05;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsink_winjoin_bch_05;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_004;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_004;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_006;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_006;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="931 LDBX081-07 drop table if exists streamsql.WINJOIN_SINK_005;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.WINJOIN_SINK_005;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 Streaming SQL: Extra Build-in Functions" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -001" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_acos_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  drop stream if exists t_jdbcsink_acos_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  drop stream if exists t_jdbcsink_atan_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_atan_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  CREATE STREAM t_jdbcsource_acos_bch001 (id integer,data varchar(20), id1 decimal,name string,degree double,data1 varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_acos_bch001 (id integer,data varchar(20), id1 decimal,name string,degree double,data1 varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-acos-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select acos(id) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2042954132">3.141592653589793</stringProp>
                  <stringProp name="562128415">1.5707963267948966</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="562128415">1.5707963267948966</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-atan-002" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select atan(id) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-681648857">-0.7853981633974483</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="-1335120326">0.7853981633974483</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-space-003 " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select concat (&apos;a&apos;,space(id),&apos;b&apos;) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3105">ab</stringProp>
                  <stringProp name="3105">ab</stringProp>
                  <stringProp name="94307">a b</stringProp>
                  <stringProp name="3105">ab</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-positive-004" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select positive(id) from t_jdbcsource_acos_bch001;
  </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-log1p-005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select log1p(id) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="506745205">-Infinity</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="546540715">0.6931471805599453</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-ifnull-006" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select ifnull(data,67) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1569">12</stringProp>
                  <stringProp name="113">q</stringProp>
                  <stringProp name="1729">67</stringProp>
                  <stringProp name="1729">67</stringProp>
                  <stringProp name="1729">67</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-ifnull-007" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select ifnull(id,67) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="1729">67</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-find_in_set-008 " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select find_in_set(data,&apos;a,b,c,12,q&apos;) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="52">4</stringProp>
                  <stringProp name="53">5</stringProp>
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC- COALESCE-009" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  COALESCE(NULL, NULL, data)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1569">12</stringProp>
                  <stringProp name="113">q</stringProp>
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC- COALESCE-010" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  COALESCE(NULL, 1, null)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49">1</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="49">1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  atan2-011" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  atan2(id, id)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1875867404">-2.356194490192345</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="-1335120326">0.7853981633974483</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  NVL-012" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  NVL(data,-1)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1569">12</stringProp>
                  <stringProp name="113">q</stringProp>
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="1444">-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  NULLIF-013" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  NULLIF(ID,-1)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  cos-014" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  cos(degree)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2023648579">-7.320510347335801E-8</stringProp>
                  <stringProp name="-1882646143">0.4999999577350132</stringProp>
                  <stringProp name="1032808578">0.8660253915835878</stringProp>
                  <stringProp name="48563">1.0</stringProp>
                  <stringProp name="48563">1.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  cot-015" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  cot(degree)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2021801537">-7.320510347335821E-8</stringProp>
                  <stringProp name="-60373000">0.5773502041184245</stringProp>
                  <stringProp name="1855255657">1.732050709962077</stringProp>
                  <stringProp name="237817416">Infinity</stringProp>
                  <stringProp name="237817416">Infinity</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  nanvl-016" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT NANVL(CAST(&apos;NaN&apos; AS DOUBLE), 123)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="46792564">123.0</stringProp>
                  <stringProp name="46792564">123.0</stringProp>
                  <stringProp name="46792564">123.0</stringProp>
                  <stringProp name="46792564">123.0</stringProp>
                  <stringProp name="46792564">123.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  tanh-017" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  tanh(degree)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1939927109">0.9171523472945567</stringProp>
                  <stringProp name="1202483250">0.7807144544162621</stringProp>
                  <stringProp name="392799841">0.48047279692492</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  sinh-018" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT  sinh(degree)  from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="452672181">2.301299085991971</stringProp>
                  <stringProp name="1044867288">1.24936712862342</stringProp>
                  <stringProp name="944686370">0.5478535017117947</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  GET_JSON_OBJECT-019" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT GET_JSON_OBJECT(&apos;{&quot;a&quot;:&quot;id1&quot;}&apos;, &apos;$.a&apos;) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="104054">id1</stringProp>
                  <stringProp name="104054">id1</stringProp>
                  <stringProp name="104054">id1</stringProp>
                  <stringProp name="104054">id1</stringProp>
                  <stringProp name="104054">id1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-space-003 " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select concat (&apos;a&apos;,space(id),&apos;b&apos;) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3105">ab</stringProp>
                  <stringProp name="3105">ab</stringProp>
                  <stringProp name="94307">a b</stringProp>
                  <stringProp name="3105">ab</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-  JSON_PATH-020" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT JSON_PATH(&apos;[{&quot;snumber&quot;:&quot;13011560889&quot;, &quot;enddate&quot;:&quot;12321312321&quot;,&quot;codetag&quot;:&quot;1&quot;},{&quot;snumber&quot;:&quot;18600010011&quot;, &quot;enddate&quot;:&quot;212212222&quot;, &quot;codetag&quot;:&quot;0&quot;},{&quot;snumber&quot;:&quot;13011560889&quot;, &quot;enddate&quot;:&quot;212212222&quot;, &quot;codetag&quot;:&quot;2&quot;},{&quot;snumber&quot;:&quot;13011560889&quot;, &quot;enddate&quot;:&quot;212212222&quot;, &quot;codetag&quot;:&quot;3&quot;}]&apos;,&apos;$[?(@.snumber == &quot;13011560889&quot;)].codetag&apos;) FROM t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1730795558">[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="-1730795558">[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="-1730795558">[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="-1730795558">[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                  <stringProp name="-1730795558">[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-MAX-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select max(id) from t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49">1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_acos_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  drop stream if exists t_jdbcsink_atan_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_atan_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  drop stream if exists t_jdbcsink_acos_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_acos_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -002" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists   t_jdbcsource_multi_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists   t_jdbcsource_multi_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  CREATE STREAM t_jdbcsource_multi_bch001 (data1 double,time1 timestamp,data2 varchar(20))properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;datevarchartan&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_multi_bch001 (data1 double,time1 timestamp,data2 varchar(20))properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;datevarchartan&apos;);

 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-tan-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select tan(data1) from t_jdbcsource_multi_bch001;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="316794282">-6.405331196646276</stringProp>
                  <stringProp name="1182847992">0.320040389379563</stringProp>
                  <stringProp name="438086564">-1.995200412208242</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-substr-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select substr(data2,4) from t_jdbcsource_multi_bch001;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1650418">4fff</stringProp>
                  <stringProp name="3140753">fgb2</stringProp>
                  <stringProp name="56245">7jh</stringProp>
                  <stringProp name="110635828">tt444</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists   t_jdbcsource_multi_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists   t_jdbcsource_multi_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -003" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists   t_jdbcsource_time_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists   t_jdbcsource_time_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists t_jdbcsink_time_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_time_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  CREATE STREAM t_jdbcsource_time_bch001 (time1 string,name string,URL string,date1 date) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;time1&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_time_bch001 (time1 string,name string,URL string,date1 date) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;time1&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-unix_timestamp-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select unix_timestamp( date1, &apos;yyyy-mm-dd&apos;) from t_jdbcsource_time_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1854017517">1543161600</stringProp>
                  <stringProp name="-1413102619">1544630400</stringProp>
                  <stringProp name="2025939456">1543766400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-DATE_ADD-005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select DATE_ADD(date1,2)  from t_jdbcsource_time_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1194786347">2018-11-28</stringProp>
                  <stringProp name="1194816104">2018-12-15</stringProp>
                  <stringProp name="-238552207">2018-12-5</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-date_sub-006" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select date_sub(date1,2)  from t_jdbcsource_time_bch001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1194786343">2018-11-24</stringProp>
                  <stringProp name="1194816100">2018-12-11</stringProp>
                  <stringProp name="-238552211">2018-12-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-soundex-007" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select name  from t_jdbcsource_time_bch001 WHERE soundex(name) = soundex(&apos;Y San&apos;) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">没有结果</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="83229560">Y Sam</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-parse_url-008" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select parse_url(URL,&apos;HOST&apos;)  from t_jdbcsource_time_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">没有结果</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985010934">github.com</stringProp>
                  <stringProp name="-1436124299">blog.csdn.net</stringProp>
                  <stringProp name="-1712019393">www.w3school.com.cn</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-parse_url-009" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select parse_url(URL,&apos;PATH&apos;)  from t_jdbcsource_time_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">没有结果</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1437997532">/datapps/istream/issues/655</stringProp>
                  <stringProp name="299213423">/burpee/article/details/55517434</stringProp>
                  <stringProp name="-678345067">/php/func_string_md5.asp</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-md5-010" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select md5(name)  from t_jdbcsource_time_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">没有结果</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2080616954">ab4a6d4a532c9e6841f2050e6f91a7dc</stringProp>
                  <stringProp name="1301382835">5eea2963c04eb1dfef4c3151c291fb29</stringProp>
                  <stringProp name="398514662">5466ee572bcbc75830d044e66ab429bc</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-add_months-035" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select add_months( date1 ,1 ) from t_jdbcsource_time_bch001; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">没有结果</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="318589466">2018-12-26 00:00:00.0</stringProp>
                  <stringProp name="-1769345669">2019-01-13 00:00:00.0</stringProp>
                  <stringProp name="-1475942662">2019-01-03 00:00:00.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-weekofyear-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select weekofyear(date1) from t_jdbcsource_time_bch001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1668">48</stringProp>
                  <stringProp name="1691">50</stringProp>
                  <stringProp name="1669">49</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists   t_jdbcsource_time_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists   t_jdbcsource_time_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists t_jdbcsink_time_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_time_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -004" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_datediff_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_datediff_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 CREATE STREAM t_jdbcsource_datediff_bch001 (time1 string,time2 string,time3 date,time4 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;datediff&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_datediff_bch001 (time1 string,time2 string,time3 date,time4 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;datediff&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-datediff-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select DATEDIFF(time3,DATE &apos;2019-01-08&apos;) from t_jdbcsource_datediff_bch001;

 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">DB支持date类型</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="48">0</stringProp>
                  <stringProp name="1571">14</stringProp>
                  <stringProp name="51">3</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-next_day-002" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select next_day(time4,&apos;TU&apos;) from t_jdbcsource_datediff_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-402472360">2019-01-29 19:57:53</stringProp>
                  <stringProp name="-610885919">2019-02-05 19:57:59</stringProp>
                  <stringProp name="-2114404642">2019-01-15 19:58:02</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-next_day-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select next_day(time3,&apos;TU&apos;) from t_jdbcsource_datediff_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1035297847">2019-01-15 00:00:00</stringProp>
                  <stringProp name="-1547707532">2019-01-29 00:00:00</stringProp>
                  <stringProp name="1035297847">2019-01-15 00:00:00</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-months_between-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select months_between(time3,DATE &apos;2019-01-08&apos;) from t_jdbcsource_datediff_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="45747709">0.0E0</stringProp>
                  <stringProp name="-291909665">0.4516129E0</stringProp>
                  <stringProp name="-1423068008">0.09677419E0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-last_day-004" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select last_day( time3) from t_jdbcsource_datediff_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1772550851">2019-01-31 00:00:00</stringProp>
                  <stringProp name="-1772550851">2019-01-31 00:00:00</stringProp>
                  <stringProp name="-1772550851">2019-01-31 00:00:00</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-last_day-005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select last_day( time4) from t_jdbcsource_datediff_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-627315679">2019-01-31 19:57:53</stringProp>
                  <stringProp name="-499361856">2019-02-28 19:57:59</stringProp>
                  <stringProp name="-627286044">2019-01-31 19:58:02</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_datediff_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_datediff_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -005" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_ucase_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 CREATE STREAM t_jdbcsource_ucase_bch001 (name string,data1 string,data2 string,data3 string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;ucase&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_ucase_bch001 (name string,data1 string,data2 string,data3 string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;ucase&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-ucase-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select ucase(name) from t_jdbcsource_ucase_bch001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-178238619">EDD33FFDD</stringProp>
                  <stringProp name="-1141804535">6TGGGDD</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-substring_index-002" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select substring_index(name, &apos;f&apos; , -1) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2176">DD</stringProp>
                  <stringProp name="-1141803511">6TGGGdd</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-split-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT split(&apos;oneAtwoBthreeC&apos;, &apos;[ABC]&apos;) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="36593373">ARRAY[&apos;one&apos;,&apos;two&apos;,&apos;three&apos;]</stringProp>
                  <stringProp name="36593373">ARRAY[&apos;one&apos;,&apos;two&apos;,&apos;three&apos;]</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-ascii-005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select ascii(name) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="48626">101</stringProp>
                  <stringProp name="1695">54</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-base64-006" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select base64(name) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2046507002">ZWRkMzNmZkRE</stringProp>
                  <stringProp name="-44101056">NlRHR0dkZA==</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-bit_length-007" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select bit_length(name) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1755">72</stringProp>
                  <stringProp name="1697">56</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-rlike-008" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select rlike(name,&apos;%dd33%&apos;) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="97196323">false</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-rlike-009" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select rlike(name,&apos;%dd33%&apos;) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-lcase-010" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select lcase(name) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-length-011" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select length(name) from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-levenshtein-012" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select levenshtein(name,&apos;33ffdd&apos;)from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-locate-013" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select locate(&apos;d&apos;,name)from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-initcap-014" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select initcap(name)from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-rpad-015" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select rpad(name,11,&apos;0&apos;)from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-SIZE-018" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT SIZE(ARRAY[name, &apos;d&apos;, &apos;c&apos;, &apos;a&apos;])from t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_ucase_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_ucase_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -006" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_chr_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_chr_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  CREATE STREAM t_jdbcsource_chr_bch001 (data bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;chr&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_chr_bch001 (data bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;chr&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-chr-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select chr(data) from t_jdbcsource_chr_bch001;
 

 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="65">A</stringProp>
                  <stringProp name="97">a</stringProp>
                  <stringProp name="37">%</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-cbrt-002" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select cbrt(data) from t_jdbcsource_chr_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="890704625">4.020725758589058</stringProp>
                  <stringProp name="-552093555">4.594700892207039</stringProp>
                  <stringProp name="-939886750">6.349604207872798</stringProp>
                  <stringProp name="-779324524">6.431227591379625</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="385111422">-2.080083823051904</stringProp>
                  <stringProp name="-1167860390">3.3322218516459534</stringProp>
                  <stringProp name="-15333422">7.368062997280773</stringProp>
                  <stringProp name="1390119">-2.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_chr_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_chr_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -007" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_round_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_round_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 CREATE STREAM t_jdbcsource_round_bch001 (data double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;round&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_round_bch001 (data double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;round&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-round-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select round(data,1) from t_jdbcsource_round_bch001;

 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1509284">12.1</stringProp>
                  <stringProp name="1389158">-1.0</stringProp>
                  <stringProp name="52414">5.7</stringProp>
                  <stringProp name="48568">1.5</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-round-002" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select round(data,-1) from t_jdbcsource_round_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1507361">10.0</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                  <stringProp name="1507361">10.0</stringProp>
                  <stringProp name="47602">0.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-regexp_extract-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT REGEXP_EXTRACT(&apos;100-200&apos;, &apos;(\d+)-(\d+)&apos;, 1)  from t_jdbcsource_round_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="48625">100</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-rint-004" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select rint(data) from t_jdbcsource_round_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1509283">12.0</stringProp>
                  <stringProp name="1389158">-1.0</stringProp>
                  <stringProp name="53368">6.0</stringProp>
                  <stringProp name="49524">2.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-positive-005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select positive(data) from t_jdbcsource_round_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="46787830">12.09</stringProp>
                  <stringProp name="43034442">-0.98</stringProp>
                  <stringProp name="50370654">5.678</stringProp>
                  <stringProp name="48568">1.5</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_round_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_round_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -008" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_regexp_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_regexp_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 CREATE STREAM t_jdbcsource_regexp_bch001 (data string,data1 int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;regexp_extract&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_regexp_bch001 (data string,data1 int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;regexp_extract&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-regexp_extract-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select regexp_extract(data,&apos;([0-7]+)&apos;,0) from t_jdbcsource_regexp_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1962560493">233334577</stringProp>
                  <stringProp name="48690">123</stringProp>
                  <stringProp name="51669">456</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-repeat-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select repeat(data,2) from t_jdbcsource_regexp_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1520297312">233334577233334577</stringProp>
                  <stringProp name="1450572480">123123</stringProp>
                  <stringProp name="1824172166">45684568</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-replace-004" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select replace(data,&apos;23&apos;,&apos;a&apos;) from t_jdbcsource_regexp_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1075713523">a3334577</stringProp>
                  <stringProp name="1616">1a</stringProp>
                  <stringProp name="1601795">4568</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-reverse-005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select reverse(data) from t_jdbcsource_regexp_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2069980499">775433332</stringProp>
                  <stringProp name="50610">321</stringProp>
                  <stringProp name="1721885">8654</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_regexp_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_regexp_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -009" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_pow_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 CREATE STREAM t_jdbcsource_pow_bch001 (id int,id1 string,id2 double,id3 string,time1 timestamp,id4 bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;pow&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_pow_bch001 (id int,id1 string,id2 double,id3 string,time1 timestamp,id4 bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;pow&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-to_date" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select to_date(time1,&apos;yyyy-mm-dd hh24:mi:ss&apos;) from t_jdbcsource_pow_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">db支持date、timestamp</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="318589466">2018-12-26 00:00:00.0</stringProp>
                  <stringProp name="318589466">2018-12-26 00:00:00.0</stringProp>
                  <stringProp name="318589466">2018-12-26 00:00:00.0</stringProp>
                  <stringProp name="318589466">2018-12-26 00:00:00.0</stringProp>
                  <stringProp name="318589466">2018-12-26 00:00:00.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-from_utc_timestamp-011" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT from_utc_timestamp(time1,&apos;PST&apos;)from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1103804907">2018-12-26 05:08:44</stringProp>
                  <stringProp name="-1103804906">2018-12-26 05:08:45</stringProp>
                  <stringProp name="-1103804905">2018-12-26 05:08:46</stringProp>
                  <stringProp name="-1103804904">2018-12-26 05:08:47</stringProp>
                  <stringProp name="-1103804880">2018-12-26 05:08:50</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-pow-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select pow(id,2) from t_jdbcsource_pow_bch001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="48563">1.0</stringProp>
                  <stringProp name="51446">4.0</stringProp>
                  <stringProp name="56251">9.0</stringProp>
                  <stringProp name="1513127">16.0</stringProp>
                  <stringProp name="1541957">25.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-printf-005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select printf(&apos;%c\n&apos;,id) from t_jdbcsource_pow_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2962">\n</stringProp>
                  <stringProp name="2962">\n</stringProp>
                  <stringProp name="2962">\n</stringProp>
                  <stringProp name="2962">\n</stringProp>
                  <stringProp name="2962">\n</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-pmod-006" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select pmod(id,2) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49">1</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="49">1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-nvl2-009" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select nvl2(id is not null,7,9) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="55">7</stringProp>
                  <stringProp name="55">7</stringProp>
                  <stringProp name="55">7</stringProp>
                  <stringProp name="55">7</stringProp>
                  <stringProp name="55">7</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-nvl2-010" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select nvl2(id is not null,&apos;q&apos;,9) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="113">q</stringProp>
                  <stringProp name="113">q</stringProp>
                  <stringProp name="113">q</stringProp>
                  <stringProp name="113">q</stringProp>
                  <stringProp name="113">q</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-hex-012" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select hex(id) from t_jdbcsource_pow_bch001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49">1</stringProp>
                  <stringProp name="50">2</stringProp>
                  <stringProp name="51">3</stringProp>
                  <stringProp name="52">4</stringProp>
                  <stringProp name="53">5</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-hex-013" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select hex(id1) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1632">33</stringProp>
                  <stringProp name="1635">36</stringProp>
                  <stringProp name="1630">31</stringProp>
                  <stringProp name="1633">34</stringProp>
                  <stringProp name="1575754">3937</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-format_number-015" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select format_number(id2,1) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="50485">3.0</stringProp>
                  <stringProp name="49531">2.7</stringProp>
                  <stringProp name="50491">3.6</stringProp>
                  <stringProp name="53368">6.0</stringProp>
                  <stringProp name="51452">4.6</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-format_number-016" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select format_number(id,1) from t_jdbcsource_pow_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">结果应为小数，而不是整数</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="48563">1.0</stringProp>
                  <stringProp name="49524">2.0</stringProp>
                  <stringProp name="50485">3.0</stringProp>
                  <stringProp name="51446">4.0</stringProp>
                  <stringProp name="52407">5.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-FROM_UNIXTIME-017" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT FROM_UNIXTIME(id4,&apos;yyyy-mm-dd hh:mm:ss&apos;)from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-log1p-018" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select log1p(id1) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="804876363">1.3862943611198906</stringProp>
                  <stringProp name="607024338">1.9459101490553132</stringProp>
                  <stringProp name="546540715">0.6931471805599453</stringProp>
                  <stringProp name="-150102157">1.6094379124341003</stringProp>
                  <stringProp name="1539292019">4.584967478670572</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-negative-019" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select negative(id) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="1445">-2</stringProp>
                  <stringProp name="1446">-3</stringProp>
                  <stringProp name="1447">-4</stringProp>
                  <stringProp name="1448">-5</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-negative-020" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select negative(id2) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="43123533">-3.05</stringProp>
                  <stringProp name="43093931">-2.68</stringProp>
                  <stringProp name="1391086">-3.6</stringProp>
                  <stringProp name="1393963">-6.0</stringProp>
                  <stringProp name="1337757965">-4.576</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-isnan-022" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select isnan(id2) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="97196323">false</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-factorial-024" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select factorial(id) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49">1</stringProp>
                  <stringProp name="50">2</stringProp>
                  <stringProp name="54">6</stringProp>
                  <stringProp name="1602">24</stringProp>
                  <stringProp name="48687">120</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-expm1-025" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select expm1(id) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="718521709">1.718281828459045</stringProp>
                  <stringProp name="90426171">6.38905609893065</stringProp>
                  <stringProp name="-1217175855">19.085536923187668</stringProp>
                  <stringProp name="-688306100">53.598150033144236</stringProp>
                  <stringProp name="-981447428">147.4131591025766</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-expm1-026" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select expm1(id2) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-642875802">20.11534442254061</stringProp>
                  <stringProp name="1305299402">13.585093295880792</stringProp>
                  <stringProp name="-2026326290">35.59823444367799</stringProp>
                  <stringProp name="-1448542762">402.4287934927351</stringProp>
                  <stringProp name="-1469995186">96.12511570626519</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-conv-027" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select conv(id1,16,2) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1568">11</stringProp>
                  <stringProp name="48656">110</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="569794625">10010111</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-cosh-028" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select cosh(id) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-489484868">1.543080634815244</stringProp>
                  <stringProp name="452469394">3.7621956910836314</stringProp>
                  <stringProp name="1188643621">10.067661995777765</stringProp>
                  <stringProp name="752569466">27.308232836016487</stringProp>
                  <stringProp name="1061128751">74.20994852478785</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-cosh-029" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select cosh(id2) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1924629435">10.581351673465875</stringProp>
                  <stringProp name="-340856264">7.326828225017535</stringProp>
                  <stringProp name="-145785013">18.31277908306264</stringProp>
                  <stringProp name="-759384771">201.7156361224559</stringProp>
                  <stringProp name="1505687339">48.567705852147725</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-hypot-030" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select hypot(id,id) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-897360035">1.4142135623730951</stringProp>
                  <stringProp name="-1423327800">2.8284271247461903</stringProp>
                  <stringProp name="1299902319">4.242640687119285</stringProp>
                  <stringProp name="-1783874019">5.656854249492381</stringProp>
                  <stringProp name="-2000383424">7.0710678118654755</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-hypot-031" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select hypot(id1,id1) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1299902319">4.242640687119285</stringProp>
                  <stringProp name="1938780153">8.48528137423857</stringProp>
                  <stringProp name="-897360035">1.4142135623730951</stringProp>
                  <stringProp name="-1783874019">5.656854249492381</stringProp>
                  <stringProp name="-1319647238">137.17871555019022</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-hypot-032" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select hypot(id2,id2) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1842172519">4.313351365237939</stringProp>
                  <stringProp name="-1859126337">3.790092347159895</stringProp>
                  <stringProp name="744923057">5.091168824543142</stringProp>
                  <stringProp name="1938780153">8.48528137423857</stringProp>
                  <stringProp name="-446231230">6.471441261419282</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-to_char-033" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> select to_char(time1,&apos;yyyy-mm-dd hh24:mi:ss&apos;) from t_jdbcsource_pow_bch001;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1136001934">2018-12-26 13:08:44</stringProp>
                  <stringProp name="-1136001933">2018-12-26 13:08:45</stringProp>
                  <stringProp name="-1136001932">2018-12-26 13:08:46</stringProp>
                  <stringProp name="-1136001931">2018-12-26 13:08:47</stringProp>
                  <stringProp name="-1136001907">2018-12-26 13:08:50</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-bround-036" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select bround(id2,0) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="50485">3.0</stringProp>
                  <stringProp name="50485">3.0</stringProp>
                  <stringProp name="51446">4.0</stringProp>
                  <stringProp name="53368">6.0</stringProp>
                  <stringProp name="52407">5.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-assert_true-037" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select assert_true(id&lt;10) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                  <stringProp name="3392903">null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-IF-038" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT IF(id &gt;10, &apos;a&apos;, &apos;b&apos;) FROM t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="98">b</stringProp>
                  <stringProp name="98">b</stringProp>
                  <stringProp name="98">b</stringProp>
                  <stringProp name="98">b</stringProp>
                  <stringProp name="98">b</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-PRINTF-039" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT PRINTF(&apos;Hello World %d %s&apos;, 100, &apos;days&apos;) FROM  t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-910030014">Hello World 100 days</stringProp>
                  <stringProp name="-910030014">Hello World 100 days</stringProp>
                  <stringProp name="-910030014">Hello World 100 days</stringProp>
                  <stringProp name="-910030014">Hello World 100 days</stringProp>
                  <stringProp name="-910030014">Hello World 100 days</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-to_timestamp-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select to_timestamp(time1,&apos;yyyy-mm-dd hh24:mi:ss&apos;) from t_jdbcsource_pow_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776163916">2018-12-26 13:08:44.0</stringProp>
                  <stringProp name="-776162955">2018-12-26 13:08:45.0</stringProp>
                  <stringProp name="-776161994">2018-12-26 13:08:46.0</stringProp>
                  <stringProp name="-776161033">2018-12-26 13:08:47.0</stringProp>
                  <stringProp name="-776137969">2018-12-26 13:08:50.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-sha-040" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT sha( id1 ) FROM t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1367922034">77de68daecd823babbb58edb1c8e14d7106e83bb</stringProp>
                  <stringProp name="1133189131">c1dfd96eea8cc2b62785275bca38ac261256e278</stringProp>
                  <stringProp name="825555448">356a192b7913b04c54574d18c28d46e6395428ab</stringProp>
                  <stringProp name="-1655134750">1b6453892473a467d07372d45eb05abc2031647a</stringProp>
                  <stringProp name="795173590">812ed4562d3211363a7b813aa9cd2cf042b63bb2</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-sha1-041" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT sha1( id1 ) FROM t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1367922034">77de68daecd823babbb58edb1c8e14d7106e83bb</stringProp>
                  <stringProp name="1133189131">c1dfd96eea8cc2b62785275bca38ac261256e278</stringProp>
                  <stringProp name="825555448">356a192b7913b04c54574d18c28d46e6395428ab</stringProp>
                  <stringProp name="-1655134750">1b6453892473a467d07372d45eb05abc2031647a</stringProp>
                  <stringProp name="795173590">812ed4562d3211363a7b813aa9cd2cf042b63bb2</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-sha2-042" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT sha2( id1,256 ) FROM t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1458308250">4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce</stringProp>
                  <stringProp name="1994789650">e7f6c011776e8db7cd330b54174fd76f7d0216b612387a5ffcfb81e6f0919683</stringProp>
                  <stringProp name="1726220576">6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b</stringProp>
                  <stringProp name="-326471099">4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a</stringProp>
                  <stringProp name="1690707262">d6d824abba4afde81129c71dea75b8100e96338da5f416d2f69088f1960cb091</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-shiftleft-043" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT shiftleft( id,2 ) FROM t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="52">4</stringProp>
                  <stringProp name="56">8</stringProp>
                  <stringProp name="1569">12</stringProp>
                  <stringProp name="1573">16</stringProp>
                  <stringProp name="1598">20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-REGEXP_REPLACE-044" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT REGEXP_REPLACE(&apos;6-100&apos;, &apos;(\\d+)&apos;, id1) FROM t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51259354">6-100</stringProp>
                  <stringProp name="51259354">6-100</stringProp>
                  <stringProp name="51259354">6-100</stringProp>
                  <stringProp name="51259354">6-100</stringProp>
                  <stringProp name="51259354">6-100</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -TC-day-005E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select day(time1) from t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 drop stream if exists  t_jdbcsource_pow_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_pow_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -010" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 -  CREATE STREAM t_jdbcsink_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch001 (tABS int,tASIN double,tBIN string,tDAYOFMONTH bigint,tDAYOFYEAR bigint, tELTt string,tFLOOR decimal, tINITCAP string,tIFNULL int,tISNOTNULL boolean,tMINUTE bigint,tMONTH bigint,tPMOD double, tYEAR bigint ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function&apos;);


 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  insert into t_jdbcsink_last_bch001  select ABS(-1),ASIN(0),BIN(13),DAYOFMONTH(DATE &apos;2009-07-30&apos;),DAYOFYEAR(DATE &apos;2016-04-09&apos;), ELT(1, &apos;scala&apos;, &apos;java&apos;),FLOOR(-0.1), INITCAP(&apos;LINKOOPDB&apos;),IFNULL(NULL, 1),ISNOTNULL(123),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MONTH(DATE &apos;1994-09-27&apos;),PMOD(-10, 3), YEAR(DATE &apos;1994-09-27&apos;)from t_jdbcsource_last_bch001;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch001  select ABS(-1),ASIN(0),BIN(13),DAYOFMONTH(DATE &apos;2009-07-30&apos;),DAYOFYEAR(DATE &apos;2016-04-09&apos;), ELT(1, &apos;scala&apos;, &apos;java&apos;),FLOOR(-0.1), INITCAP(&apos;LINKOOPDB&apos;),IFNULL(NULL, 1),ISNOTNULL(123),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MONTH(DATE &apos;1994-09-27&apos;),PMOD(-10, 3), YEAR(DATE &apos;1994-09-27&apos;)from t_jdbcsource_last_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  TC-select * from last_function;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="398616151">1	0.0	1101	30	100	scala	-1	Linkoopdb	1	true	14	9	2.0	1994</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -011" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch002;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch002;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 -  CREATE STREAM t_jdbcsink_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch002 (tEXP double,tCONCAT string,tCEIL decimal,tsecond bigint ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function1&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function1;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 insert into t_jdbcsink_last_bch002  select EXP(0), CONCAT(&apos;LINKoop&apos;, &apos;DB&apos;), CEIL(-0.1),SECOND(TIMESTAMP &apos;1994-09-27 13:14:15&apos;)  from t_jdbcsource_last_bch001;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch002  select EXP(0), CONCAT(&apos;LINKoop&apos;, &apos;DB&apos;), CEIL(-0.1),SECOND(TIMESTAMP &apos;1994-09-27 13:14:15&apos;)  from t_jdbcsource_last_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  TC-select * from last_function1;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1053021016">1.0	LINKoopDB	0	15</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch002;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch002;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -012" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch003;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch003;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 -  CREATE STREAM t_jdbcsink_last_bch003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch003 (tDATE_FORMAT string,tDEGREES double,tLN double,tSQRT double ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function2&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function2;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 insert into t_jdbcsink_last_bch003  select cast(DATE_FORMAT(TIMESTAMP &apos;2017-09-01 21:38:05&apos;,&apos;%Y, %d %M&apos;) as varchar), DEGREES(3.141592653589793),LN(1),SQRT(4) from t_jdbcsource_last_bch001;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch003  select cast(DATE_FORMAT(TIMESTAMP &apos;2017-09-01 21:38:05&apos;,&apos;%Y, %d %M&apos;) as varchar), DEGREES(3.141592653589793),LN(1),SQRT(4) from t_jdbcsource_last_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  TC-select * from last_function2;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-665689663">2017, 02 September	180.0	0.0	2.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch003;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch003;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -013" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch004;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch004</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsink_last_bch004" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch004 (data1 string, tCHAR_LENGTH int,tCHARACTER_LENGTH int,tDATE date,tTIME time,tTIMESTAMP timestamp,tQUARTER bigint,tWEEK int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function3&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function3;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 insert into t_jdbcsink_last_bch004  select &apos;F&apos; || &apos;U&apos;, CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),DATE &apos;2018-09-10&apos;,TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;,QUARTER(DATE &apos;1994-09-27&apos;),WEEK(DATE &apos;1994-09-27&apos;) from t_jdbcsource_last_bch001;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch004  select &apos;F&apos; || &apos;U&apos;, CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),DATE &apos;2018-09-10&apos;,TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;,QUARTER(DATE &apos;1994-09-27&apos;),WEEK(DATE &apos;1994-09-27&apos;) from t_jdbcsource_last_bch001;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  TC-select * from last_function3;E" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">WEEK与实际结果相差一周</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1890535433">FU	11	11	2018-09-10	23:09:06	2018-09-10 10:09:08.0	3	39</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_last_bch001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch004;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch004</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -014" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch005;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch005;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_last_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsink_last_bch005" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch005 (tDISTINCT Boolean,tnotDISTINCTtDATE Boolean,tboolean boolean,tboolean1 boolean,tin boolean,tnotin boolean,tor boolean,tisnot boolean,tand boolean,tunknown boolean,tSUBSTRING string,tNULLIF int,te double,tSIGN int,tceiling decimal,tRAND double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;last_function4&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from last_function4;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from last_function4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 insert into t_jdbcsink_last_bch005  select 4 IS DISTINCT FROM 5, 4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL, 1 in (1,2,3,4),12 not in (1,2,3,4),true or false,false is not true,true and false,true IS UNKNOWN, SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5), NULLIF(5, 5) ,e(), SIGN(-8), ceiling(-2.45),RAND (2) from t_jdbcsource_last_bch001;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch005  select 4 IS DISTINCT FROM 5, 4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL, 1 in (1,2,3,4),12 not in (1,2,3,4),true or false,false is not true,true and false,true IS UNKNOWN, SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5), NULLIF(5, 5) ,e(), SIGN(-8), ceiling(-2.45),RAND (2) from t_jdbcsource_last_bch001;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 TC -select * from last_function4;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from last_function4;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1393010329">true	true	false	true	true	true	true	true	false	false	ghdddrrty55	null	2.718281828459045	-1	-2	1.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch005;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch005;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_last_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -015" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch006;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch006;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_last_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsink_last_bch006" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch006 (tCURRENT_DATE date,tCURRENT_TIME time,tCURRENT_TIMESTAMP timestamp,tLOCALTIME time,tLOCALTIMESTAMP timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;time_function&apos;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_last_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_last_bch001 (id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;acos_id&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from time_function;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from time_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 insert into t_jdbcsink_last_bch006  select CURRENT_DATE,CURRENT_TIME,CURRENT_TIMESTAMP ,LOCALTIME,LOCALTIMESTAMP from t_jdbcsource_last_bch001;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch006  select CURRENT_DATE,CURRENT_TIME,CURRENT_TIMESTAMP ,LOCALTIME,LOCALTIMESTAMP from t_jdbcsource_last_bch001;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  TC-select * from time_function;E" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from time_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">获取当前时间，断言无法写；LOCALTIMESTAMP时间与实际时间相差8个小时</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1393010329">true	true	false	true	true	true	true	true	false	false	ghdddrrty55	null	2.718281828459045	-1	-2	1.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch006;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch006;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_last_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_last_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 SQL501-02 -016" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch007;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch007;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_case_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_case_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch008;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch008;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsink_last_bch007" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch007 (tavg int,tcount bigint,tmax int,tmin int,tsum int,tSTDDEV_POP int,tVAR_POP int,tVAR_SAMP int,tSTDDEV_SAMP int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;casewhensink_function&apos;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsink_last_bch008" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_last_bch008 (sex string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;batchSize&apos;: &apos;1&apos;,&apos;tableName&apos;: &apos;casewhensink&apos;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 - CREATE STREAM t_jdbcsource_case_bch001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_case_bch001 (sex string,id int)properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;casewhen_function&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from casewhensink_function;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from casewhensink_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -delete from casewhensink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from casewhensink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 insert into t_jdbcsink_last_bch008 select CASE sex  WHEN &apos;1&apos; THEN &apos;男&apos; WHEN &apos;2&apos; THEN &apos;女&apos;        ELSE &apos;其他&apos; END from t_jdbcsource_case_bch001;     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch008 select CASE sex 
WHEN &apos;1&apos; THEN &apos;男&apos;
WHEN &apos;2&apos; THEN &apos;女&apos;       
ELSE &apos;其他&apos; END from t_jdbcsource_case_bch001;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02 insert into t_jdbcsink_last_bch007 select avg(id), count(id),max(id),min(id),sum(id),STDDEV_POP(id),VAR_POP(id),VAR_SAMP(id),STDDEV_SAMP(id) from t_jdbcsource_case_bch001;   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> insert into t_jdbcsink_last_bch007 select avg(id), count(id),max(id),min(id),sum(id),STDDEV_POP(id),VAR_POP(id),VAR_SAMP(id),STDDEV_SAMP(id) from t_jdbcsource_case_bch001;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  TC-select * from casewhensink_function;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from casewhensink_function;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1800977959">3	4	5	2	14	1	1	1	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  TC -select * from casewhensink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from casewhensink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="30007">男</stringProp>
                  <stringProp name="22899">女</stringProp>
                  <stringProp name="22899">女</stringProp>
                  <stringProp name="30007">男</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists  t_jdbcsink_last_bch007;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_last_bch007;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsource_case_bch001;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsource_case_bch001</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 SQL501-02  -drop stream if exists t_jdbcsink_last_bch008;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_last_bch008;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1075 DISQL-CONNECTOR-130-2 部分connector增加ARRAY类型支持" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1075-float , string , varchar(20) , boolean , double    kafkasource KAFKASINK" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasink_array_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasink_array_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_kafkasource_array_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_kafkasource_array_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create stream t_kafkasource_array_02( tfloat float ARRAY, tstring string ARRAY, tvarchar varchar(20) ARRAY, tboolean boolean ARRAY, tdouble double ARRAY ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;array0118&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;array_006&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_kafkasource_array_02(
tfloat float ARRAY,
tstring string ARRAY,
tvarchar varchar(20) ARRAY,
tboolean boolean ARRAY,
tdouble double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;array0118&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;array_006&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 alter stream t_kafkasource_array_02 set properties(&apos;group.id&apos;:&apos;10${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_array_02 set properties(&apos;group.id&apos;:&apos;10${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create stream t_kafkasink_array_02( tfloat float ARRAY, tstring string ARRAY, tvarchar varchar(20) ARRAY, tboolean boolean ARRAY, tdouble double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;array0118_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;array0118_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_kafkasink_array_02(
tfloat float ARRAY,
tstring string ARRAY,
tvarchar varchar(20) ARRAY,
tboolean boolean ARRAY,
tdouble double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;array0118_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;array0118_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 insert into t_kafkasink_array_02 select * from t_kafkasource_array_02;                      " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_kafkasink_array_02 select * from t_kafkasource_array_02;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">50000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasink_array_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasink_array_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_kafkasource_array_02;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_kafkasource_array_02;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1075-bigint , smallint , date , timestamp , DECIMAL    dbsource KAFKASINK" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasink_array_04;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasink_array_04;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_dbsource_array_bch_09;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_dbsource_array_bch_09;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop table if exists STREAMSQL.istream_array_0121;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists STREAMSQL.istream_array_0121;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create table  STREAMSQL.istream_array_0121(tbigint bigint ARRAY, tsmallint smallint ARRAY, tdate date ARRAY, ttimestamp timestamp ARRAY, tdecimal decimal ARRAY);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  STREAMSQL.istream_array_0121(tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 insert into  streamsql.istream_array_0121 values((array[9223372036854775807,9223372036854775807]),(array[32767,32767]),(array[&apos;9999-12-31&apos;,&apos;9999-12-31&apos;]),(array[&apos;2019-12-31 23:59:59&apos;,&apos;2018-12-31 23:59:59&apos;]),(array[1000.333,1000.4444]));" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into  streamsql.istream_array_0121 values((array[9223372036854775807,9223372036854775807]),(array[32767,32767]),(array[&apos;9999-12-31&apos;,&apos;9999-12-31&apos;]),(array[&apos;2019-12-31 23:59:59&apos;,&apos;2018-12-31 23:59:59&apos;]),(array[1000.333,1000.4444]));</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 CREATE STREAM t_dbsource_array_bch_09 (tbigint bigint ARRAY, tsmallint smallint ARRAY, tdate date ARRAY, ttimestamp timestamp ARRAY, tdecimal decimal ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;,&apos;username&apos;: &apos;admin&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;STREAMSQL.istream_array_0121&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_dbsource_array_bch_09 (tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;,&apos;username&apos;: &apos;admin&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;STREAMSQL.istream_array_0121&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create stream t_kafkasink_array_04( tbigint bigint ARRAY, tsmallint smallint ARRAY, tdate date ARRAY, ttimestamp timestamp ARRAY, tdecimal decimal ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;arraydb_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;array0119_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_kafkasink_array_04(
tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;arraydb_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;array0119_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 insert into t_kafkasink_array_04 select * from t_dbsource_array_bch_09;                     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_kafkasink_array_04 select * from t_dbsource_array_bch_09;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasink_array_04;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasink_array_04;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_dbsource_array_bch_09;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_dbsource_array_bch_09;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop table if exists STREAMSQL.istream_array_0121;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists STREAMSQL.istream_array_0121;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1075-bigint , smallint , date , timestamp , DECIMAL    kafkasource KAFKASINK" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasource_array_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_array_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_kafkasink_array_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_kafkasink_array_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create stream t_kafkasource_array_03( tbigint bigint ARRAY, tsmallint smallint ARRAY, tdate date ARRAY, ttimestamp timestamp ARRAY, tdecimal decimal ARRAY ) properties( &apos;type&apos;:&apos;source&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;array0123&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;array0121&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_kafkasource_array_03(
tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;array0123&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;array0121&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 alter stream t_kafkasource_array_03 set properties(&apos;group.id&apos;:&apos;11${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_array_03 set properties(&apos;group.id&apos;:&apos;11${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 create stream t_kafkasink_array_03( tbigint bigint ARRAY, tsmallint smallint ARRAY, tdate date ARRAY, ttimestamp timestamp ARRAY, tdecimal decimal ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;array0119_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;array0119_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream t_kafkasink_array_03(
tbigint bigint ARRAY,
tsmallint smallint ARRAY,
tdate date ARRAY,
ttimestamp timestamp ARRAY,
tdecimal decimal ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;array0119_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;array0119_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 insert into t_kafkasink_array_03 select * from t_kafkasource_array_03;                      " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_kafkasink_array_03 select * from t_kafkasource_array_03;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">50000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists t_kafkasource_array_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_array_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1075 DISQL-CONNECTOR-130-2 drop stream if exists  t_kafkasink_array_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_kafkasink_array_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">double</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 DB Worker 支持 RPC的 AI服务" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 EXTERNAL_MODEL" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 model_em_predict " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-drop stream if exists model_em_predict_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists model_em_predict_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-DROP MODEL ex_model_dt IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ex_model_dt IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create model model_em_predict as load_external_model" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model ex_model_dt as load_external_model( 
 &apos;hdfs:///node5/studio/gengchenyu/file/m1&apos;, 
 &apos;python&apos;, 
 &apos;tf_decision_tree&apos;, 
 &apos;dnn.alg&apos;, 
 &apos;dnn.alg.load&apos;, 
 &apos;dnn.alg.predict&apos; 
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create stream model_em_predict" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream model_em_predict(
features double ARRAY
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;model_em_predict&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;model_em_predict_010&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-create stream model_em_predict_sink" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream model_em_predict_sink(
PREDICTION double 
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;model_em_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;model_em_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB-insert into model_em_predict_sink SELECT PREDICTION FROM PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into model_em_predict_sink SELECT PREDICTION FROM PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB SHOW JOBS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DB SHOW JOBS E;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1434314148">insert into model_em_predict_sink SELECT PREDICTION FROM PREDICT_BY_EXTERNAL_MODEL(ex_model_dt,model_em_predict)</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 OTHERS_MODEL" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 minmax_scaler" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_dbsource;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_dbsource;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.MINMAX_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.MINMAX_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.MINMAX_DATA(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.MINMAX_DATA(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO MINMAX_DATA VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.MINMAX_DATA VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL MINMAX_SCALER_MODEL AS MINMAX_SCALER_TRANSFORMER(streamsql.MINMAX_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL MINMAX_SCALER_MODEL AS MINMAX_SCALER_TRANSFORMER(streamsql.MINMAX_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.minmax_scaler;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.minmax_scaler;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.minmax_scaler(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.minmax_scaler(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.minmax_scaler VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.minmax_scaler VALUES (ARRAY[1.0, 0.1, -1.0]),(ARRAY[2.0, 1.1, 1.0]),(ARRAY[3.0, 10.1, 3.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM  minmax_scaler_dbsource (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.minmax_scaler&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM  minmax_scaler_dbsource (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.minmax_scaler&apos;);  

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream minmax_scaler_sink( scaledFeatures double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;minmax_scaler_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;minmax_scaler_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream minmax_scaler_sink(
scaledFeatures double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;minmax_scaler_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;minmax_scaler_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  insert into minmax_scaler_sink SELECT scaledFeatures from  MINMAX_SCALER(MINMAX_SCALER_MODEL,minmax_scaler_dbsource);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> insert into minmax_scaler_sink SELECT scaledFeatures from  MINMAX_SCALER(MINMAX_SCALER_MODEL,minmax_scaler_dbsource);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL MINMAX_SCALER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.MINMAX_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.MINMAX_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists minmax_scaler_dbsource;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists minmax_scaler_dbsource;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.minmax_scaler;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.minmax_scaler;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 standard_scaler" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL STANDARD_SCALER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL STANDARD_SCALER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_standard_scaler_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_standard_scaler_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists STANDARD_SCALER_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists STANDARD_SCALER_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE STANDARD_SCALER_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE STANDARD_SCALER_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into standard_scaler_data values (0,array[1.0,0.5,-1.0]),(1,array[2.0,1.0,1.0]),(2,array[4.0,10.0,2.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into standard_scaler_data values (0,array[1.0,0.5,-1.0]),(1,array[2.0,1.0,1.0]),(2,array[4.0,10.0,2.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL MINMAX_SCALER_MODEL AS MINMAX_SCALER_TRANSFORMER(MINMAX_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL STANDARD_SCALER_MODEL AS  STANDARD_SCALER_TRANSFORMER(STANDARD_SCALER_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.standard_scaler;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.standard_scaler;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.standard_scaler(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.standard_scaler(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.standard_scaler VALUES (ARRAY[1.0,0.5,-1.0]),(ARRAY[2.0,1.0,1.0]),(ARRAY[4.0,10.0,2.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.standard_scaler VALUES (ARRAY[1.0,0.5,-1.0]),(ARRAY[2.0,1.0,1.0]),(ARRAY[4.0,10.0,2.0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM standard_scaler_dbsource (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.standard_scaler&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_standard_scaler_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.standard_scaler&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream standard_scaler_sink( scaledfeatures double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;standard_scaler_sink2&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;standard_scaler_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_standard_scaler_sink_01(
scaledfeatures double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;standard_scaler_sink2&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;standard_scaler_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into standard_scaler_sink SELECT scaledfeatures from  standard_scaler(STANDARD_SCALER_MODEL,standard_scaler_dbsource);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> insert into t_standard_scaler_sink_01 SELECT scaledfeatures from  standard_scaler(STANDARD_SCALER_MODEL,t_standard_scaler_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 normalizer" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL NORMALIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL NORMALIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_normalizer_dbsource_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_normalizer_dbsource_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_model_Normalizer_sink_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_model_Normalizer_sink_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL NORMALIZER_MODEL AS NORMALIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL NORMALIZER_MODEL AS NORMALIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.normalizer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.normalizer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.normalizer(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.normalizer(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.normalizer VALUES (ARRAY[1.0, 0.1, -8.0]),(ARRAY[2.0, 1.0, -4.0]),(ARRAY[4.0, 10.0, 8.0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.normalizer VALUES (ARRAY[1.0, 0.1, -8.0]),(ARRAY[2.0, 1.0, -4.0]),(ARRAY[4.0, 10.0, 8.0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_normalizer_dbsource_02 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.normalizer&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_normalizer_dbsource_02 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.normalizer&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_model_Normalizer_sink_02( NORMFEATURES double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;NORMALIZER_MODEL1_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;Normalizer_002&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_model_Normalizer_sink_02(
NORMFEATURES double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;NORMALIZER_MODEL1_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;Normalizer_002&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_model_Normalizer_sink_02 SELECT NORMFEATURES FROM NORMALIZER(NORMALIZER_MODEL,t_normalizer_dbsource_02);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_model_Normalizer_sink_02 SELECT NORMFEATURES FROM NORMALIZER(NORMALIZER_MODEL,t_normalizer_dbsource_02);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 random_forest_classifier_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL RANDOM_FOREST_CLASSIFIER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL RANDOM_FOREST_CLASSIFIER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_random_forest_classifier_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_random_forest_classifier_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_random_forest_classifier_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_random_forest_classifier_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists RANDOM_FOREST_CLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE RANDOM_FOREST_CLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO RANDOM_FOREST_CLASSIFIER_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL RANDOM_FOREST_CLASSIFIER_MODEL AS RANDOM_FOREST_CLASSIFIER_TRAIN(RANDOM_FOREST_CLASSIFIER_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL RANDOM_FOREST_CLASSIFIER_MODEL AS RANDOM_FOREST_CLASSIFIER_TRAIN(streamsql.RANDOM_FOREST_CLASSIFIER_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.random_forest_classifier;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.random_forest_classifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.random_forest_classifier(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.random_forest_classifier(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO RANDOM_FOREST_CLASSIFIER_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.random_forest_classifier VALUES
 (ARRAY [0.2,0.4,3]), (ARRAY [4,1,0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_random_forest_classifier_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.random_forest_classifier&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_random_forest_classifier_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.random_forest_classifier&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  create stream t_random_forest_classifier_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;random_forest_classifier1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;random_forest_classifier_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_random_forest_classifier_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;random_forest_classifier1&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;random_forest_classifier_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_random_forest_classifier_sink_01 SELECT * from  random_forest_classifier_predict(RANDOM_FOREST_CLASSIFIER_MODEL,t_random_forest_classifier_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_random_forest_classifier_sink_01 SELECT * from  random_forest_classifier_predict(RANDOM_FOREST_CLASSIFIER_MODEL,t_random_forest_classifier_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 onevsrest_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL ONEVSREST_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ONEVSREST_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_onevsrest_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_onevsrest_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_onevsrest_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_onevsrest_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists ONEVSREST_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists ONEVSREST_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE ONEVSREST_TRAIN_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE ONEVSREST_TRAIN_DATA (LABEL DOUBLE ,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO ONEVSREST_TRAIN_DATA VALUES (0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,-10.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO ONEVSREST_TRAIN_DATA VALUES (0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,10.0]),(0.0,ARRAY[10.0,-10.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model onevsrest_model as onevsrest_train(onevsrest_train_data,1,&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model onevsrest_model as onevsrest_train(onevsrest_train_data,1,&apos;{&quot;classifier&quot;:&quot;org.apache.spark.ml.classification.LogisticRegression&quot;,&quot;regParam&quot;:0.0,&quot;elasticNetParam&quot;:0.0,&quot;maxIter&quot;:100,&quot;tol&quot;:1E-6,&quot;fitIntercept&quot;:true,&quot;standardization&quot;:true,&quot;threshold&quot;:0.5,&quot;family&quot;:&quot;auto&quot;}&apos;)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.onevsrest;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.onevsrest;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.onevsrest(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.onevsrest(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.onevsrest VALUES  (ARRAY  [0.2, 0.4]), (ARRAY [4.0, 0.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.onevsrest VALUES
 (ARRAY[0.2, 0.4]), (ARRAY[4.0, 0.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_onevsrest_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.onevsrest&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_onevsrest_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.onevsrest&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_onevsrest_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;onevsrest_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;onevsrest_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_onevsrest_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;onevsrest_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;onevsrest_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_onevsrest_sink_01 SELECT * from  onevsrest_predict(ONEVSREST_MODEL,t_onevsrest_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_onevsrest_sink_01 SELECT * from  onevsrest_predict(ONEVSREST_MODEL,t_onevsrest_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 naive_bayes_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL NB_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL NB_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_naive_bayes_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_naive_bayes_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists NB_TRAININT_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists NB_TRAININT_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE NB_TRAININT_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE NB_TRAININT_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO NB_TRAININT_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO NB_TRAININT_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]),
 (2, ARRAY[0, 0, 1]),
 (2, ARRAY[0, 0, 2]),
 (2, ARRAY[0, 0, 3]),
 (2, ARRAY[0, 0, 4]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL NB_MODEL AS NAIVE_BAYES_TRAIN(NB_TRAININT_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL NB_MODEL AS NAIVE_BAYES_TRAIN(NB_TRAININT_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.naive_bayes;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.naive_bayes;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.naive_bayes(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.naive_bayes(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.naive_bayes VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.naive_bayes VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM random_forest_classifier_dbsource " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_naive_bayes_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.naive_bayes&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_naive_bayes_predict_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;naive_bayes_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;naive_bayes_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_naive_bayes_predict_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;naive_bayes_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;naive_bayes_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_naive_bayes_predict_sink_01 SELECT * from  naive_bayes_predict(NB_MODEL,t_naive_bayes_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_naive_bayes_predict_sink_01 SELECT * from  naive_bayes_predict(NB_MODEL,t_naive_bayes_predict_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 multilayer_perceptron_classifier_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL MULTILAYER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL MULTILAYER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  drop stream  if exists t_multilayer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_multilayer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_multilayer_perceptron_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_multilayer_perceptron_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA VALUES (0,ARRAY[1.2,1.3,3.1]),
(1,ARRAY[2.2,2.3,2.1]),
(0,ARRAY[1.0,1.3,3.1]),
(0,ARRAY[0.2,1.3,3.1]),
(0,ARRAY[1.3,0.3,3.1]),
(1,ARRAY[1.3,1.3,4.1]),
(1,ARRAY[1.8,1.3,0.1]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL MULTILAYER_MODEL AS MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN(MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL MULTILAYER_MODEL AS MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN(MULTILAYER_PERCEPTRON_CLASSIFIER_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.multilayer_perceptron_classifier;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.multilayer_perceptron_classifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.multilayer_perceptron_classifier(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.multilayer_perceptron_classifier(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.multilayer_perceptron_classifier VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.multilayer_perceptron_classifier VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  CREATE STREAM t_multilayer_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.multilayer_perceptron_classifier&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_multilayer_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.multilayer_perceptron_classifier&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_multilayer_perceptron_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;multilayer_perceptron_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;multilayer_perceptron_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_multilayer_perceptron_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;multilayer_perceptron_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;multilayer_perceptron_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_multilayer_perceptron_sink_01 SELECT * from  multilayer_perceptron_classifier_predict(MULTILAYER_MODEL,t_multilayer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_multilayer_perceptron_sink_01 SELECT * from  multilayer_perceptron_classifier_predict(MULTILAYER_MODEL,t_multilayer_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 logisticregression_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL LOGISTICREGRESSION_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL LOGISTICREGRESSION_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_logisticregression_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_logisticregression_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_logisticregression_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_logisticregression_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LOGISTICREGRESSION_TRAINING_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LOGISTICREGRESSION_TRAINING_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE LOGISTICREGRESSION_TRAINING_DATA(label double, features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE LOGISTICREGRESSION_TRAINING_DATA(label double, features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO LOGISTICREGRESSION_TRAINING_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO LOGISTICREGRESSION_TRAINING_DATA VALUES
 (0, array[1, 0, 0]),
 (0, array[2, 0, 0]),
 (0, array[3, 0, 0]),
 (0, array[4, 0, 0]),
 (1, array[0, 1, 0]),
 (1, array[0, 2, 0]),
 (1, array[0, 3, 0]),
 (1, array[0, 4, 0]),
 (2, array[0, 0, 1]),
 (2, array[0, 0, 2]),
 (2, array[0, 0, 3]),
 (2, array[0, 0, 4]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL LOGISTICREGRESSION_MODEL AS LOGISTICREGRESSION_TRAIN(LOGISTICREGRESSION_TRAINING_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL LOGISTICREGRESSION_MODEL AS LOGISTICREGRESSION_TRAIN(LOGISTICREGRESSION_TRAINING_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.logisticregression;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.logisticregression;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.logisticregression(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.logisticregression(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.logisticregression VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.logisticregression VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_logisticregression_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.logisticregression&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_logisticregression_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.logisticregression&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  create stream t_logisticregression_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;logisticregression_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;logisticregression_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_logisticregression_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;logisticregression_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;logisticregression_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_logisticregression_sink_01 SELECT * from logisticregression_predict(LOGISTICREGRESSION_MODEL,t_logisticregression_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_logisticregression_sink_01 SELECT * from logisticregression_predict(LOGISTICREGRESSION_MODEL,t_logisticregression_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 linearsvc_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL LINEARSVC_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL LINEARSVC_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_linearsvc_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_linearsvc_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linearsvc_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linearsvc_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LINEARSVC_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LINEARSVC_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE LINEARSVC_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE LINEARSVC_TRAIN_DATA (LABEL DOUBLE,FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO LINEARSVC_TRAIN_DATA VALUES " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO LINEARSVC_TRAIN_DATA VALUES (0,ARRAY[1.2,1.3,3.1]),
  (1,ARRAY[2.2,2.3,2.1]),
  (0,ARRAY[1.0,1.3,3.1]),
  (0,ARRAY[0.2,1.3,3.1]),
  (0,ARRAY[1.3,0.3,3.1]),
  (1,ARRAY[1.3,1.3,4.1]),
  (1,ARRAY[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL LINEARSVC_MODEL AS LINEARSVC_TRAIN(LINEARSVC_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL LINEARSVC_MODEL AS LINEARSVC_TRAIN(LINEARSVC_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.linearsvc_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.linearsvc_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.linearsvc_predict(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.linearsvc_predict(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  INSERT INTO streamsql.logisticregression VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.linearsvc_predict VALUES
 (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  CREATE STREAM t_linearsvc_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.linearsvc_predict&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_linearsvc_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.linearsvc_predict&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linearsvc_predict_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;linearsvc_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;linearsvc_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_linearsvc_predict_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;linearsvc_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;linearsvc_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into linearsvc_predict_sink SELECT * from linearsvc_predict(LINEARSVC_MODEL,t_linearsvc_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_linearsvc_predict_sink_01 SELECT * from linearsvc_predict(LINEARSVC_MODEL,t_linearsvc_predict_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 lda_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL lda_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL lda_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_lda_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_lda_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_lda_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_lda_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists lda_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists lda_train_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table lda_train_data (features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table lda_train_data (features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into lda_train_data VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into lda_train_data VALUES
(array[0.4314975441651938,0.23556758034173494,0.3329348754930712]),
(array[0.4102948931589844,0.24776090803928308,0.34194419880173255]),
(array[0.2097946758876284,0.45373753641180287,0.3364677877005687]),
(array[0.2979553770395886,0.3739169154377782,0.3281277075226332]),
(array[0.27280146347774675,0.3908486412393842,0.336349895282869]),
(array[0.5316139195059199,0.20597059190339642,0.2624154885906837]),
(array[0.424646102395855,0.23807706795712158,0.3372768296470235]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model lda_model as lda_train(lda_train_data,20,2,&apos;online&apos;,10,1024,0.51,0.05,true,true);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model lda_model as lda_train(lda_train_data,20,2,&apos;online&apos;,10,1024,0.51,0.05,true,true);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.lda_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.lda_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.lda_predict(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.lda_predict(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.lda_predict VALUES  (ARRAY[0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.lda_predict VALUES
 (ARRAY
[0.23953838371693498, 0.4115439191094815, 0.3489176971735836]), (ARRAY[0.424646102395855, 0.23807706795712158, 0.3372768296470235]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_lda_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.lda_predict&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_lda_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.lda_predict&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_lda_predict_sink_01( FEATURES double ARRAY, prediction double ARRAY ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;lda_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;lda_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_lda_predict_sink_01(
FEATURES double ARRAY,
prediction double ARRAY
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;lda_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;lda_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_lda_predict_sink_01 SELECT * from lda_predict(lda_model,t_lda_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_lda_predict_sink_01 SELECT * from lda_predict(lda_model,t_lda_predict_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 kmeans_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL KMEANS_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL KMEANS_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_kmeans_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_kmeans_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_kmeans_predict_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_kmeans_predict_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists KMEANS_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists KMEANS_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE KMEANS_TRAIN_DATA  (features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE KMEANS_TRAIN_DATA  (features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO KMEANS_TRAIN_DATA  VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO KMEANS_TRAIN_DATA  VALUES
  (array[1.2,1.3,3.1]),
  (array[2.2,2.3,2.1]),
  (array[1.0,1.3,3.1]),
  (array[0.2,1.3,3.1]),
  (array[1.3,0.3,3.1]),
  (array[1.3,1.3,4.1]),
  (array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL KMEANS_MODEL AS KMEANS_TRAIN(KMEANS_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL KMEANS_MODEL AS KMEANS_TRAIN(KMEANS_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.kmeans_predict;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.kmeans_predict;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.kmeans_predict(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.kmeans_predict(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  INSERT INTO streamsql.kmeans_predict VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.kmeans_predict VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  CREATE STREAM t_kmeans_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.kmeans_predict&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_kmeans_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.kmeans_predict&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_kmeans_predict_sink_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;kmeans_predict_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;kmeans_predict_sink_001&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_kmeans_predict_sink_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;kmeans_predict_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;kmeans_predict_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_kmeans_predict_sink_01 SELECT * from kmeans_predict(KMEANS_MODEL,t_kmeans_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_kmeans_predict_sink_01 SELECT * from kmeans_predict(KMEANS_MODEL,t_kmeans_predict_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 gaussian_mixture_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL GAUSSIAN_MIXTURE_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL GAUSSIAN_MIXTURE_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_gaussian_mixture_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_gaussian_mixture_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gaussian_mixture_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gaussian_mixture_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists GAUSSIAN_MIXTURE_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists GAUSSIAN_MIXTURE_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE GAUSSIAN_MIXTURE_TRAIN_DATA(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE GAUSSIAN_MIXTURE_TRAIN_DATA(FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO GAUSSIAN_MIXTURE_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO GAUSSIAN_MIXTURE_TRAIN_DATA VALUES
(ARRAY[1.2,1.3,3.1]),
(ARRAY[2.2,2.3,2.1]),
(ARRAY[1.0,1.3,3.1]),
(ARRAY[0.2,1.3,3.1]),
(ARRAY[1.3,0.3,3.1]),
(ARRAY[1.3,1.3,4.1]),
(ARRAY[1.8,1.3,0.1]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL GAUSSIAN_MIXTURE_MODEL AS GAUSSIAN_MIXTURE_TRAIN(GAUSSIAN_MIXTURE_TRAIN_DATA,2,100,0.01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL GAUSSIAN_MIXTURE_MODEL AS GAUSSIAN_MIXTURE_TRAIN(GAUSSIAN_MIXTURE_TRAIN_DATA,2,100,0.01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.gaussian_mixture;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.gaussian_mixture;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.gaussian_mixture(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.gaussian_mixture(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.gaussian_mixture VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.gaussian_mixture VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_gaussian_mixture_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.gaussian_mixture&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_gaussian_mixture_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.gaussian_mixture&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gaussian_mixture_sink_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gaussian_mixture_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;gaussian_mixture_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_gaussian_mixture_sink_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;gaussian_mixture_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;gaussian_mixture_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_gaussian_mixture_sink_01 SELECT * from kmeans_predict(KMEANS_MODEL,t_gaussian_mixture_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_gaussian_mixture_sink_01 SELECT * from gaussian_mixture_predict(GAUSSIAN_MIXTURE_MODEL,t_gaussian_mixture_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 decision_tree_regression_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DECISION_TREE_REGRESSION_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_decision_tree_regression_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_decision_tree_regression_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DECISION_TREE_REGRESSION_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE DECISION_TREE_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE DECISION_TREE_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO DECISION_TREE_REGRESSION_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO DECISION_TREE_REGRESSION_TRAIN_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL DECISION_TREE_REGRESSION_MODEL AS DECISION_TREE_REGRESSION_TRAIN(DECISION_TREE_REGRESSION_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL DECISION_TREE_REGRESSION_MODEL AS DECISION_TREE_REGRESSION_TRAIN(DECISION_TREE_REGRESSION_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.decision_tree_regression;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.decision_tree_regression;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.decision_tree_regression(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.decision_tree_regression(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.decision_tree_regression VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.decision_tree_regression VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_decision_tree_regression_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.decision_tree_regression&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_decision_tree_regression_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.decision_tree_regression&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_decision_tree_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;decision_tree_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;decision_tree_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_decision_tree_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_decision_tree_sink_01 SELECT * from decision_tree_regression_predict(DECISION_TREE_REGRESSION_MODEL,t_decision_tree_regression_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_decision_tree_sink_01 SELECT * from decision_tree_regression_predict(DECISION_TREE_REGRESSION_MODEL,t_decision_tree_regression_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 linear_regression_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL  LINEAR_REGRESSION_MODEL  IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL  LINEAR_REGRESSION_MODEL  IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_linear_regression_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_linear_regression_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_linear_regression_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_linear_regression_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists LINEAR_REGRESSION_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists LINEAR_REGRESSION_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE LINEAR_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE LINEAR_REGRESSION_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO LINEAR_REGRESSION_TRAIN_DATA VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO LINEAR_REGRESSION_TRAIN_DATA VALUES
 (0.32, ARRAY[1, 0, 0]),
 (1.25, ARRAY[2, 0, 0]),
 (2.26, ARRAY[3, 0, 0]),
 (2.3, ARRAY[4, 0, 0]),
 (2.1, ARRAY[0, 1, 0]),
 (1.26, ARRAY[0, 2, 0]),
 (10, ARRAY[0, 3, 0]),
 (15, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL LINEAR_REGRESSION_MODEL AS LINEAR_REGRESSION_TRAIN(LINEAR_REGRESSION_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL LINEAR_REGRESSION_MODEL AS LINEAR_REGRESSION_TRAIN(LINEAR_REGRESSION_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.linear_regression;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.linear_regression;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.linear_regression(FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.linear_regression(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.linear_regression VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.linear_regression VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_linear_regression_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.linear_regression&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_linear_regression_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.linear_regression&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_linear_regression_sink_01( FEATURES double ARRAY, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;linear_regression_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;linear_regression_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_linear_regression_sink_01(
FEATURES double ARRAY,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;linear_regression_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;linear_regression_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_linear_regression_sink_01 SELECT * from linear_regression_predict(LINEAR_REGRESSION_MODEL,t_linear_regression_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_linear_regression_sink_01 SELECT * from linear_regression_predict(LINEAR_REGRESSION_MODEL,t_linear_regression_predict_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 bisecting_kmeans_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL bisecting_kmeans_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL bisecting_kmeans_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_bisecting_kmeans_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_bisecting_kmeans_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_bisecting_kmeans_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_bisecting_kmeans_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists bisecting_kmeans_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists bisecting_kmeans_train_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table bisecting_kmeans_train_data (features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table bisecting_kmeans_train_data (features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into bisecting_kmeans_train_data VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into bisecting_kmeans_train_data VALUES
(array[1.2,1.3,3.1]),
(array[2.2,2.3,2.1]),
(array[1.0,1.3,3.1]),
(array[0.2,1.3,3.1]),
(array[1.3,0.3,3.1]),
(array[1.3,1.3,4.1]),
(array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model bisecting_kmeans_model as bisecting_kmeans_train(bisecting_kmeans_train_data,4,20,1.0);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model bisecting_kmeans_model as bisecting_kmeans_train(bisecting_kmeans_train_data,4,20,1.0);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.bisecting_kmeans;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.bisecting_kmeans;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.bisecting_kmeans(FEATURES DOUBLE ARRAY); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.bisecting_kmeans(FEATURES DOUBLE ARRAY);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.bisecting_kmeans VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.bisecting_kmeans VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_bisecting_kmeans_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.bisecting_kmeans&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_bisecting_kmeans_predict_dbsource_01 (FEATURES double ARRAY) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.bisecting_kmeans&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_bisecting_kmeans_sink_01( FEATURES double ARRAY, prediction int ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;bisecting_kmeans_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;bisecting_kmeans_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_bisecting_kmeans_sink_01(
FEATURES double ARRAY,
prediction int
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;bisecting_kmeans_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;bisecting_kmeans_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_bisecting_kmeans_sink_01 SELECT * from bisecting_kmeans_predict(bisecting_kmeans_model,t_bisecting_kmeans_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_bisecting_kmeans_sink_01 SELECT * from bisecting_kmeans_predict(bisecting_kmeans_model,t_bisecting_kmeans_predict_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 string_indexer" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL STRING_INDEXER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL STRING_INDEXER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_string_indexer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_string_indexer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_string_indexer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_string_indexer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists STRINGINDEXER_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists STRINGINDEXER_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE STRINGINDEXER_DATA(CATEGORY VARCHAR(20));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE STRINGINDEXER_DATA(CATEGORY VARCHAR(20));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO STRINGINDEXER_DATA VALUES(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;a&apos;,&apos;b&apos;,&apos;b&apos;,&apos;c&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO STRINGINDEXER_DATA VALUES(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;a&apos;,&apos;b&apos;,&apos;b&apos;,&apos;c&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL STRING_INDEXER_MODEL AS STRING_INDEXER_TRANSFORMER(STRINGINDEXER_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL STRING_INDEXER_MODEL AS STRING_INDEXER_TRANSFORMER(STRINGINDEXER_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.string_indexer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.string_indexer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.string_indexer(category varchar(32));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.string_indexer(category varchar(32));
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.string_indexer VALUES(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;a&apos;,&apos;b&apos;,&apos;b&apos;,&apos;c&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.string_indexer VALUES(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;a&apos;,&apos;b&apos;,&apos;b&apos;,&apos;c&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_string_indexer_dbsource_01 (category varchar(32)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.string_indexer&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_string_indexer_dbsource_01 (category varchar(32)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.string_indexer&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_string_indexer_sink_01( category varchar(32), categoryIndex double  ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;string_indexer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;string_indexer_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_string_indexer_sink_01(
category varchar(32),
categoryIndex double 
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;string_indexer_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;string_indexer_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_string_indexer_sink_01 SELECT * from string_indexer(STRING_INDEXER_MODEL,t_string_indexer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_string_indexer_sink_01 SELECT * from string_indexer(STRING_INDEXER_MODEL,t_string_indexer_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 chisqselector" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL RFORMULA_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL RFORMULA_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL CHISQSELECTOR_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL CHISQSELECTOR_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_chisqselector_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_chisqselector_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_chisqselector_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_chisqselector_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA(ID DOUBLE,COUNTRY VARCHAR(32) ,HOUR DOUBLE,CLICKED DOUBLE);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA(ID DOUBLE,COUNTRY VARCHAR(32) ,HOUR DOUBLE,CLICKED DOUBLE);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(7,&apos;us&apos;,18,1.0),(8,&apos;ca&apos;,18,1.0),(9,&apos;nz&apos;,19,1.0),(10,&apos;as&apos;,18,1.0),(11,&apos;uu&apos;,18,0.0);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(7,&apos;us&apos;,18,1.0),(8,&apos;ca&apos;,18,1.0),(9,&apos;nz&apos;,19,1.0),(10,&apos;as&apos;,18,1.0),(11,&apos;uu&apos;,18,0.0);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL RFORMULA_MODEL AS RFORMULA_TRANSFORMER((SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL RFORMULA_MODEL AS RFORMULA_TRANSFORMER((SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL CHISQSELECTOR_MODEL AS CHISQSELECTOR_TRANSFORMER((SELECT * FROM RFORMULA(RFORMULA_MODEL,(SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA))));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL CHISQSELECTOR_MODEL AS CHISQSELECTOR_TRANSFORMER((SELECT * FROM RFORMULA(RFORMULA_MODEL,(SELECT COUNTRY,HOUR,CLICKED FROM FEATURE_DATA))));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.chisqselector;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.chisqselector;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.chisqselector(features double array,label double);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.chisqselector(features double array,label double);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.chisqselector VALUES ((array[0.0, 1.0, 0.0, 0.0, 18.0]),1.0 ),((array[0.0, 0.0, 0.0, 0.0, 19.0]),1.0 );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.chisqselector VALUES
((array[0.0, 1.0, 0.0, 0.0, 18.0]),1.0 ),((array[0.0, 0.0, 0.0, 0.0, 19.0]),1.0 );</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_chisqselector_dbsource_01 (features double array,label double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.chisqselector&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_chisqselector_dbsource_01 (features double array,label double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.chisqselector&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_chisqselector_sink_01( selectFeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;chisqselector_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;chisqselector_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_chisqselector_sink_01(
selectFeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;chisqselector_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;chisqselector_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_chisqselector_sink_01 SELECT selectFeatures  from chisqselector(CHISQSELECTOR_MODEL, t_chisqselector_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_chisqselector_sink_01 SELECT selectFeatures  from chisqselector(CHISQSELECTOR_MODEL, t_chisqselector_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 word2vec" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL WORD2VEC_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL WORD2VEC_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_word2vec_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_word2vec_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_word2vec_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_word2vec_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL WORD2VEC_MODEL AS WORD2VEC_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL WORD2VEC_MODEL AS WORD2VEC_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  drop table if exists streamsql.word2vec;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.word2vec;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.word2vec(words varchar(32) array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.word2vec(words varchar(32) array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.word2vec VALUES (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.word2vec VALUES
(array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_word2vec_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.word2vec&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_word2vec_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.word2vec&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_word2vec_sink_01( Features double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;word2vec_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;word2vec_sink_001&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_word2vec_sink_01(
Features double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;word2vec_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;word2vec_sink_001&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_word2vec_sink_01 SELECT Features from word2vec(WORD2VEC_MODEL, t_word2vec_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_word2vec_sink_01 SELECT Features  from word2vec(WORD2VEC_MODEL, t_word2vec_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 countvectorizer" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL COUNTVECTORIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL COUNTVECTORIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_countvectorizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_countvectorizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_countvectorizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_countvectorizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL COUNTVECTORIZER_MODEL AS COUNTVECTORIZER_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL COUNTVECTORIZER_MODEL AS COUNTVECTORIZER_TRANSFORMER((SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.countvectorizer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.countvectorizer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.countvectorizer(words varchar(32) array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.countvectorizer(words varchar(32) array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.word2vec VALUES (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.countvectorizer VALUES
(array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_countvectorizer_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.countvectorizer&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_countvectorizer_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.countvectorizer&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_countvectorizer_sink_01( Features double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;countvectorizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;countvectorizer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_countvectorizer_sink_01(
Features double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;countvectorizer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;countvectorizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_countvectorizer_sink_01 SELECT Features from countvectorizer(COUNTVECTORIZER_MODEL, t_countvectorizer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_countvectorizer_sink_01 SELECT Features from countvectorizer(COUNTVECTORIZER_MODEL, t_countvectorizer_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 gbtclassifier_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL GBTCLASSIFIER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL GBTCLASSIFIER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_gbtclassifier_predict_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_gbtclassifier_predict_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_gbtclassifier_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_gbtclassifier_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists GBTCLASSIFIER_TRAIN_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists GBTCLASSIFIER_TRAIN_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE GBTCLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE GBTCLASSIFIER_TRAIN_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO GBTCLASSIFIER_TRAIN_DATA VALUES  (0, ARRAY[1, 0, 0]),  (0, ARRAY[2, 0, 0]),  (0, ARRAY[3, 0, 0]),  (0, ARRAY[4, 0, 0]),  (1, ARRAY[0, 1, 0]),  (1, ARRAY[0, 2, 0]),  (1, ARRAY[0, 3, 0]),  (1, ARRAY[0, 4, 0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO GBTCLASSIFIER_TRAIN_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL GBTCLASSIFIER_MODEL AS GBTCLASSIFIER_TRAIN(GBTCLASSIFIER_TRAIN_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL GBTCLASSIFIER_MODEL AS GBTCLASSIFIER_TRAIN(GBTCLASSIFIER_TRAIN_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.gbtclassifier;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.gbtclassifier;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.gbtclassifier(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.gbtclassifier(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.gbtclassifier VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.gbtclassifier VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_gbtclassifier_predict_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.gbtclassifier&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_gbtclassifier_predict_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.gbtclassifier&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_gbtclassifier_sink_01( Features double array, prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;gbtclassifier_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;gbtclassifier_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_gbtclassifier_sink_01(
Features double array,
prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;gbtclassifier_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;gbtclassifier_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_gbtclassifier_sink_01 SELECT *  from gbtclassifier_predict(GBTCLASSIFIER_MODEL, t_gbtclassifier_predict_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_gbtclassifier_sink_01 SELECT *  from gbtclassifier_predict(GBTCLASSIFIER_MODEL, t_gbtclassifier_predict_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 decision_tree_predict" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL DT_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL DT_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_decision_tree_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_decision_tree_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_decision_tree_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_decision_tree_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists DT_TRAINING_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists DT_TRAINING_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE DT_TRAINING_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE DT_TRAINING_DATA(LABEL DOUBLE, FEATURES DOUBLE ARRAY);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO DT_TRAINING_DATA" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO DT_TRAINING_DATA VALUES
 (0, ARRAY[1, 0, 0]),
 (0, ARRAY[2, 0, 0]),
 (0, ARRAY[3, 0, 0]),
 (0, ARRAY[4, 0, 0]),
 (1, ARRAY[0, 1, 0]),
 (1, ARRAY[0, 2, 0]),
 (1, ARRAY[0, 3, 0]),
 (1, ARRAY[0, 4, 0]),
 (2, ARRAY[0, 0, 1]),
 (2, ARRAY[0, 0, 2]),
 (2, ARRAY[0, 0, 3]),
 (2, ARRAY[0, 0, 4]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL DT_MODEL AS DECISION_TREE_TRAIN(DT_TRAINING_DATA);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL DT_MODEL AS DECISION_TREE_TRAIN(DT_TRAINING_DATA);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.decision_tree;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.decision_tree;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.decision_tree(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.decision_tree(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO streamsql.decision_tree VALUES  (ARRAY [0.2,0.4,3]), (ARRAY[4,1,0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.decision_tree VALUES
 (ARRAY
[0.2,0.4,3]), (ARRAY[4,1,0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_decision_tree_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.decision_tree&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_decision_tree_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.decision_tree&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create t_stream decision_tree_sink_01( Features double array, Prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;decision_tree_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;decision_tree_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_decision_tree_sink_01(
Features double array,
Prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;decision_tree_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;decision_tree_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_decision_tree_sink_01 SELECT *  from decision_tree_predict(DT_MODEL, t_decision_tree_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_decision_tree_sink_01 SELECT * from decision_tree_predict(DT_MODEL, t_decision_tree_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="157585307">{&quot;FEATURES&quot;:[0.2,0.4,3.0],&quot;PREDICTION&quot;:2.0}</stringProp>
                    <stringProp name="157585307">{&quot;FEATURES&quot;:[0.2,0.4,3.0],&quot;PREDICTION&quot;:2.0}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 tokenizer " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_tokenizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_tokenizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_tokenizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_tokenizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.tokenizer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.tokenizer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.tokenizer(sentence varchar(2048)); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.tokenizer(sentence varchar(2048));
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 NSERT INTO streamsql.tokenizer VALUES (&apos;Hi I heard about Spark&apos;),(&apos;I wish Java could use case classes&apos;),(&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.tokenizer VALUES
(&apos;Hi I heard about Spark&apos;),(&apos;I wish Java could use case classes&apos;),(&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_tokenizer_dbsource_01 (sentence varchar(2048)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tokenizer&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_tokenizer_dbsource_01 (sentence varchar(2048)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tokenizer&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_tokenizer_sink_01( words varchar(32) array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;tokenizer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;tokenizer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_tokenizer_sink_01(
words varchar(32) array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;tokenizer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;tokenizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_tokenizer_sink_01 SELECT * from tokenizer(TOKENIZER_MODEL, t_tokenizer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_tokenizer_sink_01 SELECT words from tokenizer(TOKENIZER_MODEL, t_tokenizer_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-731764890">{&quot;WORDS&quot;:[&quot;logistic&quot;,&quot;regression&quot;,&quot;models&quot;,&quot;are&quot;,&quot;neat&quot;]}</stringProp>
                    <stringProp name="1455650983">{&quot;WORDS&quot;:[&quot;i&quot;,&quot;wish&quot;,&quot;java&quot;,&quot;could&quot;,&quot;use&quot;,&quot;case&quot;,&quot;classes&quot;]}</stringProp>
                    <stringProp name="-591426889">{&quot;WORDS&quot;:[&quot;hi&quot;,&quot;i&quot;,&quot;heard&quot;,&quot;about&quot;,&quot;spark&quot;]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 hashingtf  " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL HASHINGTF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL HASHINGTF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_hashingtf_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_hashingtf_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_hashingtf_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_hashingtf_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.hashingtf; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.hashingtf;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.hashingtf(words varchar(32) array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.hashingtf(words varchar(32) array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.hashingtf values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.hashingtf values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_hashingtf_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.hashingtf&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_hashingtf_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.hashingtf&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_hashingtf_sink_01( rawfeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;hashingtf_sink8&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;hashingtf_sink&apos;, &apos;max.request.size&apos;:&apos;1048627&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_hashingtf_sink_01(
rawfeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;hashingtf_sink8&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;hashingtf_sink&apos;,
&apos;max.request.size&apos;:&apos;1048627&apos;,
&apos;format&apos;:&apos;json&apos;
);


 

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_hashingtf_sink_01 SELECT * from hashingtf(HASHINGTF_MODEL, t_hashingtf_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_hashingtf_sink_01 SELECT rawfeatures from hashingtf(HASHINGTF_MODEL, t_hashingtf_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 idf" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL TOKENIZER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL TOKENIZER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL HASHINGTF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL HASHINGTF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL IDF_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL IDF_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_idf_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_idf_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_idf_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_idf_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists FEATURE_DATA;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists FEATURE_DATA;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE FEATURE_DATA (LABEL DOUBLE,SENTENCE VARCHAR(200));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO FEATURE_DATA VALUES(0.0,&apos;Hi I heard about LDB&apos;),(0.0,&apos;I wish Java could use case classes&apos;),(1.0,&apos;Logistic regression models are neat&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL TOKENIZER_MODEL AS TOKENIZER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL HASHINGTF_MODEL AS HASHINGTF_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL IDF_MODEL AS IDF_TRANSFORMER((SELECT * FROM HASHINGTF(HASHINGTF_MODEL,(SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)))));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL IDF_MODEL AS IDF_TRANSFORMER((SELECT * FROM HASHINGTF(HASHINGTF_MODEL,(SELECT * FROM TOKENIZER(TOKENIZER_MODEL,FEATURE_DATA)))));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.idf; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.idf;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.idf(rawfeatures double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.idf(rawfeatures double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.idf values (array[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 1.0]),(array[0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 3.0]),(array[0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.idf values (array[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 1.0]),(array[0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 3.0]),(array[0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_idf_dbsource_01 (rawfeatures double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.idf&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_idf_dbsource_01 (rawfeatures double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.idf&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_idf_sink_01( Features double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;idf_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;idf_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_idf_sink_01(
Features double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;idf_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;idf_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_idf_sink_01 SELECT Features from idf(IDF_MODEL, t_idf_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_idf_sink_01 SELECT Features from idf(IDF_MODEL, t_idf_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1522009874">{&quot;FEATURES&quot;:[1.3862943611198906,0.0,0.0,0.0,0.0,1.3862943611198906,0.0,2.772588722239781,0.0,1.3862943611198906]}</stringProp>
                    <stringProp name="446535543">{&quot;FEATURES&quot;:[0.0,0.0,1.3862943611198906,1.3862943611198906,0.0,1.3862943611198906,0.0,1.3862943611198906,0.0,4.1588830833596715]}</stringProp>
                    <stringProp name="-1535152392">{&quot;FEATURES&quot;:[0.0,0.0,0.0,1.3862943611198906,1.3862943611198906,1.3862943611198906,1.3862943611198906,0.0,1.3862943611198906,0.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 binarizer " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL binarizer_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL binarizer_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_binarizer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_binarizer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_binarizer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_binarizer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model binarizer_model as binarizer_transformer();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model binarizer_model as binarizer_transformer();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.binarizer; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.binarizer;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.binarizer(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.binarizer(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.binarizer values (array[0.8]),(array[1.0]),(array[0.5]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.binarizer values (array[0.8]),(array[1.0]),(array[0.5]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_binarizer_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.binarizer&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_binarizer_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.binarizer&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_binarizer_sink_01( binarizedfeature double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;binarizer_sink1&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;binarizer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_binarizer_sink_01(
binarizedfeature double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;binarizer_sink1&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;binarizer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_binarizer_sink_01 SELECT * from binarizer(binarizer_model, t_binarizer_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_binarizer_sink_01 SELECT binarizedfeature from binarizer(binarizer_model, t_binarizer_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-242020219">{&quot;BINARIZEDFEATURE&quot;:[1.0]}</stringProp>
                    <stringProp name="-242020219">{&quot;BINARIZEDFEATURE&quot;:[1.0]}</stringProp>
                    <stringProp name="-242020219">{&quot;BINARIZEDFEATURE&quot;:[1.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 dct" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL dct_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL dct_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_dct_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_dct_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_dct_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_dct_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model dct_model as dct_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model dct_model as dct_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.dct; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.dct;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.dct(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.dct(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.dct values (array[0.0, 1.0, -2.0, 3.0]),(array[-1.0, 2.0, 4.0, -7.0]),(array[14.0, -2.0, -5.0, 1.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.dct values (array[0.0, 1.0, -2.0, 3.0]),(array[-1.0, 2.0, 4.0, -7.0]),(array[14.0, -2.0, -5.0, 1.0]);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_dct_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.dct&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_dct_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.dct&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_dct_sink_01( featuresdct double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;dct_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;dct_sink&apos;, &apos;format&apos;:&apos;json&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_dct_sink_01(
featuresdct double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;dct_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;dct_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_dct_sink_01 SELECT * from dct(dct_model, t_dct_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_dct_sink_01 SELECT featuresdct from dct(dct_model, t_dct_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1726655869">{&quot;FEATURESDCT&quot;:[-1.0,3.378492794482933,-7.000000000000001,2.9301512653149677]}</stringProp>
                    <stringProp name="1726655869">{&quot;FEATURESDCT&quot;:[-1.0,3.378492794482933,-7.000000000000001,2.9301512653149677]}</stringProp>
                    <stringProp name="-551243800">{&quot;FEATURESDCT&quot;:[1.0,-1.1480502970952693,2.0000000000000004,-2.7716385975338604]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 ngram " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL ngram_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL ngram_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_ngram_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_ngram_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_ngram_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_ngram_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model ngram_model as ngram_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model ngram_model as ngram_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.ngram; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.ngram;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.ngram(words varchar(32) array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.ngram(words varchar(32) array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.ngram values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.ngram values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_ngram_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.ngram&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_ngram_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.ngram&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_ngram_sink_01( ngrams varchar(32) array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;ngram_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;ngram_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_ngram_sink_01(
ngrams varchar(32) array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;ngram_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;ngram_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_ngram_sink_01 SELECT ngrams from ngram(ngram_model, t_ngram_dbsource_01); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_ngram_sink_01 SELECT ngrams from ngram(ngram_model, t_ngram_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="763063948">{&quot;NGRAMS&quot;:[&quot;logistic regression&quot;,&quot;regression models&quot;,&quot;models are&quot;,&quot;are neat&quot;]}</stringProp>
                    <stringProp name="-1605476865">{&quot;NGRAMS&quot;:[&quot;i wish&quot;,&quot;wish java&quot;,&quot;java could&quot;,&quot;could use&quot;,&quot;use case&quot;,&quot;case classes&quot;]}</stringProp>
                    <stringProp name="816538656">{&quot;NGRAMS&quot;:[&quot;hi i&quot;,&quot;i heard&quot;,&quot;heard about&quot;,&quot;about spark&quot;]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 element_wise_product" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL element_wise_product_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL element_wise_product_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_element_wise_product_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_element_wise_product_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_element_wise_product_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_element_wise_product_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model element_wise_product_model as element_wise_product_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model element_wise_product_model as element_wise_product_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.element_wise_product;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.element_wise_product;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.element_wise_product(vector double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.element_wise_product(vector double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.element_wise_product values (array[1.0, 2.0, 3.0]),(array[4.0, 5.0, 6.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.element_wise_product values (array[1.0, 2.0, 3.0]),(array[4.0, 5.0, 6.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_element_wise_product_dbsource_01 (vector double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.element_wise_product&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_element_wise_product_dbsource_01 (vector double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.element_wise_product&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_element_wise_product_sink_01( transformedvector double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;element_wise_product_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;element_wise_product_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_element_wise_product_sink_01(
transformedvector double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;element_wise_product_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;element_wise_product_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_element_wise_product_sink_01 SELECT * from element_wise_product(element_wise_product_model, t_element_wise_product_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_element_wise_product_sink_01 SELECT transformedvector from element_wise_product(element_wise_product_model, t_element_wise_product_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="775205902">{&quot;TRANSFORMEDVECTOR&quot;:[0.0,5.0,12.0]}</stringProp>
                    <stringProp name="-2029684118">{&quot;TRANSFORMEDVECTOR&quot;:[0.0,2.0,6.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 pca" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL pca_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL pca_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_pca_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_pca_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_pca_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_pca_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists pca_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists pca_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table pca_data(id double,features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table pca_data(id double,features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into pca_data values" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into pca_data values (0,array[2.0, 0.0, 3.0, 4.0, 5.0]),
  (1,array[2.0, 0.0, 3.0, 4.0, 4.1]),
  (0,array[4.0, 0.0, 0.0, 6.0, 7.0]),
  (0,array[4.0, 0.0, 1.0, 6.0, 7.0]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model pca_model as pca_transformer(pca_data)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model pca_model as pca_transformer(pca_data);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.pca;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.pca;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.pca(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.pca(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.pca values (array[2.0, 0.0, 3.0, 4.0, 4.1]),(array[4.0, 0.0, 0.0, 6.0, 7.0]),(array[4.0, 0.0, 1.0, 6.0, 7.0]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.pca values (array[2.0, 0.0, 3.0, 4.0, 4.1]),(array[4.0, 0.0, 0.0, 6.0, 7.0]),(array[4.0, 0.0, 1.0, 6.0, 7.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_pca_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.pca&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_pca_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.pca&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_pca_sink_01( pcafeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;pca_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;pca_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_pca_sink_01(
pcafeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;pca_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;pca_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_pca_sink_01 SELECT * from pca(pca_model, t_pca_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_pca_sink_01 SELECT pcafeatures from pca(pca_model, t_pca_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1443369080">{&quot;PCAFEATURES&quot;:[-8.218890855780355,5.251348701527853,1.9680370717372098]}</stringProp>
                    <stringProp name="-1185707792">{&quot;PCAFEATURES&quot;:[-7.657213937895005,5.99300244779436,2.3347368952491214]}</stringProp>
                    <stringProp name="255000703">{&quot;PCAFEATURES&quot;:[-3.1915192672528043,5.309217877947139,2.331611093480392]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 polynomial_expansion" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL polynomial_expansion_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL polynomial_expansion_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_polynomial_expansion_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_polynomial_expansion_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_polynomial_expansion_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_polynomial_expansion_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model polynomial_expansion_model as polynomial_expansion_transformer()" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model polynomial_expansion_model as polynomial_expansion_transformer()</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.polynomial_expansion;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.polynomial_expansion;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.polynomial_expansion(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.polynomial_expansion(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.polynomial_expansion values (array[2.0,1.0]),(array[0.0,0.0]),(array[3.0,-1.0]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.polynomial_expansion values (array[2.0,1.0]),(array[0.0,0.0]),(array[3.0,-1.0]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_polynomial_expansion_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.polynomial_expansion&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_polynomial_expansion_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.polynomial_expansion&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_polynomial_expansion_sink_01( polyfeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;polynomial_expansion_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;polynomial_expansion_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_polynomial_expansion_sink_01(
polyfeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;polynomial_expansion_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;polynomial_expansion_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_polynomial_expansion_sink_01 SELECT * from polynomial_expansion(polynomial_expansion_model, t_polynomial_expansion_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_polynomial_expansion_sink_01 SELECT polyfeatures from polynomial_expansion(polynomial_expansion_model, t_polynomial_expansion_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="251653047">{&quot;POLYFEATURES&quot;:[0.0,0.0,0.0,0.0,0.0]}</stringProp>
                    <stringProp name="-2091967942">{&quot;POLYFEATURES&quot;:[3.0,9.0,-1.0,-3.0,1.0]}</stringProp>
                    <stringProp name="-2114762047">{&quot;POLYFEATURES&quot;:[2.0,4.0,1.0,2.0,1.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 stop_words_remover  " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL stop_words_remover_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL stop_words_remover_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_stop_words_remover_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_stop_words_remover_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_stop_words_remover_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_stop_words_remover_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model stop_words_remover_model as stop_words_remover_transformer(false,array[&apos;i&apos;,&apos;my&apos;,&apos;me&apos;,&apos;myself&apos;,&apos;we&apos;,&apos;ours&apos;,&apos;ourselves&apos;,&apos;our&apos;])" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> create model stop_words_remover_model as stop_words_remover_transformer(false,array[&apos;i&apos;,&apos;my&apos;,&apos;me&apos;,&apos;myself&apos;,&apos;we&apos;,&apos;ours&apos;,&apos;ourselves&apos;,&apos;our&apos;])</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.stop_words_remover;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.stop_words_remover;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.stop_words_remover(words varchar(32) array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.stop_words_remover(words varchar(32) array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.stop_words_remover values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.stop_words_remover values (array[&apos;hi&apos;,&apos;i&apos;,&apos;heard&apos;,&apos;about&apos;,&apos;spark&apos;]),(array[&apos;i&apos;,&apos;wish&apos;,&apos;java&apos;,&apos;could&apos;,&apos;use&apos;,&apos;case&apos;,&apos;classes&apos;]),(array[&apos;logistic&apos;,&apos;regression&apos;,&apos;models&apos;,&apos;are&apos;,&apos;neat&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_stop_words_remover_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.stop_words_remover&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_stop_words_remover_dbsource_01 (words varchar(32) array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.stop_words_remover&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_stop_words_remover_sink_01( filtered varchar(32) array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;stop_words_remover_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;stop_words_remover_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_stop_words_remover_sink_01(
filtered varchar(32) array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;stop_words_remover_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;stop_words_remover_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_stop_words_remover_sink_01 SELECT * from stop_words_remover(stop_words_remover_model, t_stop_words_remover_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_stop_words_remover_sink_01 SELECT filtered from stop_words_remover(stop_words_remover_model, t_stop_words_remover_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="214966946">{&quot;FILTERED&quot;:[&quot;logistic&quot;,&quot;regression&quot;,&quot;models&quot;,&quot;are&quot;,&quot;neat&quot;]}</stringProp>
                    <stringProp name="534434074">{&quot;FILTERED&quot;:[&quot;wish&quot;,&quot;java&quot;,&quot;could&quot;,&quot;use&quot;,&quot;case&quot;,&quot;classes&quot;]}</stringProp>
                    <stringProp name="1764476908">{&quot;FILTERED&quot;:[&quot;hi&quot;,&quot;heard&quot;,&quot;about&quot;,&quot;spark&quot;]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11  vector_indexer" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL vector_indexer_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL vector_indexer_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_vector_indexer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_vector_indexer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vector_indexer_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vector_indexer_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists vector_indexer_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists vector_indexer_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table vector_indexer_data(id double,features double array)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table vector_indexer_data(id double,features double array)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into vector_indexer_data values" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into vector_indexer_data values (0,array[1.2,1.3,3.1]),
  (1,array[2.2,2.3,2.1]),
  (0,array[1.0,1.3,3.1]),
  (0,array[0.2,1.3,3.1]),
  (0,array[1.3,0.3,3.1]),
  (1,array[1.3,1.3,4.1]),
  (1,array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model vector_indexer_model as vector_indexer_transformer(vector_indexer_data);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model vector_indexer_model as vector_indexer_transformer(vector_indexer_data);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.vector_indexer; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.vector_indexer;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.vector_indexer(features double array); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.vector_indexer(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.vector_indexer values (array[1.2, 1.3, 3.1]),(array[2.2, 2.3, 2.1]),(array[1.0, 1.3, 3.1]),(array[0.2, 1.3, 3.1]),(array[1.3, 0.3, 3.1]),(array[1.3, 1.3, 4.1]),(array[1.8, 1.3, 0.1]); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.vector_indexer values (array[1.2, 1.3, 3.1]),(array[2.2, 2.3, 2.1]),(array[1.0, 1.3, 3.1]),(array[0.2, 1.3, 3.1]),(array[1.3, 0.3, 3.1]),(array[1.3, 1.3, 4.1]),(array[1.8, 1.3, 0.1]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM  t_vector_indexer_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql. vector_indexer&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM  t_vector_indexer_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql. vector_indexer&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream  t_vector_indexer_sink_01( features double array, indexedfeatures double array ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;vector_indexer_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;vector_indexer_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream  t_vector_indexer_sink_01(
features double array,
indexedfeatures double array
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;vector_indexer_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;vector_indexer_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_vector_indexer_sink_01 SELECT * from  vector_indexer(vector_indexer_model, t_vector_indexer_dbsource_01); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_vector_indexer_sink_01 SELECT * from  vector_indexer(vector_indexer_model, t_vector_indexer_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1057042135">{&quot;FEATURES&quot;:[1.3,1.3,4.1],&quot;INDEXEDFEATURES&quot;:[3.0,1.0,3.0]}</stringProp>
                    <stringProp name="1289549289">{&quot;FEATURES&quot;:[2.2,2.3,2.1],&quot;INDEXEDFEATURES&quot;:[5.0,2.0,1.0]}</stringProp>
                    <stringProp name="1641914722">{&quot;FEATURES&quot;:[0.2,1.3,3.1],&quot;INDEXEDFEATURES&quot;:[0.0,1.0,2.0]}</stringProp>
                    <stringProp name="-1939583963">{&quot;FEATURES&quot;:[1.3,0.3,3.1],&quot;INDEXEDFEATURES&quot;:[3.0,0.0,2.0]}</stringProp>
                    <stringProp name="-645631771">{&quot;FEATURES&quot;:[1.2,1.3,3.1],&quot;INDEXEDFEATURES&quot;:[2.0,1.0,2.0]}</stringProp>
                    <stringProp name="545164514">{&quot;FEATURES&quot;:[1.0,1.3,3.1],&quot;INDEXEDFEATURES&quot;:[1.0,1.0,2.0]}</stringProp>
                    <stringProp name="-620794648">{&quot;FEATURES&quot;:[1.8,1.3,0.1],&quot;INDEXEDFEATURES&quot;:[4.0,1.0,0.0]}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 train_validation_split  E" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL trainValidationSplit_model IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL trainValidationSplit_model IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_train_validation_split_sink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_train_validation_split_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists trainValidationSplit_train_data;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists trainValidationSplit_train_data;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table streamsql.train_validation_split if exists;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table streamsql.train_validation_split if exists;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.train_validation_split(features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.train_validation_split(features double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into  streamsql.train_validation_split values" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into  streamsql.train_validation_split values (array[20.16, 19.66, 131.1, 1274.0, 0.0802, 0.08564, 0.1155, 0.07726, 0.1928, 0.05096, 0.5925, 0.6863, 3.868, 74.85, 0.004536, 0.01376, 0.02645, 0.01247, 0.02193, 0.001589, 23.06, 23.03, 150.2, 1657.0, 0.1054, 0.1537, 0.2606, 0.1425, 0.3055, 0.05933]),(array[14.11, 12.88, 90.03, 616.5, 0.09309, 0.05306, 0.01765, 0.02733, 0.1373, 0.057, 0.2571, 1.081, 1.558, 23.92, 0.006692, 0.01132, 0.005717, 0.006627, 0.01416, 0.002476, 15.53, 18.0, 98.4, 749.9, 0.1281, 0.1109, 0.05307, 0.0589, 0.21, 0.07083]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table trainValidationSplit_train_data(label double,features double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table trainValidationSplit_train_data(label double,features double array);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into trainValidationSplit_train_data VALUES" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into trainValidationSplit_train_data VALUES
(0,array[1.2,1.3,3.1]),
(1,array[2.2,2.3,2.1]),
(1,array[1.0,1.3,3.1]),
(1,array[0.2,1.3,3.1]),
(0,array[1.3,0.3,3.1]),
(0,array[1.3,1.3,4.1]),
(1,array[1.8,1.3,0.1]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create model trainValidationSplit_model as train_validation_split(trainValidationSplit_train_data,&apos;GBTClassifier&apos;,&apos;{&quot;maxDepth&quot;:[5,10],&quot;maxBins&quot;:[32,16],&quot;minInfoGain&quot;:[0.0,0.1]}&apos;,&apos;BinaryClassificationEvaluator&apos;,0.75);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create model trainValidationSplit_model as train_validation_split(trainValidationSplit_train_data,&apos;GBTClassifier&apos;,&apos;{&quot;maxDepth&quot;:[5,10],&quot;maxBins&quot;:[32,16],&quot;minInfoGain&quot;:[0.0,0.1]}&apos;,&apos;BinaryClassificationEvaluator&apos;,0.75);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.train_validation_split&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.train_validation_split&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create stream t_train_validation_split_sink_01( Features double array, Prediction double ) properties( &apos;type&apos;:&apos;sink&apos;, &apos;connector&apos;:&apos;kafka&apos;, &apos;version&apos;:&apos;0.10&apos;, &apos;topic&apos;:&apos;train_validation_split_sink&apos;, &apos;bootstrap.servers&apos;:&apos;node6:9096&apos;, &apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;, &apos;group.id&apos;:&apos;train_validation_split_sink&apos;, &apos;format&apos;:&apos;json&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream t_train_validation_split_sink_01(
Features double array,
Prediction double
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;train_validation_split_sink&apos;,
&apos;bootstrap.servers&apos;:&apos;node6:9096&apos;,
&apos;zookeeper.connect&apos;:&apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,
&apos;group.id&apos;:&apos;train_validation_split_sink&apos;,
&apos;format&apos;:&apos;json&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  insert into t_train_validation_split_sink_01 SELECT * from train_validation_split(trainValidationSplit_model, t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_train_validation_split_sink_01 SELECT * from train_validation_split(trainValidationSplit_model,t_TRAIN_VALIDATION_SPLIT_DBSOURCE_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 index_to_string" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL INDEX_TO_STRING_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL INDEX_TO_STRING_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_index_to_string_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_index_to_string_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_index_to_string_dbsink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_index_to_string_dbsink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.index_to_string;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.index_to_string;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.index_to_string_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.index_to_string_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.index_to_string(CATEGORYINDEX double,CATEGORY varchar(32));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.index_to_string_sink(originalCategory  varchar(32));
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM  t_index_to_string_dbsink_01 (originalCategory  varchar(32)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.index_to_string_sink&apos;);     " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM  t_index_to_string_dbsink_01 (originalCategory  varchar(32)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.index_to_string_sink&apos;);  


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.index_to_string(CATEGORYINDEX double,CATEGORY varchar(32));" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.index_to_string(CATEGORYINDEX double,CATEGORY varchar(32));
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  INSERT INTO streamsql.index_to_string VALUES (2.0,&apos;c&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO streamsql.index_to_string VALUES (2.0,&apos;c&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL INDEX_TO_STRING_MODEL AS INDEX_TO_STRING_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL INDEX_TO_STRING_MODEL AS INDEX_TO_STRING_TRANSFORMER(array[&apos;b&apos;,&apos;a&apos;,&apos;c&apos;]);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM  t_index_to_string_dbsource_01 (CATEGORYINDEX double,CATEGORY varchar(32)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.index_to_string&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM  t_index_to_string_dbsource_01 (CATEGORYINDEX double,CATEGORY varchar(32)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.index_to_string&apos;);  </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  insert into t_index_to_string_dbsink_01 SELECT * from  index_to_string(INDEX_TO_STRING_MODEL,t_index_to_string_dbsource_01);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> insert into t_index_to_string_dbsink_01 SELECT originalCategory from  index_to_string(INDEX_TO_STRING_MODEL,t_index_to_string_dbsource_01);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11  TC-select * from streamsql.index_to_string-01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from streamsql.index_to_string_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="99">c</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1034 LDBX081-11 vectorslicer" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 DROP MODEL VECTORSLICER_MODEL IF EXISTS;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP MODEL VECTORSLICER_MODEL IF EXISTS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream  if exists t_vectorslicer_dbsource_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream  if exists t_vectorslicer_dbsource_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop stream if exists t_vectorslicer_dbsink_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_vectorslicer_dbsink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists streamsql.vectorslicer;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.vectorslicer;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 create table streamsql.vectorslicer(features double array)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table streamsql.vectorslicer(features double array)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into streamsql.vectorslicer values (array[0.0, 1.0, 0.0, 0.0, 18.0]),(array[0.0, 0.0, 0.0, 0.0, 19.0 ]);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into streamsql.vectorslicer values (array[0.0, 1.0, 0.0, 0.0, 18.0]),(array[0.0, 0.0, 0.0, 0.0, 19.0 ]);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE MODEL VECTORSLICER_MODEL AS VECTORSLICER_TRANSFORMER();" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE MODEL VECTORSLICER_MODEL AS VECTORSLICER_TRANSFORMER();</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM  t_vectorslicer_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.vectorslicer&apos;);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM  t_vectorslicer_dbsource_01 (features double array) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.vectorslicer&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 drop table if exists vectorslicer_sink;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists streamsql.vectorslicer_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE TABLE streamsql.vectorslicer_sink(features double array,selectFeatures  double array);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE streamsql.vectorslicer_sink(features double array,selectFeatures  double array);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 CREATE STREAM  t_vectorslicer_dbsink_01 (features double array,selectFeatures  double array) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.vectorslicer_sink&apos;);     " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM  t_vectorslicer_dbsink_01 (features double array,selectFeatures  double array) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;,&apos;username&apos;: &apos;${udb}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.vectorslicer_sink&apos;);  


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 insert into t_vectorslicer_dbsink_01 SELECT * from  vectorslicer(VECTORSLICER_MODEL, t_vectorslicer_dbsource_01); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_vectorslicer_dbsink_01 SELECT * from  vectorslicer(VECTORSLICER_MODEL, t_vectorslicer_dbsource_01);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1034 LDBX081-11 TC-select * from streamsql.vectorslicer_sink_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from streamsql.vectorslicer_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1634278384">ARRAY[0.0E0,0.0E0,0.0E0,0.0E0,19.0E0]	ARRAY[0.0E0,0.0E0]</stringProp>
                    <stringProp name="-553133811">ARRAY[0.0E0,1.0E0,0.0E0,0.0E0,18.0E0]	ARRAY[0.0E0,1.0E0]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="643 SQL501 Streaming SQL: Build-in Functions " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="643 SQL501 TEST not" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop stream if exists  t_jdbcsource_not_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_not_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop stream if exists  t_jdbcsink_not_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_not_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop table if exists  notsink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists  notsink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 create table notsink(data varchar(20),data1 int);" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table notsink(data varchar(20),data1 int);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 CREATE STREAM t_jdbcsource_not_bch_01 (data string,data1 int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;regexp_extract&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_not_bch_01 (data string,data1 int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;regexp_extract&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501  CREATE STREAM t_jdbcsink_not_bch_01 (data string,data1 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;notsink&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_not_bch_01 (data string,data1 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;notsink&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 insert into t_jdbcsink_not_bch_01 select data,data1 from t_jdbcsource_not_bch_01 WHERE NOT (data1 = 34);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_not_bch_01 select data,data1 from t_jdbcsource_not_bch_01 WHERE NOT (data1 = 34);
  </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501-02 TC-TEST not-01" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from notsink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-684352098">233334577	443444467</stringProp>
                  <stringProp name="214350314">4568	687856</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop stream if exists  t_jdbcsource_not_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_not_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop stream if exists  t_jdbcsink_not_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsink_not_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop table if exists  notsink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists  notsink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="643 SQL501 TEST crypto hash" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop stream if exists  t_jdbcsource_hash_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_hash_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501  CREATE STREAM t_jdbcsource_hash_bch_01 (id int,id1 string,id2 double,id3 string,time1 timestamp,id4 bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;pow&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsource_hash_bch_01 (id int,id1 string,id2 double,id3 string,time1 timestamp,id4 bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;pow&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 TC-sha224-01 E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 60000;
SELECT sha2(id1,224) FROM t_jdbcsource_hash_bch_01;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-992680">4cfc3a1811fe40afa401b25ef7fa0379f1f7c1930a04f8755d678474</stringProp>
                  <stringProp name="-1261736773">31da1a042dc910775ed8b487afbdafd929a7afdeaadc660cb963bd26</stringProp>
                  <stringProp name="1418453249">e25388fde8290dc286a6164fa2d97e551b53498dcbf7bc378eb1f178</stringProp>
                  <stringProp name="664593071">271f93f45e9b4067327ed5c8cd30a034730aaace4382803c3e1d6c2f</stringProp>
                  <stringProp name="2114944863">291c87136c406bc95b0e54cd0213a19ae87a501cf3224fef31b4c45f</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 TC-sha256-02 E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 60000;
SELECT sha2( id1,256 ) FROM t_jdbcsource_hash_bch_01;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1458308250">4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce</stringProp>
                  <stringProp name="1994789650">e7f6c011776e8db7cd330b54174fd76f7d0216b612387a5ffcfb81e6f0919683</stringProp>
                  <stringProp name="1726220576">6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b</stringProp>
                  <stringProp name="-326471099">4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a</stringProp>
                  <stringProp name="1690707262">d6d824abba4afde81129c71dea75b8100e96338da5f416d2f69088f1960cb091</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 TC-sha384-03 E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 60000;
SELECT sha2( id1 ,384) FROM t_jdbcsource_hash_bch_01;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1785047418">6af11c83586822c3c74bb3ccef728bae5cfee67cad82dd7402711e530bec782fc02aff273569d22ddffb3b145f343768</stringProp>
                  <stringProp name="670174823">f99c53a03fdd8cbfc806c80d467f488bc7cd7003a8af08a46ca34928aa9241b6cd090353e325d30575b72b03cea996c2</stringProp>
                  <stringProp name="1278064224">47f05d367b0c32e438fb63e6cf4a5f35c2aa2f90dc7543f8a41a0f95ce8a40a313ab5cf36134a2068c4c969cb50db776</stringProp>
                  <stringProp name="-1458570613">bcf6e0ebc8c5185372c8d8f0f449727bd52c5284860f1c46ea53dc943fabf40c75067629813f12bd994d75a39f44843d</stringProp>
                  <stringProp name="-751798732">ad15a6bc57bd11df55632c295ecbc629d643483e85a6ca0c0b744e31d65dac3092cd0b72dea95aa444e8e6dd1d085e41</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 TC-sha512-04 E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 60000;
SELECT sha2( id1,512 ) FROM t_jdbcsource_hash_bch_01;

                    </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1860087598">3bafbf08882a2d10133093a1b8433f50563b93c14acd05b79028eb1d12799027241450980651994501423a66c276ae26c43b739bc65c4e16b10c3af6c202aebb</stringProp>
                  <stringProp name="1694202530">3c9ad55147a7144f6067327c3b82ea70e7c5426add9ceea4d07dc2902239bf9e049b88625eb65d014a7718f79354608cab0921782c643f0208983fffa3582e40</stringProp>
                  <stringProp name="-996481300">4dff4ea340f0a823f15d3f4f01ab62eae0e5da579ccb851f8db9dfe84c58b2b37b89903a740e1ee172da793a6e79d560e5f7f9bd058a12a280433ed6fa46510a</stringProp>
                  <stringProp name="-1794539749">a321d8b405e3ef2604959847b36d171eebebc4a8941dc70a4784935a4fca5d5813de84dfa049f06549aa61b20848c1633ce81b675286ea8fb53db240d831c568</stringProp>
                  <stringProp name="-743047153">73ce1b4371978a11dfcfd913a24fffab97c1d4d5c4407a7ee5520b46dc50614c17d4ed1622be4e9c078c96c7bf80ee1d2817a196ca49695d279805f72dba0237</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 TC-TIMESTAMPDIFF-05 E" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select TIMESTAMPDIFF(DAY, timestamp &apos;2003-01-02 10:00:00&apos;, timestamp &apos;2003-01-03 10:00:00&apos;) from t_jdbcsource_hash_bch_01;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">db中没有此函数</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="1444">-1</stringProp>
                  <stringProp name="1444">-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="643 SQL501 drop stream if exists  t_jdbcsource_hash_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  t_jdbcsource_hash_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05 create  linkoopdb source" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-key" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-KEY-STREAM" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_011;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_011;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_012;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_012;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_013;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_013;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05  CREATE STREAM bch_linkoopdb_source_011 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_011 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);




 
 
 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-STREAM-01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839663">BCH_LINKOOPDB_SOURCE_011</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 CREATE stream bch_linkoopdb_source_012 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream bch_linkoopdb_source_012 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-stream-02" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839664">BCH_LINKOOPDB_SOURCE_012</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 CREATE  bch_linkoopdb_source_013 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE  bch_linkoopdb_source_013 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">NO STREAM</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_011;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_011;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_012;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_012;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_013;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_013;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-KEY-properties  type" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_014;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_014;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_015;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_015;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 CREATE stream bch_linkoopdb_source_014 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) Properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream bch_linkoopdb_source_014 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) Properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-Properties-03" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839666">BCH_LINKOOPDB_SOURCE_014</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05  CREATE stream bch_linkoopdb_source_015 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string)  (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream bch_linkoopdb_source_015 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string)  (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">NO STREAM</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_014;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_014;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_015;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_015;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-KEY-key  type" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_002;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_002;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_003;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_004;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_005;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_006;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_006;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_007;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_007;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_008;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_008;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_009;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_009;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-TYPE-04 E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_linkoopdb_source_001 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;TYPE&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos; );

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-Username-05E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_linkoopdb_source_002 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;Username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-TableName-06E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_linkoopdb_source_003 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;TableName&apos;: &apos;REASON&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-Password-07" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_linkoopdb_source_004 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;Password&apos;: &apos;${udb_password}&apos;,  &apos;tableName&apos;: &apos;REASON&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams-08;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839635">BCH_LINKOOPDB_SOURCE_004</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-Connector-09E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_linkoopdb_source_005 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;Connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos; );


 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-NO KEYTYPE-10E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_linkoopdb_source_006 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos; &apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-Driver-11E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_linkoopdb_source_007 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;Driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-NO PASSWORD-12" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_008 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-SHOW STREAMS-13" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839639">BCH_LINKOOPDB_SOURCE_008</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-DBUrl-14E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_009 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;DBUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-fetchSize-15" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_010 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;fetchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams-16" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839662">BCH_LINKOOPDB_SOURCE_010</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_008;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_008;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_007;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_007;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_002;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_002;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_005;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_009;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_009;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_003;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_006;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_006;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_004;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-name" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-NAME-table name " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS BCH_linkoopdb_source_016;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS BCH_linkoopdb_source_016;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS s_linkoopdb_source_017;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS s_linkoopdb_source_017;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS 白春红linkoopdb_source_018;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 白春红linkoopdb_source_018;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS 123linkoopdb_source_019;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 123linkoopdb_source_019;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS b-123 ;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS b-123;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS b#$123;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS b#$123;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;b#$123&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;b#$123&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS&quot;b#$123ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&quot;;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS&quot;b#$123ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS date ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS date;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;bch&quot;  ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS&quot;bch&quot; ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;BCH&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;BCH&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05  CREATE stream BCH_linkoopdb_source_016 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream BCH_linkoopdb_source_016 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams-stream BCH_linkoopdb_source_016;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839668">BCH_LINKOOPDB_SOURCE_016</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 CREATE stream s_linkoopdb_source_017 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE stream s_linkoopdb_source_017 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams-stream s_linkoopdb_source_017" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1741306231">S_LINKOOPDB_SOURCE_017</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05  CREATE stream 白春红linkoopdb_source_018 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;tableName&apos;: &apos;REASON&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream 白春红linkoopdb_source_018 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;tableName&apos;: &apos;REASON&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams-stream 白春红linkoopdb_source_018" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1615012216">白春红LINKOOPDB_SOURCE_018</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-stream 123linkoopdb_source_019 E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream 123linkoopdb_source_019 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-stream b-123 E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream b-123 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-stream b#$123 E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream b#$123 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-stream &quot;b#$123&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream &quot;b#$123&quot; (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1455866097">b#$123</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-stream &quot;b#$123ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&quot; E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream &quot;b#$123ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&quot; (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos; );</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-STREAM date " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM date (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);


 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-STREAM bch" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-STREAM  streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="65575">BCH</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-STREAM &quot;bch&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM &quot;bch&quot; (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);

 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="97351">bch</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-STREAM &quot;BCH&quot; E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM &quot;BCH&quot; (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);

 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS BCH_linkoopdb_source_016;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS BCH_linkoopdb_source_016;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;bch&quot;  ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS&quot;bch&quot; ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS b-123 ;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS b-123;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS date ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS date;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS b#$123;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS b#$123;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;b#$123&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;b#$123&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS 123linkoopdb_source_019;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 123linkoopdb_source_019;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS 白春红linkoopdb_source_018;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 白春红linkoopdb_source_018;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS s_linkoopdb_source_017;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS s_linkoopdb_source_017;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS&quot;b#$123ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&quot;;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS&quot;b#$123ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS &quot;BCH&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;BCH&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-NAME-field name" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF bch_linkoopdb_source_022;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_022;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_023;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_023;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_024;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_024;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_025;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_025;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05  DROP STREAM IF EXISTS bch_linkoopdb_source_026;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_026;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_027;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_027;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-field-time " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_022 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, time string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-field-11 E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_023 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, 11 string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;tableName&apos;: &apos;REASON&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-field-ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg11 E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_024 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg11 string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-field-hh_11" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_025 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, hh_11 string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839698">BCH_LINKOOPDB_SOURCE_025</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-field-#@  E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_026 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, #@ string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-field-&quot;#@&quot; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_027 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, &quot;#@&quot; string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839700">BCH_LINKOOPDB_SOURCE_027</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF bch_linkoopdb_source_022;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_022;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05  DROP STREAM IF EXISTS bch_linkoopdb_source_026;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_026;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_025;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_025;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_024;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_024;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_023;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_023;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_027;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_027;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-quote" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF bch_linkoopdb_source_028;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_028;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_029;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_029;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_030;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_030;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-type no &apos; &apos; E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_028 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, &quot;#@&quot; string) properties (type: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-driver no :E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_029 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, &quot;#@&quot; string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos; &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos; );
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-source ，E" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_030 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string, &quot;#@&quot; string) properties (&apos;type&apos;: &apos;source&apos;， &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;REASON&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF bch_linkoopdb_source_028;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_028;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_029;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_029;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 DROP STREAM IF EXISTS bch_linkoopdb_source_030;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_030;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-value" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="648 SQL008-05-VALUE-key value " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF bch_linkoopdb_source_036;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_036;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF EXISTS bch_linkoopdb_source_037;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_037;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF EXISTS bch_linkoopdb_source_038;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_038;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF EXISTS bch_linkoopdb_source_039;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_039;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_040;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_040;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_041;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_041;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_042;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_042;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_043;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_043;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_044;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_044;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_045;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_045;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-type:source1 E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_036 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source1&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-type:sourcE" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_037 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;sourcE&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839731">BCH_LINKOOPDB_SOURCE_037</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-Jdbc" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_038 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;Jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839732">BCH_LINKOOPDB_SOURCE_038</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-username: int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_039 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;Jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.Jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;int&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839733">BCH_LINKOOPDB_SOURCE_039</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-&apos;connector&apos;: &apos;Jdbc-&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_040 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;Jdbc-&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.Jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-&apos;tableName&apos;: &apos;￥#_-&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_041 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;Jdbc&apos;, &apos;driver&apos;: &apos;Ccom.datapps.linkoopdb.Jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839756">BCH_LINKOOPDB_SOURCE_041</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-&apos;tableName&apos;: &apos; &apos; E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_042 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;  E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839757">BCH_LINKOOPDB_SOURCE_042</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-&apos;username&apos;: &apos;ADMIN&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_043 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;ADMIN&apos;, &apos;password&apos;: &apos;${udb_password}&apos;,&apos;tableName&apos;: &apos;￥#_-&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839758">BCH_LINKOOPDB_SOURCE_043</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-&apos;username&apos;: &apos;ADMIN_-&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_044 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;ADMIN_-&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-show streams; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839759">BCH_LINKOOPDB_SOURCE_044</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-&apos;username&apos;: &apos; &apos;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_linkoopdb_source_045 (R_REASON_SK int, R_REASON_ID string, R_REASON_DESC string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node2:9105/ldb&apos;, &apos;username&apos;: &apos;&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;￥#_-&apos;);


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="648 SQL008-05 TC-&apos;show streams;  E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="869839760">BCH_LINKOOPDB_SOURCE_045</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF bch_linkoopdb_source_036;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_036;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF bch_linkoopdb_source_036;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_036;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_042;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_042;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_044;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_044;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_045;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_045;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF EXISTS bch_linkoopdb_source_039;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_039;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_040;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_040;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF EXISTS bch_linkoopdb_source_038;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_038;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_041;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_041;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP STREAM IF EXISTS bch_linkoopdb_source_037;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_037;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" DROP STREAM IF EXISTS bch_linkoopdb_source_043;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_linkoopdb_source_043;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502 datatype" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-varchar cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tvarchar_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tvarchar_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tvarcharsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tvarcharsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tvarchar;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tvarchar;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.tvarchar(booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20)); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.tvarchar(booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20));
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.tvarchar values (&apos;true&apos;,&apos;iii9&apos;,&apos;-128&apos;,&apos;0.9786&apos;,&apos;10:09:09&apos;,&apos;2019-09-09 09:08:09&apos;,&apos;2019-09-08&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.tvarchar values (&apos;true&apos;,&apos;iii9&apos;,&apos;-128&apos;,&apos;0.9786&apos;,&apos;10:09:09&apos;,&apos;2019-09-09 09:08:09&apos;,&apos;2019-09-08&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502  CREATE STREAM t_dbsource_tvarchar_bch (booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tvarchar&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_tvarchar_bch (booleanvarchar varchar(20),tvarchar varchar(20),datavarchar varchar(20),floatvarhcar varchar(20),timevarchar varchar(20),timestampvarchar varchar(20),datevarchar varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tvarchar&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists tvarchar;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table tvarchar(tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table tvarchar(tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  tvarchar;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 CREATE STREAM t_tvarchar_jdbcsink_bch (tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tvarchar&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_tvarchar_jdbcsink_bch (tboolean boolean,tvarchar varchar(20),ttinyint tinyint,tsmallint smallint,tINT INT,tbigint bigint,tFLOAT FLOAT,tdouble double,ttime time,ttimestamp timestamp,tdate date) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tvarchar&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_dbsource_tvarcharsink_bch select cast(booleanvarchar as Boolean),cast(tvarchar as varchar),cast(datavarchar as tinyint),cast(datavarchar as smallint),cast(datavarchar as INT),cast(datavarchar as bigint), cast(floatvarhcar as FLOAT),cast(floatvarhcar as double),cast(timevarchar as time),cast(timestampvarchar as timestamp),cast(datevarchar as date)from t_dbsource_tvarchar_bch;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_tvarchar_jdbcsink_bch select cast(booleanvarchar as Boolean),cast(tvarchar as varchar),cast(datavarchar as tinyint),cast(datavarchar as smallint),cast(datavarchar as INT),cast(datavarchar as bigint), cast(floatvarhcar as FLOAT),cast(floatvarhcar as double),cast(timevarchar as time),cast(timestampvarchar as timestamp),cast(datevarchar as date)from t_dbsource_tvarchar_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  tvarchar-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="930051924">true	iii9	-128	-128	-128	-128	0.9786	0.9786	10:09:09	2019-09-09 09:08:09.0	2019-09-08</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tvarchar_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tvarchar_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tvarcharsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tvarcharsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tvarchar;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tvarchar;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists tvarchar;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tvarchar;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-boolean/tinyint/smallint cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tbootiny_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tbootiny_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tbootinysink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tbootinysink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tbootiny; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tbootiny;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.tbootiny(booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.tbootiny(booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.tbootiny values (true,127,-32768,-128);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.tbootiny values (true,127,-32768,-128);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502   CREATE STREAM t_dbsource_tbootiny_bch (booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tbootiny&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_tbootiny_bch (booleanboolean boolean,datatinyint tinyint,datasmallint smallint,tinysmallint smallint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.tbootiny&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists tbootiny;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table tbootiny(booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table tbootiny(booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  tbootiny;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 CREATE STREAM t_dbsource_tbootinysink_bch (booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tbootiny&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_tbootiny_jdbcsink_bch (booleanboolean boolean,varcharboolean varchar(20),varchartinyint varchar(20),tinyinttinyint tinyint,tinyintsmallint smallint,tinyintint int,tinyintbig bigint,tinyintfloat float,tinyintdouble double,smallintvarchar varchar(20),smallinttinyint tinyint,smallintsmallint smallint,smallintint int,smallintbigint bigint,smallintfloat float,smallintdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;tbootiny&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_dbsource_tbootinysink_bch select cast(booleanboolean as Boolean),cast(booleanboolean as varchar),cast(datatinyint as VARCHAR),cast(datatinyint as tinyint),cast(datatinyint as smallint),cast(datatinyint as INT),cast(datatinyint as bigint), cast(datatinyint as FLOAT),cast(datatinyint as double),cast(datasmallint as varchar),cast(tinysmallint as tinyint),cast(datasmallint as smallint),cast(datasmallint as INT),cast(datasmallint as bigint),cast(datasmallint as FLOAT),cast(datasmallint as double)from t_dbsource_tbootiny_bch;    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_tbootiny_jdbcsink_bch select cast(booleanboolean as Boolean),cast(booleanboolean as varchar),cast(datatinyint as VARCHAR),cast(datatinyint as tinyint),cast(datatinyint as smallint),cast(datatinyint as INT),cast(datatinyint as bigint), cast(datatinyint as FLOAT),cast(datatinyint as double),cast(datasmallint as varchar),cast(tinysmallint as tinyint),cast(datasmallint as smallint),cast(datasmallint as INT),cast(datasmallint as bigint),cast(datasmallint as FLOAT),cast(datasmallint as double)from t_dbsource_tbootiny_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  tbootiny-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1107347313">true	true	127	127	127	127	127	127.0	127.0	-32768	-128	-32768	-32768	-32768	-32768.0	-32768.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tbootiny_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tbootiny_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.tbootiny; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.tbootiny;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_tbootinysink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_tbootinysink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists tbootiny;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists tbootiny;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-INT/bigint cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_intbigint_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_intbigint_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_intbigint_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_intbigint_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.intbigint; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.intbigint;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.intbigint(dataint int,databigint bigint); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.intbigint(dataint int,databigint bigint);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.intbigint values (127,-128);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.intbigint values (127,-128);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 CREATE STREAM t_dbsource_intbigint_bch (dataint int,databigint bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.intbigint&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_intbigint_bch (dataint int,databigint bigint) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.intbigint&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists intbigint;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table intbigint(intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table intbigint(intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  intbigint;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502  CREATE STREAM t_intbigint_jdbcsink_bch (intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;intbigint&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_intbigint_jdbcsink_bch (intvarchar varchar(20),inttinyint tinyint,intsmallint smallint, intint int,intbig bigint,intfloat float,intdouble double,bigintvarchar varchar(20),bigtinyint tinyint,bigsmallint smallint,biginting int,bigbigint bigint,bigfloat float,bigdouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;intbigint&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_intbigint_jdbcsink_bch select cast(dataint as varchar),cast(dataint as tinyint),cast(dataint as smallint),cast(dataint as int),cast(dataint as bigint),cast(dataint as float),cast(dataint as double),cast(databigint as varchar),cast(databigint as tinyint),cast(databigint as smallint),cast(databigint as int),cast(databigint as bigint),cast(databigint as float),cast(databigint as double)from t_dbsource_intbigint_bch;     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_intbigint_jdbcsink_bch select cast(dataint as varchar),cast(dataint as tinyint),cast(dataint as smallint),cast(dataint as int),cast(dataint as bigint),cast(dataint as float),cast(dataint as double),cast(databigint as varchar),cast(databigint as tinyint),cast(databigint as smallint),cast(databigint as int),cast(databigint as bigint),cast(databigint as float),cast(databigint as double)from t_dbsource_intbigint_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  intbigint-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-586559605">127	127	127	127	127	127.0	127.0	-128	-128	-128	-128	-128	-128.0	-128.0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_intbigint_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_intbigint_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_intbigint_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_intbigint_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.intbigint; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.intbigint;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists intbigint;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists intbigint;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-float/double cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_floatdou_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_floatdou_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_floatdou_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_floatdou_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.floatdou; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.floatdou;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.floatdou(datafloat float,datadouble double); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.floatdou(datafloat float,datadouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.floatdou values (126.98,-127.97);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.floatdou values (126.98,-127.97);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 CREATE STREAM t_dbsource_floatdou_bch (datafloat float,datadouble double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.floatdou&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_floatdou_bch (datafloat float,datadouble double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.floatdou&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists floatdou;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table floatdou(floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table floatdou(floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  floatdou;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 CREATE STREAM t_floatdou_jdbcsink_bch (floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;floatdou&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_floatdou_jdbcsink_bch (floatvarchar varchar(20),floattinyint tinyint,floatsmallint smallint, floatint int,floatbig bigint,floatfloat float,floatdouble double,doublevarchar varchar(20),doubletinyint tinyint,dousmallint smallint,doubleint int,doubigint bigint,doufloat float,doudouble double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;floatdou&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_floatdou_jdbcsink_bch select cast(datafloat as varchar),cast(datafloat as tinyint),cast(datafloat as smallint),cast(datafloat as int),cast(datafloat as bigint),cast(datafloat as float),cast(datafloat as double),cast(datadouble as varchar),cast(datadouble as tinyint),cast(datadouble as smallint),cast(datadouble as int),cast(datadouble as bigint),cast(datadouble as float),cast(datadouble as double) from t_dbsource_floatdou_bch;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_floatdou_jdbcsink_bch select cast(datafloat as varchar),cast(datafloat as tinyint),cast(datafloat as smallint),cast(datafloat as int),cast(datafloat as bigint),cast(datafloat as float),cast(datafloat as double),cast(datadouble as varchar),cast(datadouble as tinyint),cast(datadouble as smallint),cast(datadouble as int),cast(datadouble as bigint),cast(datadouble as float),cast(datadouble as double) from t_dbsource_floatdou_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  floatdou-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1941728682">126.98	126	126	126	126	126.98	126.98	-127.97	-127	-127	-127	-127	-127.97	-127.97</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_floatdou_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_floatdou_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.floatdou; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.floatdou;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_floatdou_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_floatdou_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists floatdou;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists floatdou;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502-date/timestamp cast others" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_timedata_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_timedata_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_timedata_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_timedata_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.timedata; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.timedata;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create table streamsql.timedata(datadate date,datatimestamp timestamp); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table streamsql.timedata(datadate date,datatimestamp timestamp);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 insert into  streamsql.timedata values (&apos;2018-09-07&apos;,&apos;2019-09-08 09:08:09&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  streamsql.timedata values (&apos;2018-09-07&apos;,&apos;2019-09-08 09:08:09&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502   CREATE STREAM t_dbsource_timedata_bch (datadate date,datatimestamp timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.timedata&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_timedata_bch (datadate date,datatimestamp timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.timedata&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists timedata;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 create table timedata(datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp DEFAULT &apos;2019-09-08 09:08:09&apos;,time1 time); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table timedata(datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp DEFAULT &apos;2019-09-08 09:08:09&apos;,time1 time);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 delete from  timedata;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502  CREATE STREAM t_timedata_jdbcsink_bch (datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp,time1 time) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;timedata&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM t_timedata_jdbcsink_bch (datevarchar varchar(20),datedate date,datetimestamp timestamp,timestampvarchar varchar(50),timestampdate date,timestampstamp1 timestamp,time1 time) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;timedata&apos;);


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_timedata_jdbcsink_bch select cast(datadate as varchar),cast(datadate as date),cast(datadate as timestamp),cast(datatimestamp as varchar),cast(datatimestamp as date),cast(datatimestamp as timestamp),cast(datatimestamp as time)from t_dbsource_timedata_bch;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_timedata_jdbcsink_bch select cast(datadate as varchar),cast(datadate as date),cast(datadate as timestamp),cast(datatimestamp as varchar),cast(datatimestamp as date),cast(datatimestamp as timestamp),cast(datatimestamp as time)from t_dbsource_timedata_bch;


 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 TC-select *  from  timedata-01;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from  timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="245320772">2018-09-07	2018-09-07	2018-09-07 00:00:00.0	2019-09-08 09:08:09.0	2019-09-08	2019-09-08 09:08:09.0	09:08:09</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_timedata_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_timedata_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.timedata; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.timedata;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_timedata_jdbcsink_bch;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_timedata_jdbcsink_bch;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502 drop table if exists timedata;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists timedata;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="735 SQL502 -create db_source " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_jdbcsink_datetype_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_datetype_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_multitype3_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_multitype3_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists streamsql.datatype;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists streamsql.datatype;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create  table  streamsql.datatype(ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar,tdecimal decimal);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create  table  streamsql.datatype(ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar(20),tdecimal decimal);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into streamsql.datatype values(-2147483648, true, 9223372036854775807,-127,98.65,4.78,&apos;2019-09-08&apos;,&apos;uy47_9&apos;,34.666);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into streamsql.datatype values(-2147483648, true, 9223372036854775807,-127,98.65,4.78,&apos;2019-09-08&apos;,&apos;uy47_9&apos;,34.666);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 CREATE STREAM t_dbsource_multitype3_bch_01 (ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.datatype&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_dbsource_multitype3_bch_01 (ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar(20),tdecimal decimal) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;, &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://${node}:9105/ldb&apos;, &apos;username&apos;: &apos;${udb}&apos;, &apos;password&apos;: &apos;${udb_password}&apos;, &apos;tableName&apos;: &apos;streamsql.datatype&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop table if exists datatype_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists datatype_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 create  table datatype_sink(ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar(20),tdecimal decimal);" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create  table datatype_sink(ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar(20),tdecimal decimal);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 735 SQL502  CREATE STREAM t_jdbcsink_datetype_bch_01 (ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar(20),tdecimal decimal) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_datetype_bch_01 (ID int, TBOOLEAN BOOLEAN, tbigint bigint,ttinyint tinyint,tdouble double,tfloat float,tdate date,tvarchar varchar(20),tdecimal decimal) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;datatype_sink&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 insert into t_jdbcsink_datetype_bch_01 select * from  t_dbsource_multitype3_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_datetype_bch_01 select * from  t_dbsource_multitype3_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 TC-test datetype" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from datatype_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="823652300">-2147483648	true	9223372036854775807	-127	98.65	4.78	2019-09-08	uy47_9	35</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_jdbcsink_datetype_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_datetype_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="735 SQL502 drop stream if exists t_dbsource_multitype3_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">drop stream if exists t_dbsource_multitype3_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="912 ISQL003 watermark策略设置" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="912 ISQL003 watermarksPeriodicAscending / watermarksPeriodicBounded " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_win_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_win_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_win_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_win_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_jdbcsink_win_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_win_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_jdbcsink_win_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_win_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  CREATE STREAM t_kafkasource_win_bch_01 (time1 timestamp,id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;windelay1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;019&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,  &apos;watermarksDelay&apos;:&apos;3600000&apos;,  &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_win_bch_01
(time1 timestamp,id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;windelay1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;019&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
 &apos;watermarksDelay&apos;:&apos;3600000&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CREATE STREAM t_kafkasource_win_bch_03 (time1 timestamp,id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;winno1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0222&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_win_bch_03
(time1 timestamp,id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;winno0306&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0222&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CREATE STREAM t_jdbcsink_win_bch_01 (time1 timestamp,time2 timestamp,users varchar,id INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;win11&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_win_bch_01 (time1 timestamp,time2 timestamp,users varchar(20),id INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;win11&apos;);




  </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CREATE STREAM t_jdbcsink_win_bch_03 (time1 timestamp,time2 timestamp,users varchar,id INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;win20&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_win_bch_03 (time1 timestamp,time2 timestamp,users varchar(20),id INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;updateMode&apos;:&apos;retract&apos;, &apos;tableName&apos;: &apos;win20&apos;);




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 alter stream t_kafkasource_win_bch_01 set properties(&apos;group.id&apos;:&apos;100${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_win_bch_01 set properties(&apos;group.id&apos;:&apos;100${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 alter stream t_kafkasource_win_bch_03 set properties(&apos;group.id&apos;:&apos;101${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafkasource_win_bch_03 set properties(&apos;group.id&apos;:&apos;101${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 delete from win11;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from win11;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 delete from win20;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from win20;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 insert into t_jdbcsink_win_bch_01 SELECT TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR), TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR), users,SUM(id) FROM t_kafkasource_win_bch_03 GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR), users;   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_win_bch_01 SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR),
users,SUM(id)
FROM t_kafkasource_win_bch_03
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR), users;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 TC-watermarksPeriodicBounded" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from win11;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1042413806">2018-12-09 19:00:00.0	2018-12-09 20:00:00.0	e	4</stringProp>
                  <stringProp name="54884867">2018-12-09 20:00:00.0	2018-12-09 21:00:00.0	e	2</stringProp>
                  <stringProp name="1486962759">2018-12-09 21:00:00.0	2018-12-09 22:00:00.0	e	4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="755162692">insert into t_jdbcsink_cep_bch002
SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 insert into t_jdbcsink_win_bch_03 SELECT TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR), TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR), users,SUM(id) FROM t_kafkasource_win_bch_01 GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR), users;   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_win_bch_03 SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR),
users,SUM(id)
FROM t_kafkasource_win_bch_01
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR), users;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 TC-watermarksPeriodicAscending" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT * from win20;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1387370142">2018-12-09 17:00:00.0	2018-12-09 18:00:00.0	e	10</stringProp>
                  <stringProp name="1476831767">2018-12-09 18:00:00.0	2018-12-09 19:00:00.0	e	4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="755162692">insert into t_jdbcsink_cep_bch002
SELECT *
FROM t_kafkasource_cep_bch002
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A+ C)
        DEFINE
            A AS A.price&gt;=10
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_win_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_win_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_jdbcsink_win_bch_03;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_win_bch_03;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_jdbcsink_win_bch_01;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_win_bch_01;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_win_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_win_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="912 ISQL003 from-source " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafka_fromsource_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafka_fromsource_bch_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  drop stream if exists t_from_source_jdbcsink_bch; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_from_source_jdbcsink_bch;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CREATE STREAM t_kafka_fromsource_bch_01 (id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;fromsource1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;009&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,   &apos;rowtime&apos;:&apos;from-source.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,  &apos;watermarksDelay&apos;:&apos;60000&apos;,  &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafka_fromsource_bch_01
(id INT,users varchar(20))
PROPERTIES    (    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;fromsource1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;009&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
 &apos;rowtime&apos;:&apos;from-source.myrowtime&apos;,
 &apos;watermarksDelay&apos;:&apos;60000&apos;,
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 alter stream t_kafka_fromsource_bch_01 set properties(&apos;group.id&apos;:&apos;300${number}&apos;);" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">alter stream t_kafka_fromsource_bch_01 set properties(&apos;group.id&apos;:&apos;300${number}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop table if exists from_source; " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists from_source;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 create table from_source(data1 timestamp default &apos;2019-09-09 09:09:09&apos;,data2  timestamp default &apos;2019-09-09 09:09:09&apos;,data3 varchar(20),data4 int); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table from_source(data1 timestamp default &apos;2019-09-09 09:09:09&apos;,data2  timestamp default &apos;2019-09-09 09:09:09&apos;,data3 varchar(20),data4 int);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CREATE STREAM t_from_source_jdbcsink_bch (data1 timestamp,data2  timestamp ,data3 varchar(20),data4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;from_source&apos;);  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_from_source_jdbcsink_bch (data1 timestamp,data2  timestamp ,data3 varchar(20),data4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;from_source&apos;);

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 insert into  t_from_source_jdbcsink_bch  SELECT TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; SECOND), TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; SECOND), users,SUM(id) FROM t_kafka_fromsource_bch_01 GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; SECOND), users;   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  t_from_source_jdbcsink_bch  SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; SECOND),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; SECOND),
users,SUM(id)
FROM t_kafka_fromsource_bch_01
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; SECOND), users;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 TC-select * from  from_source; " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  from_source;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1373287848">2019-03-08 06:20:45.0	2019-03-08 06:20:46.0	a	1</stringProp>
                  <stringProp name="-1373286886">2019-03-08 06:20:45.0	2019-03-08 06:20:46.0	b	2</stringProp>
                  <stringProp name="-1373285924">2019-03-08 06:20:45.0	2019-03-08 06:20:46.0	c	3</stringProp>
                  <stringProp name="207323299">2019-03-08 06:20:46.0	2019-03-08 06:20:47.0	g	4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  SHOW JOBS;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jobid</stringProp>
                <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 SHOW JOBS E;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW JOBS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafka_fromsource_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafka_fromsource_bch_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  drop stream if exists t_from_source_jdbcsink_bch; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_from_source_jdbcsink_bch;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="912 ISQL003 custom" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_custom_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_custom_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_custom_bch_02;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_custom_bch_02;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_custom_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_custom_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003  CREATE STREAM t_kafkasource_custom_bch_01 (time1 timestamp,id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;CustomerWatermark&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;021&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;custom&apos;,   &apos;rowtime.watermarks.class&apos;:&apos;com.datapps.CustomerWatermark&apos;,&#x9;  &apos;separator&apos;:&apos;,&apos; );  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_custom_bch_01
(time1 timestamp,id INT,users varchar(20))
properties(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;CustomerWatermark&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;021&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;custom&apos;,
  &apos;rowtime.watermarks.class&apos;:&apos;com.datapps.CustomerWatermark&apos;,	
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CREATE STREAM t_kafkasource_custom_bch_02 (id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;fromsource1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0012&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;from-source.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;custom&apos;,   &apos;rowtime.watermarks.class&apos;:&apos;com.datapps.CustomerWatermark&apos;,&#x9;  &apos;separator&apos;:&apos;,&apos; );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_custom_bch_02
(id INT,users varchar(20))
properties(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;fromsource1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0012&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;from-source.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;custom&apos;,
  &apos;rowtime.watermarks.class&apos;:&apos;com.datapps.CustomerWatermark&apos;,	
 &apos;separator&apos;:&apos;,&apos; );
 




 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 CREATE STREAM t_kafkasource_custom_bch_03 (time1 timestamp,id INT,users varchar) PROPERTIES    (      &apos;type&apos;: &apos;source&apos;,      &apos;connector&apos;: &apos;kafka&apos;,      &apos;version&apos;: &apos;0.10&apos;,      &apos;topic&apos;: &apos;windelay1&apos;,      &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,      &apos;group.id&apos;: &apos;0012120&apos;,      &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,      &apos;format&apos;: &apos;csv&apos; ,    &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,   &apos;rowtime.watermarks.type&apos;:&apos;custom&apos;,   &apos;rowtime.watermarks.class&apos;:&apos;com.datapps.CustomerWatermarkDelay&apos;,&#x9;  &apos;separator&apos;:&apos;,&apos; );    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_kafkasource_custom_bch_03
(time1 timestamp,id INT,users varchar(20))
properties(    
 &apos;type&apos;: &apos;source&apos;,    
 &apos;connector&apos;: &apos;kafka&apos;,    
 &apos;version&apos;: &apos;0.10&apos;,    
 &apos;topic&apos;: &apos;windelay1&apos;,    
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node3:2181/istream/node6/kafka&apos;,    
 &apos;group.id&apos;: &apos;0012120&apos;,    
 &apos;bootstrap.servers&apos;: &apos;node6:9096&apos;,    
 &apos;format&apos;: &apos;csv&apos; , 
  &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
  &apos;rowtime.watermarks.type&apos;:&apos;custom&apos;,
  &apos;rowtime.watermarks.class&apos;:&apos;com.datapps.CustomerWatermarkDelay&apos;,	
 &apos;separator&apos;:&apos;,&apos; );
 




 
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003-TC-001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR),
users,SUM(id)
FROM t_kafkasource_custom_bch_01
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR), users;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">watermark from column no delay</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="44750034">2018-12-09 17:00:00.0	2018-12-09 18:00:00.0	a	5</stringProp>
                  <stringProp name="1387370149">2018-12-09 17:00:00.0	2018-12-09 18:00:00.0	e	17</stringProp>
                  <stringProp name="-1462915103">2018-12-09 18:00:00.0	2018-12-09 19:00:00.0	c	13</stringProp>
                  <stringProp name="54884867">2018-12-09 20:00:00.0	2018-12-09 21:00:00.0	e	2</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003-TC-002" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; SECOND),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; SECOND),
users,SUM(id)
FROM t_kafkasource_custom_bch_02
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; SECOND), users;



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">watermark from source no delay</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="587133842">2018-12-19 09:24:33.0	2018-12-19 09:24:34.0	a	1</stringProp>
                  <stringProp name="587134804">2018-12-19 09:24:33.0	2018-12-19 09:24:34.0	b	2</stringProp>
                  <stringProp name="587135766">2018-12-19 09:24:33.0	2018-12-19 09:24:34.0	c	3</stringProp>
                  <stringProp name="-2127222307">2018-12-19 09:24:34.0	2018-12-19 09:24:35.0	g	4</stringProp>
                  <stringProp name="1569925598">2018-12-19 09:36:13.0	2018-12-19 09:36:14.0	g	5</stringProp>
                  <stringProp name="212453908">2018-12-19 09:39:43.0	2018-12-19 09:39:44.0	h	6</stringProp>
                  <stringProp name="-7673465">2018-12-19 10:04:41.0	2018-12-19 10:04:42.0	n	7</stringProp>
                  <stringProp name="2019780752">2018-12-19 10:04:45.0	2018-12-19 10:04:46.0	n	8</stringProp>
                  <stringProp name="-74205477">2018-12-19 10:04:58.0	2018-12-19 10:04:59.0	t	9</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003-TC-003" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR),
users,SUM(id)
FROM t_kafkasource_custom_bch_03
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR), users;




</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">watermark from column delay</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1387370142">2018-12-09 17:00:00.0	2018-12-09 18:00:00.0	e	10</stringProp>
                  <stringProp name="1476831767">2018-12-09 18:00:00.0	2018-12-09 19:00:00.0	e	4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_custom_bch_01;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_custom_bch_01;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_custom_bch_03;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_custom_bch_03;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="912 ISQL003 drop stream if exists t_kafkasource_custom_bch_02;  " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_kafkasource_custom_bch_02;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201Streaming SQL: DQL select " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201Streaming SQL-jdbc" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test aggregate function" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201-1" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_aggre_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_aggre_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_aggre_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos; jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_aggre_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_002&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre001;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table aggre001 (tmax integer,tmin int,tavg int,tvar_pop double,tvar_samp double,tcollect int,tstddev_pop double,tstddev_samp double,tsum int,tcount int);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table aggre001 (tmax integer,tmin int,tavg int,tvar_pop double,tvar_samp double,tstddev_pop double,tstddev_samp double,tsum int,tcount int);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_aggre_bch_01 (tmax integer,tmin int,tavg int,tvar_pop double,tvar_samp double,tcollect int,tstddev_pop double,tstddev_samp double,tsum int,tcount int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos; jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre001&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_aggre_bch_01 (tmax integer,tmin int,tavg int,tvar_pop int,tvar_samp int, tstddev_pop int,tstddev_samp int,tsum int,tcount bigint) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre001&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_aggre_bch_01 select max(id), min(id), avg(id), var_pop(id), var_pop(id), var_samp(id), collect(name),stddev_pop(id),stddev_samp(id),sum(id), count(id) from t_jdbcsource_aggre_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_aggre_bch_01 select max(id), min(id), avg(id), var_pop(id), var_samp(id),stddev_pop(id),stddev_samp(id),sum(id), count(id) from t_jdbcsource_aggre_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-INT-01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from aggre001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-42374590">10	4	6	6.0	9.0	2.0	3.0	20	3</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_aggre_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_aggre_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre001;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-collect(id) E  已提bug，issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select collect(name) from t_jdbcsource_bch001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">集成版不支持</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2120596669">{zulan=1, sunli=1, lichen=1, dengchao=1}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201-2" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bch_02 (id integer) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_003&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_bch_02 (id integer) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_003&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-collect-02E    已提bug，issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select collect(id) from t_jdbcsource_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">集成版不支持</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="0"></stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201-3" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_aggre_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_aggre_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_aggre_bch_03 (id integer,name string, data float) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_004&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_aggre_bch_03 (id integer,name string, data float) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_004&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">data值为float</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre002;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table aggre002 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double);   " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table aggre002 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double);


</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_aggre_bch_02 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre002&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_aggre_bch_02 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre002&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_aggre_bch_02 select max(data),min(data),  avg(data),sum(data),stddev_pop(data),stddev_samp(data),var_samp(data),var_pop(data) from t_jdbcsource_aggre_bch_03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_aggre_bch_02 select max(data),min(data),  avg(data),sum(data),stddev_pop(data),stddev_samp(data),var_samp(data),var_pop(data) from t_jdbcsource_aggre_bch_03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-FLOAT-03;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  aggre002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1242051767">9.6	1.2	5.166666666666667	15.5	3.445125380721127	4.219399641339196	17.803333333333335	11.86888888888889</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre002;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_aggre_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_aggre_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201-4" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_AGGRE_bch_04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_AGGRE_bch_04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_aggre_bch_03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_aggre_bch_03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_AGGRE_bch_04 (data1 double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_AGGRE_bch_04 (data1 double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">double 类型</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre003;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre003;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table aggre003 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double);   " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table aggre003 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double);


</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_aggre_bch_03 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre003&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_aggre_bch_03 (tmax double,tmin double,tavg double,tsum double,tstddev_pop double,tstddev_samp double,tvar_samp double ,tvar_pop double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre003&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_aggre_bch_03 select max(data1),min(data1), avg(data1),sum(data1),stddev_pop(data1),stddev_samp(data1),var_samp(data1),var_pop(data1) from t_jdbcsource_AGGRE_bch_04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_aggre_bch_03 select max(data1),min(data1), avg(data1),sum(data1),stddev_pop(data1),stddev_samp(data1),var_samp(data1),var_pop(data1) from t_jdbcsource_AGGRE_bch_04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-DOUBLE-04;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  aggre003;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1942295303">7.85	4.55	6.466666666666666	19.4	1.3990075847622212	1.713427364475464	2.935833333333335	1.9572222222222233</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_AGGRE_bch_04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_bch004;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_aggre_bch_03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_aggre_bch_03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre003;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre003;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test select * from stream" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 null" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_nulltable_bch_08;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists  t_jdbcsource_nulltable_bch_08;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsink_aggre_bch_04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists  t_jdbcsink_aggre_bch_04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_nulltable_bch_08 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;nulltable&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_nulltable_bch_08 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;nulltable&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre004;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre004;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table aggre004 (id varchar(20),name string);   " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table aggre004 (id int,name varchar(20));


</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_aggre_bch_04 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre004&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_aggre_bch_04 (id integer,name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aggre004&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_aggre_bch_04 select * from t_jdbcsource_nulltable_bch_08;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_aggre_bch_04 select * from t_jdbcsource_nulltable_bch_08;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-test nulltable-04;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  aggre004;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="0"></stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_nulltable_bch_08;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists  t_jdbcsource_nulltable_bch_08;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsink_aggre_bch_04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists  t_jdbcsink_aggre_bch_04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists aggre004;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists aggre004;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 in\not in\exists\not exists" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_05;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_05;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_06;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_06;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_aggre_bch_06 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_006_bch&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_aggre_bch_06 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_006_bch&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_aggre_bch_05 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_aggre_bch_05 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-SELECT * FROM -05" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from t_jdbcsource_aggre_bch_05;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="911931782">1	zulan</stringProp>
                      <stringProp name="555352932">2	dengchao</stringProp>
                      <stringProp name="358839427">3	dengchao</stringProp>
                      <stringProp name="160516821">5	sunli</stringProp>
                      <stringProp name="1048020502">6	sunli</stringProp>
                      <stringProp name="1974163733">10	lichen</stringProp>
                      <stringProp name="2016029711">122	zhu</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-IN -06" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from t_jdbcsource_aggre_bch_05 where name in(select name from t_jdbcsource_aggre_bch_06);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="911931782">1	zulan</stringProp>
                      <stringProp name="358839427">3	dengchao</stringProp>
                      <stringProp name="555352932">2	dengchao</stringProp>
                      <stringProp name="160516821">5	sunli</stringProp>
                      <stringProp name="1048020502">6	sunli</stringProp>
                      <stringProp name="1974163733">10	lichen</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-NOT IN -06E  已提bug，issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from t_jdbcsource_aggre_bch_05 where name not in(select name from t_jdbcsource_aggre_bch_06);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2016029711">122	zhu</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-EXISTS -07" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from t_jdbcsource_aggre_bch_05 where exists(select name from t_jdbcsource_aggre_bch_06 where t_jdbcsource_aggre_bch_05.name=t_jdbcsource_aggre_bch_06.name);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="911931782">1	zulan</stringProp>
                      <stringProp name="358839427">3	dengchao</stringProp>
                      <stringProp name="555352932">2	dengchao</stringProp>
                      <stringProp name="160516821">5	sunli</stringProp>
                      <stringProp name="1048020502">6	sunli</stringProp>
                      <stringProp name="1974163733">10	lichen</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-NOT EXISTS -08E  已提bug，issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from t_jdbcsource_aggre_bch_05 where not exists(select name from t_jdbcsource_aggre_bch_06 where t_jdbcsource_aggre_bch_05.name=t_jdbcsource_aggre_bch_06.name);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2017072396">122,zhu</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-have null value -09" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from t_jdbcsource_aggre_bch_06;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="911931782">1	zulan</stringProp>
                      <stringProp name="358839427">3	dengchao</stringProp>
                      <stringProp name="1048020502">6	sunli</stringProp>
                      <stringProp name="1974163733">10	lichen</stringProp>
                      <stringProp name="-1908586854">null	dog</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_05;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_05;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_aggre_bch_06;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_aggre_bch_06;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 select field from stream" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test between and/not between and/like/not like" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test between and" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_01;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_01;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_01;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_01;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_bet_like_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsource_bet_like_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike001;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike001;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table betlike001 (id int);  " enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table betlike001 (id int);


</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_bet_like_bch_01 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike001&apos;); " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsink_bet_like_bch_01 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike001&apos;);
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_bet_like_bch_01 select id from t_jdbcsource_bet_like_bch_01 where id between 1 and 5;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">insert into t_jdbcsink_bet_like_bch_01 select id from t_jdbcsource_bet_like_bch_01 where id between 1 and 5;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">40000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-test between and-05;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from  betlike001;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49">1</stringProp>
                        <stringProp name="50">2</stringProp>
                        <stringProp name="51">3</stringProp>
                        <stringProp name="53">5</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_01;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_01;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_01;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_01;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike001;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike001;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test not between and" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike002;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike002;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_02;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_02;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_02;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_02;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bet_like_bch_02 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsource_bet_like_bch_02 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_bet_like_bch_02 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike002&apos;); " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsink_bet_like_bch_02 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike002&apos;);
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table betlike002 (id int);  " enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table betlike002 (id int);


</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_bet_like_bch_02 select id from t_jdbcsource_bet_like_bch_02 where id not between 1 and 5;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">insert into t_jdbcsink_bet_like_bch_02 select id from t_jdbcsource_bet_like_bch_02 where id not between 1 and 5;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-test between and-06;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from  betlike002;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="54">6</stringProp>
                        <stringProp name="1567">10</stringProp>
                        <stringProp name="48689">122</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike002;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike002;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_02;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_02;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_02;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_02;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test like" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike003;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike003;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_03;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_03;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_03;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_03;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bet_like_bch_03 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsource_bet_like_bch_03 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_bet_like_bch_03 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike002&apos;); " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsink_bet_like_bch_03 (name varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike003&apos;);
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table betlike003 (name varchar(20));   " enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table betlike003 (name varchar(20));


</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_bet_like_bch_03 select name from t_jdbcsource_bet_like_bch_03 where name like &apos;deng%&apos;;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">insert into t_jdbcsink_bet_like_bch_03 select name from t_jdbcsource_bet_like_bch_03 where name like &apos;deng%&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-test between and-07;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from  betlike003;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="878314573">dengchao</stringProp>
                        <stringProp name="878314573">dengchao</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike003;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike003;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_03;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_03;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_03;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_03;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test not like" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike004;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike004;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_04;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_04;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_04;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_04;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bet_like_bch_04 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsource_bet_like_bch_04 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_bet_like_bch_04 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike002&apos;); " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsink_bet_like_bch_04 (name varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike004&apos;);
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table betlike004 (name varchar(20));   " enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table betlike004 (name varchar(20));


</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_bet_like_bch_04 select name from t_jdbcsource_bet_like_bch_04 where name not like &apos;deng%&apos;;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">insert into t_jdbcsink_bet_like_bch_04 select name from t_jdbcsource_bet_like_bch_04 where name not like &apos;deng%&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">30000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-test between and-08;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from  betlike004;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-690844852">zulan
</stringProp>
                        <stringProp name="109799625">sunli</stringProp>
                        <stringProp name="109799625">sunli</stringProp>
                        <stringProp name="-1102996789">lichen</stringProp>
                        <stringProp name="120583">zhu</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike004;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike004;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_04;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_04;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_04;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_04;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test  like and" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike005;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike005;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_05;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_05;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_05;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_05;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bet_like_bch_05 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsource_bet_like_bch_05 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_bet_like_bch_04 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike002&apos;); " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsink_bet_like_bch_05 (name varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike005&apos;);
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table betlike005 (name varchar(20));   " enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table betlike005 (name varchar(20));


</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_bet_like_bch_05 select name from t_jdbcsource_bet_like_bch_05 where name like &apos;deng%&apos; and id=2;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">insert into t_jdbcsink_bet_like_bch_05 select name from t_jdbcsource_bet_like_bch_05 where name like &apos;deng%&apos; and id=2;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-test between and-09;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from  betlike005;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="878314573">dengchao</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike005;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike005;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_05;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_05;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_05;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_05;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test  like or" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike006;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike006;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_06;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_06;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_06;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_06;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bet_like_bch_06 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsource_bet_like_bch_06 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_bet_like_bch_06 (id integer) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike002&apos;); " enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query"> CREATE STREAM t_jdbcsink_bet_like_bch_06 (name varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;betlike006&apos;);
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table betlike006 (name varchar(20));   " enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table betlike006 (name varchar(20));


</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_bet_like_bch_06 select name from t_jdbcsource_bet_like_bch_06 where name like &apos;deng%&apos; or id=10;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">insert into t_jdbcsink_bet_like_bch_06 select name from t_jdbcsource_bet_like_bch_06 where name like &apos;deng%&apos; or id=10;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-test between and-10;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from  betlike006;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="878314573">dengchao</stringProp>
                        <stringProp name="878314573">dengchao</stringProp>
                        <stringProp name="-1102996789">lichen</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">20000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists betlike006;" enabled="true">
                    <stringProp name="dataSource">${u3}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table if exists betlike006;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bet_like_bch_06;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsource_bet_like_bch_06;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_bet_like_bch_06;" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists t_jdbcsink_bet_like_bch_06;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 test null/not null" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_null_bch_07;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_null_bch_07;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_null_bch_07;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_null_bch_07;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop  table if exists nullsink;  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop  table if exists nullsink;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table nullsink (id int);  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table nullsink (id int);


</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_null_bch_07 (id int ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;nullsink&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_null_bch_07 (id int ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;nullsink&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_null_bch_07 (id integer,name varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_006_bch&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_null_bch_07 (id integer,name varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_006_bch&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_null_bch_07 select id from t_jdbcsource_null_bch_07 where id is null;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_null_bch_07 select id from t_jdbcsource_null_bch_07 where id is null;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-NULL" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from nullsink;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3392903">null</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_null_bch_08;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_null_bch_08;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop  table if exists nullsink1;  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop  table if exists nullsink1;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table nullsink1 (id int);  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table nullsink1 (id int);


</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_null_bch_08 (id int ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;nullsink1&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_null_bch_08 (id int ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;updateMode&apos;:&apos;retract&apos;,&apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;nullsink1&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_null_bch_08 select id from t_jdbcsource_null_bch_07 where id is NOT null;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_null_bch_08 select id from t_jdbcsource_null_bch_07 where id is NOT null;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-NOT NULL" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from nullsink1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49">1</stringProp>
                      <stringProp name="51">3</stringProp>
                      <stringProp name="54">6</stringProp>
                      <stringProp name="1567">10</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_null_bch_07;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_null_bch_07;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_null_bch_07;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_null_bch_07;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_null_bch_08;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_null_bch_08;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 select expression from stream" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_bch005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_bch005;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bch005 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_bch005 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 Comparison functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Comparison_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Comparison_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Comparison_sink_01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Comparison_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Comparison_sink_01(id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Comparison_sink_01(id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Comparison_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Comparison_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Comparison_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Comparison_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Comparison_01 select 2=2,2&lt;&gt;9, 2&gt;1,2&gt;=1,2&lt;=9,4 IS DISTINCT FROM 5 ,4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL ,1 in (1,2,3,4),12 not in (1,2,3,4),2&lt;=2 from t_jdbcsource_bch005;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Comparison_01 select 2=2,2&lt;&gt;9, 2&gt;1,2&gt;=1,2&lt;=9,4 IS DISTINCT FROM 5 ,4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL ,1 in (1,2,3,4),12 not in (1,2,3,4),2&lt;=2 from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Comparison functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Comparison_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-SIMILAR TO E   已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select &apos;abc&apos; SIMILAR TO &apos;%(b|d)%&apos; from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-SIMILAR TO &apos;(b|c)%&apos;  E" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select &apos;abc&apos; SIMILAR TO &apos;(b|c)%&apos; from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Logical functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Logical_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Logical_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Logical_sink_01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Logical_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Logical_sink_01(id1 boolean,id2 boolean,id3 boolean,id4 boolean);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Logical_sink_01(id1 boolean,id2 boolean,id3 boolean,id4 boolean);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Logical_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Logical_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Logical_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Logical_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Logical_01 select  true or false, true and false,false is not true,true IS UNKNOWN FROM t_jdbcsource_bch005;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Logical_01 select  true or false, true and false,false is not true,true IS UNKNOWN FROM t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Logical functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Logical_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Logical_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Logical_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Arithmetic functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Arithmetic_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Arithmetic_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Arithmetic_sink_01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Arithmetic_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Arithmetic_sink_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double);  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Arithmetic_sink_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Logical_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Logical_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Arithmetic_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Arithmetic_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Arithmetic_01 select  2*7,POWER(2,3),ABS(-9),SQRT(9),MOD(-9, 4),LN(16),exp(0), ceil(2.89),ceil(2.45),FLOOR(3.45),FLOOR(3.0), ceiling(2.45), ceil(-2.45),ceiling(-2.45),log10(1), log(3),bin(4),RAND (2),RAND (), e(),SIGN(-8), RADIANS(30), ROUND(-4.566,2),DEGREES(0.5235987755982988), sin(3.1415926/6),asin(1) FROM t_jdbcsource_bch005;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Arithmetic_01 select  2*7,POWER(2,3),ABS(-9),SQRT(9),MOD(-9, 4),LN(16),exp(0), ceil(2.89),ceil(2.45),FLOOR(3.45),FLOOR(3.0), ceiling(2.45),
ceil(-2.45),ceiling(-2.45),log10(1), log(3),bin(4),RAND (2),RAND (), e(),SIGN(-8), RADIANS(30), ROUND(-4.566,2),DEGREES(0.5235987755982988), sin(3.1415926/6),asin(1) FROM t_jdbcsource_bch005;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Arithmetic  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Arithmetic_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="330143275">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.7311469360199058	0.11443284277110732	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Arithmetic_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Arithmetic_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-log(2,1);E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select log(2,1) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">DB支持log2（1）</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-RAND_INTEGER(2,6) E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select RAND_INTEGER(2,6) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="52">4</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="50">2</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="51">3</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- PI E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select PI from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- ROUND(4.53,2) E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select ROUND(4.53,2) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 String functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__String_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__String_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists String_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists String_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table String_sink_01 (id1 varchar(20),id2 Integer,id3 Integer,id4 varchar(20),id5 varchar(20),id6 varchar(20),id7 varchar(20),id8 varchar(20),id9 varchar(20),id10 varchar(20),id11 varchar(20),id12 varchar(20),id13 varchar(20),id14 varchar(20),id15 varchar(20));  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table String_sink_01 (id1 varchar(20),id2 Integer,id3 Integer,id4 varchar(20),id5 varchar(20),id6 varchar(20),id7 varchar(20),id8 varchar(20),id9 varchar(20),id10 varchar(20),id11 varchar(20),id12 varchar(20),id13 varchar(20),id14 varchar(20),id15 varchar(20));

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink__String_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;String_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__String_01 (id1 varchar(20),id2 Integer,id3 Integer,id4 varchar(20),id5 varchar(20),id6 varchar(20),id7 varchar(20),id8 varchar(20),id9 varchar(20),id10 varchar(20),id11 varchar(20),id12 varchar(20),id13 varchar(20),id14 varchar(20),id15 varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;String_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__String_01 select &apos;F&apos; || &apos;U&apos;,CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),UPPER(&apos;zulan&apos;),LOWER(&apos;AAA3&apos;),TRIM(BOTH &apos;q&apos; FROM &apos;qddq&apos;),TRIM(LEADING &apos;q&apos; FROM &apos;qddq&apos;),TRIM(TRAILING &apos;q&apos; FROM &apos;qddq&apos;),SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5),SUBSTRING(&apos;y66hhhh&apos; FROM 3 FOR 6),INITCAP(&apos;ggg4443hj&apos;),CONCAT(&apos;34&apos;,&apos;gg&apos;,&apos;AA&apos;),CONCAT_WS(&apos;~&apos;,&apos;jjn&apos;,&apos;55&apos;),LPAD(&apos;dddd&apos;,3,&apos;??&apos;), RPAD(&apos;hi&apos;,1, &apos;**&apos;) FROM t_jdbcsource_bch005;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__String_01 select &apos;F&apos; || &apos;U&apos;,CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),UPPER(&apos;zulan&apos;),LOWER(&apos;AAA3&apos;),TRIM(BOTH &apos;q&apos; FROM &apos;qddq&apos;),TRIM(LEADING &apos;q&apos; FROM &apos;qddq&apos;),TRIM(TRAILING &apos;q&apos; FROM &apos;qddq&apos;),SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5),SUBSTRING(&apos;y66hhhh&apos; FROM 3 FOR 6),INITCAP(&apos;ggg4443hj&apos;),CONCAT(&apos;34&apos;,&apos;gg&apos;,&apos;AA&apos;),CONCAT_WS(&apos;~&apos;,&apos;jjn&apos;,&apos;55&apos;),LPAD(&apos;dddd&apos;,3,&apos;??&apos;), RPAD(&apos;hi&apos;,1, &apos;**&apos;)
FROM t_jdbcsource_bch005;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-String  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  String_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__String_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__String_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-POSITION(&apos;RF&apos; IN &apos;RF44RF&apos;) E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select POSITION(&apos;RF&apos; IN &apos;RF44RF&apos;) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- OVERLAY(&apos;ghggg&apos; PLACING &apos;ab&apos; FROM 3 FOR 3) E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select OVERLAY(&apos;ghggg&apos; PLACING &apos;ab&apos; FROM 3 FOR 3)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Temporal functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Temporal_01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Temporal_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Temporal_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Temporal_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Temporal_sink_01 (id1 Date,id2 Time,id3 Timestamp,id4 Long,id5 Long,id6 Long,id7 Long,id8 Long,id9 Long,id10 Long,id11 Long,id12 Long); " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Temporal_sink_01 (id1 Date,id2 Time,id3 Timestamp,id4 Long,id5 Long,id6 Long,id7 Long,id8 Long,id9 Long,id10 Long,id11 Long,id12 Long);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Temporal_01 (id1 Date,id2 Time,id3 Timestamp,id4 Long,id5 Long,id6 Long,id7 Long,id8 Long,id9 Long,id10 Long,id11 Long,id12 Long) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Temporal_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Temporal_01 (id1 Date,id2 Time,id3 Timestamp,id4 bigint,id5 bigint,id6 bigint,id7 bigint,id8 bigint,id9 bigint,id10 bigint,id11 bigint,id12 bigint) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Temporal_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Temporal_01 select DATE &apos;2018-09-10&apos;, TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;, YEAR(DATE &apos;1994-09-27&apos;),QUARTER(DATE &apos;1994-09-27&apos;),MONTH(DATE &apos;1994-09-27&apos;),DAYOFYEAR(DATE &apos;1994-09-27&apos;),DAYOFMONTH(DATE &apos;1994-09-27&apos;),DAYOFWEEK(DATE &apos;1994-09-27&apos;),HOUR(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),SECOND(TIMESTAMP &apos;1994-09-27 13:14:15&apos;) FROM t_jdbcsource_bch005;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Temporal_01 select DATE &apos;2018-09-10&apos;, TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;, YEAR(DATE &apos;1994-09-27&apos;),QUARTER(DATE &apos;1994-09-27&apos;),MONTH(DATE &apos;1994-09-27&apos;),DAYOFYEAR(DATE &apos;1994-09-27&apos;),DAYOFMONTH(DATE &apos;1994-09-27&apos;),DAYOFWEEK(DATE &apos;1994-09-27&apos;),HOUR(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),SECOND(TIMESTAMP &apos;1994-09-27 13:14:15&apos;)
FROM t_jdbcsource_bch005;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Temporal  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Temporal_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Temporal_01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Temporal_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CURRENT_DATE " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CURRENT_DATE from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CURRENT_TIME " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CURRENT_TIME from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CURRENT_TIMESTAMP " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CURRENT_TIMESTAMP from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- LOCALTIME  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select LOCALTIME from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- LOCALTIMESTAMP E 已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select LOCALTIMESTAMP from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- EXTRACT(DAY FROM DATE &apos;2006-06-05&apos;) E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select EXTRACT(DAY FROM DATE &apos;2006-06-05&apos;)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- FLOOR(TIME &apos;12:44:31&apos; TO MINUTE)  E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select FLOOR(TIME &apos;12:44:31&apos; TO MINUTE)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CEIL(TIME &apos;12:44:31&apos; TO MINUTE)  E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CEIL(TIME &apos;12:44:31&apos; TO MINUTE)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- WEEK(DATE &apos;1994-09-27&apos;) E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select WEEK(DATE &apos;1994-09-27&apos;)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-INTERVAL &apos;2-10&apos; YEAR TO MONTH   E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select  INTERVAL &apos;2-10&apos; YEAR TO MONTH  from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-DATE_FORMAT(&apos;2017-09-01 21:38:05&apos;, &apos;%Y, %d %M&apos;) E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select DATE_FORMAT(TIMESTAMP &apos;2017-09-01 21:38:05&apos;,&apos;%Y, %d %M&apos;) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-TIMESTAMPADD(WEEK, 1, DATE &apos;2003-01-02&apos;)  E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select TIMESTAMPADD(WEEK, 1, DATE &apos;2003-01-02&apos;) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- (TIME &apos;2:55:00&apos;, INTERVAL &apos;1&apos; HOUR) OVERLAPS (TIME &apos;3:30:00&apos;, INTERVAL &apos;2&apos; HOUR)  E  已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select (TIME &apos;2:55:00&apos;, INTERVAL &apos;1&apos; HOUR) OVERLAPS (TIME &apos;3:30:00&apos;, INTERVAL &apos;2&apos; HOUR) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="  631 SQL201 Conditional functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Conditional_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Conditional_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Conditional_sink_01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Conditional_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Conditional_sink_01 (id1 INT,id2 INT); " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Conditional_sink_01 (id1 INT,id2 INT);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink__Conditional_01 (id1 INT,id2 INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Conditional_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Conditional_01 (id1 INT,id2 INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Conditional_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Conditional_01 select  NULLIF(5, 5), COALESCE(NULL, 5) FROM t_jdbcsource_bch005;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Conditional_01 select  NULLIF(5, 5), COALESCE(NULL, 5)
FROM t_jdbcsource_bch005;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Conditional  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Conditional_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Conditional_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Conditional_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_casewhen_bch_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_casewhen_bch_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_casewhen_bch_01 (sex string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_casewhen&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_casewhen_bch_01 (sex string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_casewhen&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists casewhen_sink_01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists casewhen_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table casewhen_sink_01 (id1 varchar(20); " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table casewhen_sink_01 (id1 varchar(20));
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink__Conditional_01 (id1 INT,id2 INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Conditional_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__casewhen_bch_01 (id1 varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;casewhen_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__casewhen_bch_01 select CASE WHEN sex &lt;= 1 THEN &apos;a&apos;  WHEN sex &gt;=2  THEN &apos;b&apos;  ELSE NULL END salary_class FROM t_jdbcsource_casewhen_bch_01  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__casewhen_bch_01 select CASE WHEN sex &lt;= 1 THEN &apos;a&apos; 
WHEN sex &gt;=2  THEN &apos;b&apos; 
ELSE NULL END salary_class
FROM t_jdbcsource_casewhen_bch_01

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Casewhen  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  casewhen_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="97">a</stringProp>
                      <stringProp name="98">b</stringProp>
                      <stringProp name="98">b</stringProp>
                      <stringProp name="97">a</stringProp>
                      <stringProp name="98">b</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201select expression without from stream  集成版暂不支持" enabled="false"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 Comparison functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Comparison_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Comparison_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Comparison_sink_02;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Comparison_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Comparison_sink_02(id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Comparison_sink_02(id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink__Comparison_02 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Comparison_sink_02&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Comparison_02 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean,id6 boolean,id7 boolean,id8 boolean,id9 boolean,id10 boolean,id11 boolean,id12 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Comparison_sink_02&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Comparison_02 select 2=2,2&lt;&gt;9, 2&gt;1,2&gt;=1,2&lt;=9,4 IS DISTINCT FROM 5 ,4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL ,1 in (1,2,3,4),12 not in (1,2,3,4),2&lt;=2;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Comparison_02 select 2=2,2&lt;&gt;9, 2&gt;1,2&gt;=1,2&lt;=9,4 IS DISTINCT FROM 5 ,4 IS not DISTINCT FROM 4,4 IS NULL,4 IS not NULL ,1 in (1,2,3,4),12 not in (1,2,3,4),2&lt;=2;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Comparison functions without stream" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Comparison_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                      <stringProp name="-496602840">true	true	true	true	true	true	true	false	true	true	true	true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-SIMILAR TO without streamE" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select &apos;abc&apos; SIMILAR TO &apos;%(b|d)%&apos;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-SIMILAR TO &apos;(b|c)%&apos;  without streamE   已提bug，issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select &apos;abc&apos; SIMILAR TO &apos;(b|c)%&apos;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                      <stringProp name="97196323">false</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="  631 SQL201 Conditional functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Conditional_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Conditional_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Conditional_sink_02;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Conditional_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Conditional_sink_02 (id1 INT,id2 INT); " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Conditional_sink_02 (id1 INT,id2 INT);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Conditional_02 (id1 INT,id2 INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Conditional_sink_02&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Conditional_02 (id1 INT,id2 INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Conditional_sink_02&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Conditional_02 select  NULLIF(5, 5), COALESCE(NULL, 5);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Conditional_02 select  NULLIF(5, 5), COALESCE(NULL, 5);


</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Conditional  functions without stream" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Conditional_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                      <stringProp name="-1034387181">null	5</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Conditional_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Conditional_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_casewhen_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_casewhen_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_casewhen_bch_01 (sex string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_casewhen&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_casewhen_bch_02 (sex string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_casewhen&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">id类型为int</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists casewhen_sink_02;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists casewhen_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table casewhen_sink_02 (id1 varchar(20); " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table casewhen_sink_02 (id1 varchar(20));
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink__Conditional_01 (id1 INT,id2 INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Conditional_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__casewhen_bch_01 (id1 varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;casewhen_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__casewhen_bch_01 select CASE WHEN sex &lt;= 1 THEN &apos;a&apos;  WHEN sex &gt;=2  THEN &apos;b&apos;  ELSE NULL END salary_class FROM t_jdbcsource_casewhen_bch_01  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__casewhen_bch_01 select CASE WHEN sex &lt;= 1 THEN &apos;a&apos; 
WHEN sex &gt;=2  THEN &apos;b&apos; 
ELSE NULL END salary_class
FROM t_jdbcsource_casewhen_bch_01

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Casewhen  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  casewhen_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="97">a</stringProp>
                      <stringProp name="98">b</stringProp>
                      <stringProp name="98">b</stringProp>
                      <stringProp name="97">a</stringProp>
                      <stringProp name="98">b</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Logical functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Logical_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Logical_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Logical_sink_01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Logical_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Logical_sink_01(id1 boolean,id2 boolean,id3 boolean,id4 boolean);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Logical_sink_01(id1 boolean,id2 boolean,id3 boolean,id4 boolean);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Logical_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Logical_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Logical_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Logical_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Logical_01 select  true or false, true and false,false is not true,true IS UNKNOWN FROM t_jdbcsource_bch005;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Logical_01 select  true or false, true and false,false is not true,true IS UNKNOWN FROM t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Logical functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Logical_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                      <stringProp name="54254537">true	false	true	false</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Logical_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Logical_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 String functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__String_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__String_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists String_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists String_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table String_sink_01 (id1 varchar(20),id2 Integer,id3 Integer,id4 varchar(20),id5 varchar(20),id6 varchar(20),id7 varchar(20),id8 varchar(20),id9 varchar(20),id10 varchar(20),id11 varchar(20),id12 varchar(20),id13 varchar(20),id14 varchar(20),id15 varchar(20));  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table String_sink_01 (id1 varchar(20),id2 Integer,id3 Integer,id4 varchar(20),id5 varchar(20),id6 varchar(20),id7 varchar(20),id8 varchar(20),id9 varchar(20),id10 varchar(20),id11 varchar(20),id12 varchar(20),id13 varchar(20),id14 varchar(20),id15 varchar(20));

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink__String_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;String_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__String_01 (id1 varchar(20),id2 Integer,id3 Integer,id4 varchar(20),id5 varchar(20),id6 varchar(20),id7 varchar(20),id8 varchar(20),id9 varchar(20),id10 varchar(20),id11 varchar(20),id12 varchar(20),id13 varchar(20),id14 varchar(20),id15 varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;String_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__String_01 select &apos;F&apos; || &apos;U&apos;,CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),UPPER(&apos;zulan&apos;),LOWER(&apos;AAA3&apos;),TRIM(BOTH &apos;q&apos; FROM &apos;qddq&apos;),TRIM(LEADING &apos;q&apos; FROM &apos;qddq&apos;),TRIM(TRAILING &apos;q&apos; FROM &apos;qddq&apos;),SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5),SUBSTRING(&apos;y66hhhh&apos; FROM 3 FOR 6),INITCAP(&apos;ggg4443hj&apos;),CONCAT(&apos;34&apos;,&apos;gg&apos;,&apos;AA&apos;),CONCAT_WS(&apos;~&apos;,&apos;jjn&apos;,&apos;55&apos;),LPAD(&apos;dddd&apos;,3,&apos;??&apos;), RPAD(&apos;hi&apos;,1, &apos;**&apos;) FROM t_jdbcsource_bch005;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__String_01 select &apos;F&apos; || &apos;U&apos;,CHAR_LENGTH(&apos;eeeeeee2019&apos;),CHARACTER_LENGTH(&apos;eeeeeee2019&apos;),UPPER(&apos;zulan&apos;),LOWER(&apos;AAA3&apos;),TRIM(BOTH &apos;q&apos; FROM &apos;qddq&apos;),TRIM(LEADING &apos;q&apos; FROM &apos;qddq&apos;),TRIM(TRAILING &apos;q&apos; FROM &apos;qddq&apos;),SUBSTRING(&apos;ggggghdddrrty55&apos; FROM 5),SUBSTRING(&apos;y66hhhh&apos; FROM 3 FOR 6),INITCAP(&apos;ggg4443hj&apos;),CONCAT(&apos;34&apos;,&apos;gg&apos;,&apos;AA&apos;),CONCAT_WS(&apos;~&apos;,&apos;jjn&apos;,&apos;55&apos;),LPAD(&apos;dddd&apos;,3,&apos;??&apos;), RPAD(&apos;hi&apos;,1, &apos;**&apos;)
FROM t_jdbcsource_bch005;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-String  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  String_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                      <stringProp name="-1718840346">FU	11	11	ZULAN	aaa3	qddq	qddq	qddq	ghdddrrty55	6hhhh	Ggg4443hj	34ggAA	jjn~55	ddd	h</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__String_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__String_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-POSITION(&apos;RF&apos; IN &apos;RF44RF&apos;) E" enabled="false">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select POSITION(&apos;RF&apos; IN &apos;RF44RF&apos;) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="49">1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- OVERLAY(&apos;ghggg&apos; PLACING &apos;ab&apos; FROM 3 FOR 3) E" enabled="false">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select OVERLAY(&apos;ghggg&apos; PLACING &apos;ab&apos; FROM 3 FOR 3)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                      <stringProp name="3171522">ghab</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Arithmetic functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Arithmetic_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Arithmetic_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Arithmetic_sink_01;" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Arithmetic_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Arithmetic_sink_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double);  " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Arithmetic_sink_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Logical_01 (id1 boolean,id2 boolean,id3 boolean,id4 boolean,id5 boolean) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Logical_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Arithmetic_01 (id1 Integer,id2 Double,id3 Integer,id4 Double,id5 Integer,id6 Double,id7 Double,id8 decimal,id9 decimal,id10 decimal,id11 decimal,id12 decimal,id13 decimal,id14 decimal,id15 Double,id16 Double,id17 varchar(20),id18 Double,id19 Double,id20 Double,id21 int,id22 Double,id23 decimal,id24 Double,id25 Double,id26 Double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Arithmetic_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Arithmetic_01 select  2*7,POWER(2,3),ABS(-9),SQRT(9),MOD(-9, 4),LN(16),exp(0), ceil(2.89),ceil(2.45),FLOOR(3.45),FLOOR(3.0), ceiling(2.45), ceil(-2.45),ceiling(-2.45),log10(1), log(3),bin(4),RAND (2),RAND (), e(),SIGN(-8), RADIANS(30), ROUND(-4.566,2),DEGREES(0.5235987755982988), sin(3.1415926/6),asin(1) FROM t_jdbcsource_bch005;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Arithmetic_01 select  2*7,POWER(2,3),ABS(-9),SQRT(9),MOD(-9, 4),LN(16),exp(0), ceil(2.89),ceil(2.45),FLOOR(3.45),FLOOR(3.0), ceiling(2.45),
ceil(-2.45),ceiling(-2.45),log10(1), log(3),bin(4),RAND (2),RAND (), e(),SIGN(-8), RADIANS(30), ROUND(-4.566,2),DEGREES(0.5235987755982988), sin(3.1415926/6),asin(1) FROM t_jdbcsource_bch005;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Arithmetic  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Arithmetic_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="330143275">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.7311469360199058	0.11443284277110732	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                      <stringProp name="-1671748019">14	8.0	9	3.0	-1	2.772588722239781	1.0	3	3	3	3	3	-2	-2	0.0	1.0986122886681098	100	0.9014476240300544	0.742261044754307	2.718281828459045	-1	0.5235987755982988	-5	29.999999999999996	0.4999999864914769	1.5707963267948966</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Arithmetic_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Arithmetic_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-log(2,1);E     已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select log(2,1) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="TestPlan.comments">DB支持log2（1）</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-RAND_INTEGER(2,6) E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select RAND_INTEGER(2,6) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="52">4</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="50">2</stringProp>
                      <stringProp name="49">1</stringProp>
                      <stringProp name="51">3</stringProp>
                      <stringProp name="48">0</stringProp>
                      <stringProp name="48">0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- PI E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select PI from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                      <stringProp name="2042954132">3.141592653589793</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- ROUND(4.53,2) E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select ROUND(4.53,2) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                      <stringProp name="1595032">4.53</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201 Temporal functions" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Temporal_01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Temporal_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists Temporal_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists Temporal_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table Temporal_sink_01 (id1 Date,id2 Time,id3 Timestamp,id4 Long,id5 Long,id6 Long,id7 Long,id8 Long,id9 Long,id10 Long,id11 Long,id12 Long); " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Temporal_sink_01 (id1 Date,id2 Time,id3 Timestamp,id4 Long,id5 Long,id6 Long,id7 Long,id8 Long,id9 Long,id10 Long,id11 Long,id12 Long);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__Temporal_01 (id1 Date,id2 Time,id3 Timestamp,id4 Long,id5 Long,id6 Long,id7 Long,id8 Long,id9 Long,id10 Long,id11 Long,id12 Long) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Temporal_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink__Temporal_01 (id1 Date,id2 Time,id3 Timestamp,id4 bigint,id5 bigint,id6 bigint,id7 bigint,id8 bigint,id9 bigint,id10 bigint,id11 bigint,id12 bigint) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;Temporal_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__Temporal_01 select DATE &apos;2018-09-10&apos;, TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;, YEAR(DATE &apos;1994-09-27&apos;),QUARTER(DATE &apos;1994-09-27&apos;),MONTH(DATE &apos;1994-09-27&apos;),DAYOFYEAR(DATE &apos;1994-09-27&apos;),DAYOFMONTH(DATE &apos;1994-09-27&apos;),DAYOFWEEK(DATE &apos;1994-09-27&apos;),HOUR(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),SECOND(TIMESTAMP &apos;1994-09-27 13:14:15&apos;) FROM t_jdbcsource_bch005;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink__Temporal_01 select DATE &apos;2018-09-10&apos;, TIME &apos;23:09:06&apos;,TIMESTAMP &apos;2018-09-10 10:09:08&apos;, YEAR(DATE &apos;1994-09-27&apos;),QUARTER(DATE &apos;1994-09-27&apos;),MONTH(DATE &apos;1994-09-27&apos;),DAYOFYEAR(DATE &apos;1994-09-27&apos;),DAYOFMONTH(DATE &apos;1994-09-27&apos;),DAYOFWEEK(DATE &apos;1994-09-27&apos;),HOUR(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),MINUTE(TIMESTAMP &apos;1994-09-27 13:14:15&apos;),SECOND(TIMESTAMP &apos;1994-09-27 13:14:15&apos;)
FROM t_jdbcsource_bch005;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-Temporal  functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  Temporal_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                      <stringProp name="-730019084">2018-09-10	23:09:06	2018-09-10 10:09:08.0	1994	3	9	270	27	3	13	14	15</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__Temporal_01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink__Temporal_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CURRENT_DATE " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CURRENT_DATE from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CURRENT_TIME " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CURRENT_TIME from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CURRENT_TIMESTAMP " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CURRENT_TIMESTAMP from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- LOCALTIME  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select LOCALTIME from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- LOCALTIMESTAMP E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select LOCALTIMESTAMP from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- EXTRACT(DAY FROM DATE &apos;2006-06-05&apos;) E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select EXTRACT(DAY FROM DATE &apos;2006-06-05&apos;)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                      <stringProp name="53">5</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 631 SQL201 TC- FLOOR(TIME &apos;12:44:31&apos; TO MINUTE)  E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select FLOOR(TIME &apos;12:44:31&apos; TO MINUTE)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                      <stringProp name="49368493">12:44:00.</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-CEIL(TIME &apos;12:44:31&apos; TO MINUTE)  E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select CEIL(TIME &apos;12:44:31&apos; TO MINUTE)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                      <stringProp name="-1660945664">12:45:00</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- WEEK(DATE &apos;1994-09-27&apos;) E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select WEEK(DATE &apos;1994-09-27&apos;)from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                      <stringProp name="1638">39</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-INTERVAL &apos;2-10&apos; YEAR TO MONTH   E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select  INTERVAL &apos;2-10&apos; YEAR TO MONTH  from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                      <stringProp name="1633">34</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-DATE_FORMAT(&apos;2017-09-01 21:38:05&apos;, &apos;%Y, %d %M&apos;) E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select DATE_FORMAT(TIMESTAMP &apos;2017-09-01 21:38:05&apos;,&apos;%Y, %d %M&apos;) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                      <stringProp name="1572">15</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-TIMESTAMPADD(WEEK, 1, DATE &apos;2003-01-02&apos;)  E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select TIMESTAMPADD(WEEK, 1, DATE &apos;2003-01-02&apos;) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                      <stringProp name="-691498679">2003-01-09</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC- (TIME &apos;2:55:00&apos;, INTERVAL &apos;1&apos; HOUR) OVERLAPS (TIME &apos;3:30:00&apos;, INTERVAL &apos;2&apos; HOUR)  E    已提bug ,issue号：1133" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select (TIME &apos;2:55:00&apos;, INTERVAL &apos;1&apos; HOUR) OVERLAPS (TIME &apos;3:30:00&apos;, INTERVAL &apos;2&apos; HOUR) from t_jdbcsource_bch005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201select function from stream" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__function_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink__function_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists function_sink_01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists function_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table function_sink_01(id1 double);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table function_sink_01(id1 double);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink__function_01 (id double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;function_sink_01&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink__function_01 (id1 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;function_sink_01&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__function_01 select sin(2) from t_jdbcsource_bch005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink__function_01 select sin(2) from t_jdbcsource_bch005;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-function functions" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  function_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1755555575">0.9092974268256817</stringProp>
                    <stringProp name="1755555575">0.9092974268256817</stringProp>
                    <stringProp name="1755555575">0.9092974268256817</stringProp>
                    <stringProp name="1755555575">0.9092974268256817</stringProp>
                    <stringProp name="1755555575">0.9092974268256817</stringProp>
                    <stringProp name="1755555575">0.9092974268256817</stringProp>
                    <stringProp name="1755555575">0.9092974268256817</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__function_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink__function_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists function_sink_01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists function_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 select expression, function mixed without from  集成版不支持" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="select 2&gt;1,sin(2);" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select 2&gt;1,sin(2);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-320429131"> true,0.9092974268256817</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  select field, expression, function mixed with from" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__mixed_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink__mixed_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists mixed_sink_01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists mixed_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table mixed_sink_01(id1 int,id2 boolean,id3 double);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table mixed_sink_01(id1 int,id2 boolean,id3 double);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink__mixed_01 (id1 int,id2 boolean,id3 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;mixed_sink_01&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink__mixed_01 (id1 int,id2 boolean,id3 double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;mixed_sink_01&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink__mixed_01 select id,2&gt;1,sin(2) from t_jdbcsource_bch005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink__mixed_01 select id,2&gt;1,sin(2) from t_jdbcsource_bch005;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-mixed functions" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  mixed_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2008427898">1	true	0.9092974268256817</stringProp>
                    <stringProp name="-68781445">2	true	0.9092974268256817</stringProp>
                    <stringProp name="-2145990788">3	true	0.9092974268256817</stringProp>
                    <stringProp name="-2005442178">5	true	0.9092974268256817</stringProp>
                    <stringProp name="212315775">6	true	0.9092974268256817</stringProp>
                    <stringProp name="1310640488">10	true	0.9092974268256817</stringProp>
                    <stringProp name="1356655482">122	true	0.9092974268256817</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink__mixed_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink__mixed_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists mixed_sink_01;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists mixed_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 631 SQL201select with field alias (as)" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_alias_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_alias_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists alias_sink_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists alias_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table alias_sink_01(id1 int,id2 varchar(20));" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table alias_sink_01(id1 int,id2 varchar(20));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201   CREATE STREAM t_jdbcsink_alias_01 (id1 int,id2 double,id3 varchar(20) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;alias_sink_01&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_alias_01 (id1 int,id2 varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;alias_sink_01&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_alias_01 select id as id1,name as name1 from t_jdbcsource_bch005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink_alias_01 select id as id1,name as name1 from t_jdbcsource_bch005;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-alias functions" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  alias_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="911931782">1	zulan</stringProp>
                    <stringProp name="555352932">2	dengchao</stringProp>
                    <stringProp name="358839427">3	dengchao</stringProp>
                    <stringProp name="160516821">5	sunli</stringProp>
                    <stringProp name="1048020502">6	sunli</stringProp>
                    <stringProp name="1974163733">10	lichen</stringProp>
                    <stringProp name="2016029711">122	zhu</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_alias_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_alias_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists alias_sink_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists alias_sink_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table alias_sink_02(id1 varchar(20),id2 bigint);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table alias_sink_02(id1 varchar(20),id2 int);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201   CREATE STREAM t_jdbcsink_alias_01 (id1 int,id2 double,id3 varchar(20) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;alias_sink_01&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_alias_02 (id1 varchar(20),id2 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;alias_sink_02&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  insert into t_jdbcsink_alias_02 select name, sum(id) as data1 from t_jdbcsource_bch005 GROUP BY name;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink_alias_02 select name, sum(id) as data1 from t_jdbcsource_bch005 GROUP BY name;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-alias sum functions" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  alias_sink_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="58646086">zulan	1</stringProp>
                    <stringProp name="-2048252327">dengchao	5</stringProp>
                    <stringProp name="-1724440960">sunli	11</stringProp>
                    <stringProp name="1417450813">lichen	10</stringProp>
                    <stringProp name="-307900145">zhu	122</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_alias_02;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_alias_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_alias_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_alias_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 case when ... then ...E  已提bug ，issue号：1404" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_bch010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  t_jdbcsource_bch010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bch010 (name string,salary decimal ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;casewhen&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_bch010 (name string,salary decimal ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;casewhen&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_casewhen_then_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_casewhen_then_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists casewhen_then_sink_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists casewhen_then_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table casewhen_then_sink_01(id1 varchar(20), id2 int);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table casewhen_then_sink_01(id1 varchar(20), id2 int);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink_casewhen_then_01 (id1 varchar(20), id2 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;casewhen_then_sink_01&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_casewhen_then_01 (id1 varchar(20), id2 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;casewhen_then_sink_01&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_alias_01 select id as id1,name as name1 from t_jdbcsource_bch005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink_casewhen_then_01 SELECT

CASE WHEN salary &lt;= 2000 THEN &apos;1&apos;
WHEN salary &gt; 2000 AND salary &lt;= 3000 THEN &apos;2&apos;
WHEN salary &gt; 3000 AND salary &lt;= 4000 THEN &apos;3&apos;
WHEN salary &gt; 4000 AND salary &lt;= 5000 THEN &apos;4&apos;
ELSE NULL END salary_class,
COUNT(*)
FROM t_jdbcsource_bch010
GROUP BY
CASE WHEN salary &lt;= 2000 THEN &apos;1&apos;
WHEN salary &gt; 2000 AND salary &lt;= 3000 THEN &apos;2&apos;
WHEN salary &gt; 3000 AND salary &lt;= 4000 THEN &apos;3&apos;
WHEN salary &gt; 4000 AND salary &lt;= 5000 THEN &apos;4&apos;
ELSE NULL END;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-casewhen_then_ functions" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  casewhen_then_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="50425">3,2</stringProp>
                    <stringProp name="49463">2,1</stringProp>
                    <stringProp name="51386">4,2</stringProp>
                    <stringProp name="-1034386100">null,1</stringProp>
                    <stringProp name="48502">1,1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_bch010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  t_jdbcsource_bch010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_casewhen_then_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_casewhen_then_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201union all" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_bch010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  t_jdbcsource_bch010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_bch010 (name string,salary decimal ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;casewhen&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_bch010 (name string,salary decimal ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;casewhen&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_unionall_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_unionall_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists unionall_sink_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists unionall_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table unionall_sink_01(id1 varchar(20));" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table unionall_sink_01(id1 varchar(20));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_unionall_01 (id1 int, id2 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;unionall_sink_01&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_unionall_01 (id1 varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;unionall_sink_01&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  insert into t_jdbcsink_unionall_01 SELECT * FROM (     (SELECT name FROM  t_jdbcsource_bch010  WHERE salary % 3 = 0)   UNION ALL     (SELECT name FROM  t_jdbcsource_bch010  WHERE salary = 4990) );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink_unionall_01 SELECT *
FROM (
    (SELECT name FROM  t_jdbcsource_bch010  WHERE salary &lt; 3000)
  UNION ALL
    (SELECT name FROM  t_jdbcsource_bch010  WHERE salary &gt; 4990)
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-unionall_ functions" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  unionall_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="116262014">zulan</stringProp>
                    <stringProp name="-1102959999">lidong</stringProp>
                    <stringProp name="3321786">lili</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_bch010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  t_jdbcsource_bch010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_unionall_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_unionall_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 group by with having" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_GROUPBY_bch01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  t_jdbcsource_GROUPBY_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_GROUPBY_bch01 (id integer,users string, amount double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos; ${umysql_password}&apos;, &apos;tableName&apos;: &apos;groupby&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_GROUPBY_bch01 (id integer,users string, amount double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;groupby&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_groupby_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists groupby_sink_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists groupby_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  create table groupby_sink_01(data double);" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table groupby_sink_01(data double);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_groupby_01 (data double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;groupby_sink_01&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsink_groupby_01 (data double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;groupby_sink_01&apos;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_groupby_01 SELECT SUM(amount) FROM t_jdbcsource_GROUPBY_bch01 GROUP BY users HAVING SUM(amount) &gt; 5000;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into t_jdbcsink_groupby_01 SELECT SUM(amount)
FROM t_jdbcsource_GROUPBY_bch01
GROUP BY users
HAVING SUM(amount) &gt; 5000;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-groupby_ functions" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  groupby_sink_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1567894116">5546.0</stringProp>
                    <stringProp name="1565953857">5312.0</stringProp>
                    <stringProp name="1571589161">5947.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists  t_jdbcsource_GROUPBY_bch01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  t_jdbcsource_GROUPBY_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsink_groupby_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 group by  with aggregate function" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  group by  with sum" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_GROUPBY_bch03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_GROUPBY_bch03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_GROUPBY_bch03 (id integer,users string, amount double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;groupby&apos;); " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_GROUPBY_bch03 (id integer,users string, amount double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;groupby&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_sum_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_groupby_sum_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists groupby_sum_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists groupby_sum_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table groupby_sum_sink_01(name varchar(20), sums double);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table groupby_sum_sink_01(name varchar(20), sums double);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink_groupby_sum_01 (name varchar(20), sums double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;groupby_sum_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_groupby_sum_01 (name varchar(20), sums double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;groupby_sum_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_groupby_sum_01 SELECT users, SUM(amount) as sums FROM t_jdbcsource_GROUPBY_bch03 GROUP BY users;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_groupby_sum_01 SELECT users, SUM(amount) as sums
FROM t_jdbcsource_GROUPBY_bch03
GROUP BY users;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-groupby_sum_ functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  groupby_sum_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1988167802">baby	678.0</stringProp>
                      <stringProp name="-2113976065">chenhe	4355.0</stringProp>
                      <stringProp name="-626519356">sunli	5546.0</stringProp>
                      <stringProp name="-1821677922">luhan	5312.0</stringProp>
                      <stringProp name="-222641060">lichen	4000.0</stringProp>
                      <stringProp name="261659781">dengchao	5947.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_GROUPBY_bch03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_GROUPBY_bch03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_sum_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_groupby_sum_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  group by  with avg" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_GROUPBY_bch_04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_GROUPBY_bch_04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_avg_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_groupby_avg_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201   CREATE STREAM t_jdbcsource_GROUPBY_bch_04 (id integer,users string, amount double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;groupby&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_GROUPBY_bch_04 (id integer,users string, amount double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;groupby&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists groupby_avg_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists groupby_avg_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table groupby_avg_sink_01(name varchar(20), sums double);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table groupby_avg_sink_01(name varchar(20), sums double);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_groupby_avg_01 (name varchar(20), sums double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;groupby_avg_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_groupby_avg_01 (name varchar(20), sums double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;groupby_avg_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_groupby_avg_01 SELECT users, avg(amount) as avgs FROM t_jdbcsource_GROUPBY_bch_04 GROUP BY users;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_groupby_avg_01 SELECT users, avg(amount) as avgs
FROM t_jdbcsource_GROUPBY_bch_04
GROUP BY users;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-groupby_avg_ functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  groupby_avg_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1988167802">baby	678.0</stringProp>
                      <stringProp name="-2113976065">chenhe	4355.0</stringProp>
                      <stringProp name="-710473277">sunli	2773.0</stringProp>
                      <stringProp name="-1904671804">luhan	2656.0</stringProp>
                      <stringProp name="-222641060">lichen	4000.0</stringProp>
                      <stringProp name="175857862">dengchao	2973.5</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_GROUPBY_bch_04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_GROUPBY_bch_04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_avg_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_groupby_avg_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  group by TUMBLE with sum" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_GROUPBY_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_GROUPBY_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_GROUPBY_bch_02 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);   " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_GROUPBY_bch_02 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_sum_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_groupby_sum_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists groupby_sum_sink_02" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists groupby_sum_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table groupby_sum_sink_02(name varchar(20), sums double);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table groupby_sum_sink_02(name varchar(20), sums double);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_groupby_sum_02 (name varchar(20), sums double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;groupby_sum_sink_02&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_groupby_sum_02 (name varchar(20), sums double) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;updateMode&apos;:&apos;retract&apos;,&apos;tableName&apos;: &apos;groupby_sum_sink_02&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_groupby_sum_02 SELECT users, SUM(amount) FROM t_jdbcsource_GROUPBY_bch_02 GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_groupby_sum_02 SELECT users, SUM(amount)
FROM t_jdbcsource_GROUPBY_bch_02
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-groupby_tumble_sum_ functions" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  groupby_sum_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-306588254">lichen	1234.0</stringProp>
                      <stringProp name="384167546">dengchao 	3456.0</stringProp>
                      <stringProp name="-583443453">lily	2345.0</stringProp>
                      <stringProp name="-156884635">lichen	6968.0</stringProp>
                      <stringProp name="665784447">lichen	76.0</stringProp>
                      <stringProp name="-2112097310">chenhe	4567.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_GROUPBY_bch_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_GROUPBY_bch_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_groupby_sum_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_groupby_sum_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window, tumple/hop/session eventtime" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window, tumple,eventtime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_TUMPLE_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_TUMPLE_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_TUMPLE_bch02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_TUMPLE_bch02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_TUMPLE_bch03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_TUMPLE_bch03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_TUMPLE_bch01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,&apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);   " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_TUMPLE_bch01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,&apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);





</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-GROUP BY TUMBLE" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT users, SUM(amount)
FROM t_jdbcsource_TUMPLE_bch01
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-306588254">lichen	1234.0</stringProp>
                      <stringProp name="384167546">dengchao 	3456.0</stringProp>
                      <stringProp name="-583443453">lily	2345.0</stringProp>
                      <stringProp name="-156884635">lichen	6968.0</stringProp>
                      <stringProp name="665784447">lichen	76.0</stringProp>
                      <stringProp name="-2112097310">chenhe	4567.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-TUMBLE_START-TUMBLE_END" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; DAY),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; DAY),
users
FROM t_jdbcsource_TUMPLE_bch01 
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; DAY), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1047437154">2018-11-21 00:00:00.0	2018-11-22 00:00:00.0	lichen</stringProp>
                      <stringProp name="-1759393414">2018-11-22 00:00:00.0	2018-11-23 00:00:00.0	dengchao </stringProp>
                      <stringProp name="-1484023643">2018-11-23 00:00:00.0	2018-11-24 00:00:00.0	lily</stringProp>
                      <stringProp name="-1483156886">2018-11-25 00:00:00.0	2018-11-26 00:00:00.0	lichen</stringProp>
                      <stringProp name="31678252">2018-11-26 00:00:00.0	2018-11-27 00:00:00.0	lichen</stringProp>
                      <stringProp name="-226842196">2018-11-26 00:00:00.0	2018-11-27 00:00:00.0	chenhe</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_TUMPLE_bch02 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime1&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_TUMPLE_bch02 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime1&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-INTERVAL &apos;1&apos; MINUTE" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; MINUTE),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; MINUTE),
users
FROM t_jdbcsource_TUMPLE_bch02 
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-921606632">2018-11-24 10:27:00.0	2018-11-24 10:28:00.0	a</stringProp>
                      <stringProp name="832519831">2018-11-24 10:28:00.0	2018-11-24 10:29:00.0	b</stringProp>
                      <stringProp name="530957665">2018-11-24 10:29:00.0	2018-11-24 10:30:00.0	c</stringProp>
                      <stringProp name="-1423602075">2018-11-26 10:31:00.0	2018-11-26 10:32:00.0	d</stringProp>
                      <stringProp name="330524388">2018-11-26 10:32:00.0	2018-11-26 10:33:00.0	e</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_TUMPLE_bch03 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime2&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_TUMPLE_bch03 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime2&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-TUMBLE_START-TUMBLE_END-SUM" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; MINUTE),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; MINUTE),
users,SUM(amount)
FROM t_jdbcsource_TUMPLE_bch03 
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1684274863">2018-11-12 11:04:00.0	2018-11-12 11:05:00.0	a	24.0</stringProp>
                      <stringProp name="516170280">2018-11-12 11:05:00.0	2018-11-12 11:06:00.0	a	3.0</stringProp>
                      <stringProp name="-1469646619">2018-11-12 11:07:00.0	2018-11-12 11:08:00.0	a	4.0</stringProp>
                      <stringProp name="-314146458">2018-11-12 11:08:00.0	2018-11-12 11:09:00.0	b	6.0</stringProp>
                      <stringProp name="-743800015">2018-11-12 11:09:00.0	2018-11-12 11:10:00.0	b	8.0</stringProp>
                      <stringProp name="471268280">2018-11-12 11:10:00.0	2018-11-12 11:11:00.0	b	6.0</stringProp>
                      <stringProp name="1626761714">2018-11-12 11:11:00.0	2018-11-12 11:12:00.0	c	1.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_TUMPLE_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_TUMPLE_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_TUMPLE_bch03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_TUMPLE_bch03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_TUMPLE_bch02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_TUMPLE_bch02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window, hop,eventtime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_HOP_bch01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_HOP_bch01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT 
  HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  users, 
 SUM(amount)
FROM t_jdbcsource_HOP_bch01
GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="673730147">2018-11-26 01:44:00.0	2018-11-26 01:45:00.0	chenhe	4567.0</stringProp>
                      <stringProp name="2067253085">2018-11-26 01:44:30.0	2018-11-26 01:45:30.0	chenhe	4567.0</stringProp>
                      <stringProp name="-122365238">2018-11-26 08:57:00.0	2018-11-26 08:58:00.0	lichen	76.0</stringProp>
                      <stringProp name="-1050523068">2018-11-26 08:57:30.0	2018-11-26 08:58:30.0	lichen	76.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_HOP_bch02 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime1&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_HOP_bch02 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime1&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-02" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT 
HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
users, 
SUM(amount)
FROM t_jdbcsource_HOP_bch02
GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="872369055">2018-11-24 10:26:30.0	2018-11-24 10:27:30.0	a	123.0</stringProp>
                      <stringProp name="-1146613469">2018-11-24 10:27:00.0	2018-11-24 10:28:00.0	a	123.0</stringProp>
                      <stringProp name="-1088445345">2018-11-24 10:27:30.0	2018-11-24 10:28:30.0	b	344.0</stringProp>
                      <stringProp name="1187539427">2018-11-24 10:28:00.0	2018-11-24 10:29:00.0	b	344.0</stringProp>
                      <stringProp name="40152185">2018-11-24 10:28:30.0	2018-11-24 10:29:30.0	c	44.0</stringProp>
                      <stringProp name="-1337282806">2018-11-24 10:29:00.0	2018-11-24 10:30:00.0	c	44.0</stringProp>
                      <stringProp name="-2129370009">2018-11-26 10:31:00.0	2018-11-26 10:32:00.0	d	56.0</stringProp>
                      <stringProp name="-1157693076">2018-11-26 10:31:30.0	2018-11-26 10:32:30.0	e	67.0</stringProp>
                      <stringProp name="-1186352979">2018-11-26 10:31:30.0	2018-11-26 10:32:30.0	d	56.0</stringProp>
                      <stringProp name="-668632216">2018-11-26 10:32:00.0	2018-11-26 10:33:00.0	e	67.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_HOP_bch03 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime2&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_HOP_bch03 (users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime2&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-03" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT 
HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
users, 
SUM(amount)
FROM t_jdbcsource_HOP_bch03
GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="471268280">2018-11-12 11:10:00.0	2018-11-12 11:11:00.0	b	6.0</stringProp>
                      <stringProp name="-1852697746">2018-11-12 11:10:30.0	2018-11-12 11:11:30.0	c	1.0</stringProp>
                      <stringProp name="1626761714">2018-11-12 11:11:00.0	2018-11-12 11:12:00.0	c	1.0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_HOP_bch04 (users string, click varchar,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;hop&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_HOP_bch04 (users string, click varchar(20),time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;hop&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-04" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT 
HOP_START(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
HOP_END(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
users, 
 COUNT(click)
FROM t_jdbcsource_HOP_bch04
GROUP BY HOP(myrowtime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), users;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2121735695">2017-10-10 09:59:30.0	2017-10-10 10:00:30.0	Jark	2</stringProp>
                      <stringProp name="-1307231693">2017-10-10 10:00:00.0	2017-10-10 10:01:00.0	Jark	3</stringProp>
                      <stringProp name="-364214664">2017-10-10 10:00:30.0	2017-10-10 10:01:30.0	Jark	2</stringProp>
                      <stringProp name="124846196">2017-10-10 10:01:00.0	2017-10-10 10:02:00.0	Jark	2</stringProp>
                      <stringProp name="1361397792">2017-10-10 10:01:30.0	2017-10-10 10:02:30.0	Timo	1</stringProp>
                      <stringProp name="1067863225">2017-10-10 10:01:30.0	2017-10-10 10:02:30.0	Jark	1</stringProp>
                      <stringProp name="1850458652">2017-10-10 10:02:00.0	2017-10-10 10:03:00.0	Timo	1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch03;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch03;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch04;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch04;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_HOP_bch02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_HOP_bch02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window,session,eventtime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_session_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_session_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_session_bch01 (users string, click varchar,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;hop&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_session_bch01 (users string, click varchar(20),time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;hop&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-session-01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT 
SESSION_START(myrowtime, INTERVAL &apos;30&apos; SECOND),
SESSION_END(myrowtime, INTERVAL &apos;30&apos; SECOND),
users, 
 COUNT(click)
FROM t_jdbcsource_session_bch01
GROUP BY SESSION(myrowtime, INTERVAL &apos;30&apos; SECOND), users;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="388300469">2017-10-10 10:00:00.0	2017-10-10 10:00:40.0	Jark	2</stringProp>
                      <stringProp name="-146557205">2017-10-10 10:00:49.0	2017-10-10 10:01:35.0	Jark	2</stringProp>
                      <stringProp name="-1975608854">2017-10-10 10:01:58.0	2017-10-10 10:02:28.0	Jark	1</stringProp>
                      <stringProp name="1362313888">2017-10-10 10:02:10.0	2017-10-10 10:02:40.0	Timo	1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_session_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_session_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window, tumple/hop/session proctime " enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window, tumple,proctime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_PTUMPLE_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_PTUMPLE_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_PTUMPLE_bch01 (id integer,name varchar) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;proctime&apos;:&apos;proctime&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;jdbc_proc&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_PTUMPLE_bch01 (id integer,name varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;proctime&apos;:&apos;proctime&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;jdbc_proc&apos;);

 
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-proc-TUMPLE-01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SELECT
name,SUM(id)
FROM t_jdbcsource_PTUMPLE_bch01
GROUP BY TUMBLE(proctime, INTERVAL &apos;1&apos; MINUTE), name;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="93553">a	9</stringProp>
                      <stringProp name="2959560">c	24</stringProp>
                      <stringProp name="2929736">b	12</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_PTUMPLE_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_PTUMPLE_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window, hop,proctime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_PHOP_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_PHOP_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_hop_proc_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_hop_proc_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_hop_proc_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_hop_proc_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists hop_proc_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists hop_proc_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table hop_proc_sink_01(id1 timestamp,id2 timestamp,id3 int,id4 varchar(20);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table hop_proc_sink_01(id1 timestamp default &apos;2019-09-08 09:09:09&apos;,id2 timestamp default &apos;2019-09-08 09:09:09&apos;,id3 varchar(20),id4 int);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_hop_proc_01 (id1 timestamp,id2 timestamp,id3 int,id4 varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;hop_proc_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_hop_proc_01 (id1 timestamp,id2 timestamp,id3 varchar(20),id4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;hop_proc_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_PHOP_bch01 (id integer,NAME varchar) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,&apos;proctime&apos;:&apos;proctime&apos;,&apos;username&apos;: &apos;test&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;jdbc_proc&apos;);   " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_PHOP_bch01 (id integer,NAME varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,&apos;proctime&apos;:&apos;proctime&apos;,&apos;username&apos;: &apos;test&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;jdbc_proc&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  insert into t_jdbcsink_unionall_01 SELECT * FROM (     (SELECT name FROM  t_jdbcsource_bch010  WHERE salary % 3 = 0)   UNION ALL     (SELECT name FROM  t_jdbcsource_bch010  WHERE salary = 4990) );" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_hop_proc_01 SELECT 
  HOP_START(proctime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  HOP_END(proctime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE),
  name, 
 SUM(id)
FROM t_jdbcsource_PHOP_bch01
GROUP BY HOP(proctime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), name;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">30000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-hop-proc-01 " enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  hop_proc_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1549975878">2019-03-08 08:34:00.0	2019-03-08 08:35:00.0	a	9</stringProp>
                      <stringProp name="-804582369">2019-03-08 08:34:00.0	2019-03-08 08:35:00.0	b	12</stringProp>
                      <stringProp name="-804552545">2019-03-08 08:34:00.0	2019-03-08 08:35:00.0	c	24</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists hop_proc_sink_02" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists hop_proc_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table hop_proc_sink_02(id3 varchar(20),id4 int);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table hop_proc_sink_02(id3 varchar(20),id4 int);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsink_hop_proc_02 (id3 varchar(20),id4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;hop_proc_sink_02&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_hop_proc_02 (id3 varchar(20),id4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;hop_proc_sink_02&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  insert into t_jdbcsink_unionall_01 SELECT * FROM (     (SELECT name FROM  t_jdbcsource_bch010  WHERE salary % 3 = 0)   UNION ALL     (SELECT name FROM  t_jdbcsource_bch010  WHERE salary = 4990) );" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_hop_proc_02 SELECT 
  name, 
 SUM(id)
FROM t_jdbcsource_PHOP_bch01
GROUP BY HOP(proctime, INTERVAL &apos;30&apos; SECOND, INTERVAL &apos;1&apos; MINUTE), name;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">30000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-hop-proc-02" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  hop_proc_sink_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">30000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="93553">a	9</stringProp>
                      <stringProp name="2929736">b	12</stringProp>
                      <stringProp name="2959560">c	24</stringProp>
                      <stringProp name="93553">a	9</stringProp>
                      <stringProp name="2959560">c	24</stringProp>
                      <stringProp name="2929736">b	12</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_PHOP_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_PHOP_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_hop_proc_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_hop_proc_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_hop_proc_02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_hop_proc_02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  window,session,proctime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_Psession_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_Psession_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_Psession_bch02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_Psession_bch02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_session_proc_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_session_proc_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_Psession_bch01 (id integer,NAME varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;proctime&apos;:&apos;proctime&apos;,&apos;username&apos;: &apos;${umysql}&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;jdbc_proc&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_Psession_bch01 (id integer,NAME varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;proctime&apos;:&apos;proctime&apos;,&apos;username&apos;: &apos;${umysql}&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;jdbc_proc&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_Psession_bch02 (id integer,action varchar(20),customer_id varchar(20),device_id varchar(20),ip varchar(20),state varchar(20),account_type varchar(20),new_user varchar(20),new_device varchar(20),out_account varchar(20),in_account varchar(20),amount varchar(20),balance varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;,&apos;proctime&apos;:&apos;proctime&apos;,&apos;username&apos;: &apos;test&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;jdbc_schema&apos;);    " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsource_Psession_bch02 (id integer,action varchar(20),customer_id varchar(20),device_id varchar(20),ip varchar(20),state varchar(20),account_type varchar(20),new_user varchar(20),new_device varchar(20),out_account varchar(20),in_account varchar(20),amount varchar(20),balance varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;,&apos;proctime&apos;:&apos;proctime&apos;,&apos;username&apos;: &apos;test&apos;,&apos;increaseColumn&apos;:&apos;ID&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;jdbc_schema&apos;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop table if exists session_proc_sink_01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists session_proc_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 create table session_proc_sink_01(id1 timestamp default &apos;2019-09-08 09:09:09&apos;,id2 timestamp default &apos;2019-09-08 09:09:09&apos;,id3 varchar(20),id4 int);" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table session_proc_sink_01(id1 timestamp default &apos;2019-09-08 09:09:09&apos;,id2 timestamp default &apos;2019-09-08 09:09:09&apos;,id3 varchar(20),id4 int);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsink_session_proc_01 (id3 varchar(20),id4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;session_proc_sink_01&apos;);  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM t_jdbcsink_session_proc_01 (id1 timestamp ,id2 timestamp, id3 varchar(20),id4 int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;batchSize&apos;:&apos;1&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;session_proc_sink_01&apos;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 insert into t_jdbcsink_session_proc_01 SELECT  SESSION_START(proctime, INTERVAL &apos;30&apos; SECOND), SESSION_END(proctime, INTERVAL &apos;30&apos; SECOND), action,   SUM(ID) FROM t_jdbcsource_Psession_bch02 GROUP BY SESSION(proctime, INTERVAL &apos;30&apos; SECOND),action;  " enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">insert into t_jdbcsink_session_proc_01 SELECT 
SESSION_START(proctime, INTERVAL &apos;30&apos; SECOND),
SESSION_END(proctime, INTERVAL &apos;30&apos; SECOND),
action, 
 SUM(ID)
FROM t_jdbcsource_Psession_bch02
GROUP BY SESSION(proctime, INTERVAL &apos;30&apos; SECOND),action;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">40000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-session-proc-01" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from  session_proc_sink_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="792862382">2019-03-06 10:52:30.0	2019-03-06 10:53:30.0	a	9</stringProp>
                      <stringProp name="-1191040341">2019-03-06 10:52:30.0	2019-03-06 10:53:30.0	b	12</stringProp>
                      <stringProp name="-1191010517">2019-03-06 10:52:30.0	2019-03-06 10:53:30.0	c	24</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  ISQL600 SHOW JOBS;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SHOW JOBS;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">jobid</stringProp>
                    <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">20000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CANCEL JOB &quot;${jobid_1}&quot;;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  SHOW JOBS E;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">SHOW JOBS;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-277605195">insert into t_jdbcsink_cep_bch001
SELECT symbol,lastPrice
FROM t_kafkasource_cep_bch001
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            C.price AS  lastPrice
		ONE ROW PER MATCH
        AFTER MATCH SKIP PAST LAST ROW
        PATTERN (A B* C)
        DEFINE
            A AS price &gt; 10,
            B AS price &lt; 15,
            C AS price &gt; 12
    );</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">6</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_Psession_bch01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_Psession_bch01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_Psession_bch02;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsource_Psession_bch02;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsink_session_proc_01;" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists t_jdbcsink_session_proc_01;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  over(window function) E 集成版不支持，已提bug ,issue号：1405" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_over_bch01;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_over_bch01;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_over_bch01 (ID varchar(20), type1 varchar(20),time1 timestamp, price varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;over&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_over_bch01 (ID varchar(20), type1 varchar(20),time1 timestamp, price varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;over&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-SS_rangeover_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT  
    ID,
   type1, 
    myrowtime, 
    price,  
    MAX(price) OVER (
        PARTITION BY type1
        ORDER BY myrowtime 
        RANGE BETWEEN INTERVAL &apos;2&apos; MINUTE preceding AND CURRENT ROW) AS maxPrice
  FROM t_jdbcsource_over_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-302688840">ITEM001	Electronic	2017-11-11 10:01:00	20	20</stringProp>
                    <stringProp name="1136372310">ITEM002	Electronic	2017-11-11 10:02:00	50	50</stringProp>
                    <stringProp name="-1724151534">ITEM003	Electronic	2017-11-11 10:03:00	30	50</stringProp>
                    <stringProp name="-88576941">ITEM004	Electronic	2017-11-11 10:03:00	60	60</stringProp>
                    <stringProp name="1149353006">ITEM005	Electronic	2017-11-11 10:05:00	40	60</stringProp>
                    <stringProp name="-1711170900">ITEM006	Electronic	2017-11-11 10:06:00	20	40</stringProp>
                    <stringProp name="-270262708">ITEM007	Electronic	2017-11-11 10:07:00	70	70</stringProp>
                    <stringProp name="984192558">ITEM008	Clothes	2017-11-11 10:08:00	20	20</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-SS_rowsover_002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT  
    ID,
   type1, 
    myrowtime, 
    price,  
    MAX(price) OVER (
        PARTITION BY type1
        ORDER BY myrowtime 
        ROWS BETWEEN 2 preceding AND CURRENT ROW) AS maxPrice
  FROM t_jdbcsource_over_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="27330761">ITEM001                Electronic             1510365660000                      20.0                      20.0</stringProp>
                    <stringProp name="-36897057">ITEM002                Electronic             1510365720000                      50.0                      50.0</stringProp>
                    <stringProp name="-512524120">ITEM003                Electronic             1510365780000                      30.0                      50.0</stringProp>
                    <stringProp name="-419325211">ITEM004                Electronic             1510365780000                      60.0                      60.0</stringProp>
                    <stringProp name="-697709346">ITEM005                Electronic             1510365900000                      40.0                      60.0</stringProp>
                    <stringProp name="-1173336409">ITEM006                Electronic             1510365960000                      20.0                      60.0</stringProp>
                    <stringProp name="1191680200">ITEM007                Electronic             1510366020000                      70.0                      70.0</stringProp>
                    <stringProp name="-900801979">ITEM008                   Clothes             1510366080000                      20.0                      20.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_over_bch01;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_over_bch01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201  join" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch01;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch01;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch02;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch02;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch03;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch03;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch04;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch04;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch05;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch05;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_join_bch01 (a bigint, b bigint,c varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;join1&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_join_bch01 (a bigint, b bigint,c varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;join1&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_join_bch02 (a bigint, b bigint,c varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;join2&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_join_bch02 (a bigint, b bigint,c varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;join2&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_join_bch03 (a bigint, b bigint,c varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;join1_copy&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_join_bch03 (a bigint, b bigint,c varchar(20)) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;join1_copy&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_join_bch04 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_join_bch04 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_join_bch05 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime_copy1&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_join_bch05 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime1&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;rowtime_copy1&apos;);



</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-join-01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select 
    s1.c,s2.c 
from t_jdbcsource_join_bch01 AS s1
join t_jdbcsource_join_bch02 AS s2 on s1.a =s2.a
where s1.a = 0;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1686431479">test11	test11</stringProp>
                    <stringProp name="-1686431417">test11	test31</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-left join-02" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_join_bch01 left join t_jdbcsource_join_bch02  on t_jdbcsource_join_bch01.a = t_jdbcsource_join_bch02.a;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1943402253">1	10	test21	null	null	null</stringProp>
                    <stringProp name="-1795084515">1	10	test21	1	10	test21</stringProp>
                    <stringProp name="-737338981">0	10	test11	0	10	test31</stringProp>
                    <stringProp name="-1795084453">1	10	test21	1	10	test41</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-right join-03" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_join_bch01 right join t_jdbcsource_join_bch02  on t_jdbcsource_join_bch01.a = t_jdbcsource_join_bch02.a;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-737339043">0	10	test11	0	10	test11</stringProp>
                    <stringProp name="-1795084515">1	10	test21	1	10	test21</stringProp>
                    <stringProp name="-737338981">0	10	test11	0	10	test31</stringProp>
                    <stringProp name="-1795084453">1	10	test21	1	10	test41</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-outer join-04" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_join_bch01 full outer join t_jdbcsource_join_bch02  on t_jdbcsource_join_bch01.a = t_jdbcsource_join_bch02.a;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1943402253">1	10	test21	null	null	null</stringProp>
                    <stringProp name="-1795084515">1	10	test21	1	10	test21</stringProp>
                    <stringProp name="-737338981">0	10	test11	0	10	test31</stringProp>
                    <stringProp name="-1795084453">1	10	test21	1	10	test41</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-right join-05" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_join_bch01 right join t_jdbcsource_join_bch03  on t_jdbcsource_join_bch01.a = t_jdbcsource_join_bch03.a;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-737339043">0	10	test11	0	10	test11</stringProp>
                    <stringProp name="-1795084515">1	10	test21	1	10	test21</stringProp>
                    <stringProp name="-1237327583">null	null	null	2	10	test31</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-BETWEEN-06" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT t_jdbcsource_join_bch04.id,t_jdbcsource_join_bch04.users,t_jdbcsource_join_bch04.amount,t_jdbcsource_join_bch04.myrowtime,t_jdbcsource_join_bch05.id,t_jdbcsource_join_bch05.users,t_jdbcsource_join_bch05.amount
FROM t_jdbcsource_join_bch04, t_jdbcsource_join_bch05
WHERE t_jdbcsource_join_bch04.id = t_jdbcsource_join_bch05.id AND
      t_jdbcsource_join_bch04.myrowtime BETWEEN t_jdbcsource_join_bch05.myrowtime1- INTERVAL &apos;4&apos; HOUR AND t_jdbcsource_join_bch05.myrowtime1;

  </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1579875671">12	lichen	1234.0	2018-11-21 09:41:54.0	12	lichen	1234.0</stringProp>
                    <stringProp name="-348088664">34	lily	2345.0	2018-11-23 09:42:47.0	34	lily	2345.0</stringProp>
                    <stringProp name="1882034829">67	lichen	2390.0	2018-11-25 09:56:58.0	67	lichen	2390.0</stringProp>
                    <stringProp name="-132320207">9	lichen	76.0	2018-11-26 08:57:39.0	9	lichen	76.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-BETWEEN-07" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT t_jdbcsource_join_bch04.id,t_jdbcsource_join_bch04.users,t_jdbcsource_join_bch04.amount,t_jdbcsource_join_bch05.id,t_jdbcsource_join_bch05.users,t_jdbcsource_join_bch05.amount
FROM t_jdbcsource_join_bch04, t_jdbcsource_join_bch05
WHERE t_jdbcsource_join_bch04.id = t_jdbcsource_join_bch05.id AND
      t_jdbcsource_join_bch04.myrowtime BETWEEN t_jdbcsource_join_bch05.myrowtime1 - INTERVAL &apos;4&apos; HOUR AND t_jdbcsource_join_bch05.myrowtime1;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1157147319">12	lichen	1234.0	12	lichen	1234.0</stringProp>
                    <stringProp name="-531775767">34	lily	2345.0	34	lily	2345.0</stringProp>
                    <stringProp name="-2116222967">67	lichen	2390.0	67	lichen	2390.0</stringProp>
                    <stringProp name="545511285">9	lichen	76.0	9	lichen	76.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch01;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch01;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch03;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch03;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch05;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch05;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch02;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch02;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_join_bch04;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_join_bch04;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 order by" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_orderby_bch01;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_orderby_bch01;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_orderby_bch02;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_orderby_bch02;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_orderby_bch01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_orderby_bch01 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime&apos;);




</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201  CREATE STREAM t_jdbcsource_orderby_bch02 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime_copy&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_orderby_bch02 (id integer,users string, amount double,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;rowtime_copy&apos;);




</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-ORDER BY myrowtime;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_orderby_bch01 ORDER BY myrowtime;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="197430074">12	lichen	1234.0	2018-11-21 09:41:54.0</stringProp>
                    <stringProp name="-1601784150">32	dengchao 	3456.0	2018-11-22 09:42:18.0</stringProp>
                    <stringProp name="-1962202276">34	lily	2345.0	2018-11-23 09:42:47.0</stringProp>
                    <stringProp name="964342168">23	lichen	4578.0	2018-11-25 09:43:25.0</stringProp>
                    <stringProp name="-715739764">67	lichen	2390.0	2018-11-25 09:56:58.0</stringProp>
                    <stringProp name="-1889261045">45	chenhe	4567.0	2018-11-26 01:44:33.0</stringProp>
                    <stringProp name="-915789493">9	lichen	76.0	2018-11-26 08:57:39.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-ORDER BY myrowtime DESC;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_orderby_bch01 ORDER BY myrowtime DESC;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-ORDER BY myrowtime,ID;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select ID,myrowtime from t_jdbcsource_orderby_bch01 ORDER BY myrowtime,ID;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="319913345">12	2018-11-21 09:41:54.0</stringProp>
                    <stringProp name="343496389">32	2018-11-22 09:42:18.0</stringProp>
                    <stringProp name="-1332770814">34	2018-11-23 09:42:47.0</stringProp>
                    <stringProp name="2071171839">23	2018-11-25 09:43:25.0</stringProp>
                    <stringProp name="-834248451">67	2018-11-25 09:56:58.0</stringProp>
                    <stringProp name="1864193554">45	2018-11-26 01:44:33.0</stringProp>
                    <stringProp name="-1351181707">9	2018-11-26 08:57:39.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-select ID,myrowtime from t_jdbcsource_orderby_bch02 ORDER BY myrowtime,ID; " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select ID,myrowtime from t_jdbcsource_orderby_bch02 ORDER BY myrowtime,ID;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="319913345">12	2018-11-21 09:41:54.0</stringProp>
                    <stringProp name="1655267623">23	2018-11-22 09:42:18.0</stringProp>
                    <stringProp name="343496389">32	2018-11-22 09:42:18.0</stringProp>
                    <stringProp name="-1461941945">34	2018-11-22 09:42:18.0</stringProp>
                    <stringProp name="-834248451">67	2018-11-25 09:56:58.0</stringProp>
                    <stringProp name="1864193554">45	2018-11-26 01:44:33.0</stringProp>
                    <stringProp name="-1351181707">9	2018-11-26 08:57:39.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_orderby_bch01;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_orderby_bch01;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 drop stream if exists t_jdbcsource_orderby_bch02;   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_orderby_bch02;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="631 SQL201 and or" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201-drop stream if exists t_jdbcsource_andor_bch01;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_andor_bch01;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201-drop stream if exists t_jdbcsource_andor_bch02;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_andor_bch02;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 CREATE STREAM t_jdbcsource_andor_bch01 (ID varchar, type1 varchar,time1 timestamp, price double)" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM t_jdbcsource_andor_bch01 (ID varchar(20), type1 varchar(20),time1 timestamp, price double) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;, &apos;watermarksDelay&apos;:&apos;0&apos;,&apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;over&apos;);




</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-OR" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_andor_bch01 where type1=&apos;Electronic&apos; or price=20;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1887389551">ITEM001	Electronic	2017-11-11 10:01:00.0	20.0</stringProp>
                    <stringProp name="-832156018">ITEM002	Electronic	2017-11-11 10:02:00.0	50.0</stringProp>
                    <stringProp name="743116754">ITEM003	Electronic	2017-11-11 10:03:00.0	30.0</stringProp>
                    <stringProp name="-179477456">ITEM004	Electronic	2017-11-11 10:03:00.0	60.0</stringProp>
                    <stringProp name="-401156043">ITEM005	Electronic	2017-11-11 10:05:00.0	40.0</stringProp>
                    <stringProp name="1174116729">ITEM006	Electronic	2017-11-11 10:06:00.0	20.0</stringProp>
                    <stringProp name="-1545369258">ITEM007	Electronic	2017-11-11 10:07:00.0	70.0</stringProp>
                    <stringProp name="-1168960071">ITEM008	Clothes	2017-11-11 10:08:00.0	20.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201 TC-AND" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from t_jdbcsource_andor_bch01 where type1=&apos;Electronic&apos; and price=20;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1887389551">ITEM001	Electronic	2017-11-11 10:01:00.0	20.0</stringProp>
                    <stringProp name="1174116729">ITEM006	Electronic	2017-11-11 10:06:00.0	20.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201-drop stream if exists t_jdbcsource_andor_bch01;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_andor_bch01;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="631 SQL201-drop stream if exists t_jdbcsource_andor_bch02;  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists t_jdbcsource_andor_bch02;


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" 803 SQL105-create view" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 DROP VIEW IF EXISTS v_jdbcsource_smint3_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v_jdbcsource_smint3_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 DROP VIEW IF EXISTS v_jdbcsource_smint3_bch1;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v_jdbcsource_smint3_bch1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 drop stream if exists t_jdbcsource_VIEW_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_VIEW_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105  CREATE STREAM t_jdbcsource_VIEW_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_VIEW_bch_01 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;tableName&apos;: &apos;test_005_bch&apos;);

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 CREATE VIEW v_jdbcsource_smint3_bch AS SELECT id from t_jdbcsource_VIEW_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE VIEW v_jdbcsource_smint3_bch AS SELECT id from t_jdbcsource_VIEW_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 TC-KEY _VIEW" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW VIEWS;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1412129012">V_JDBCSOURCE_SMINT3_BCH	PUBLIC</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 CREATE VIEW V_JDBCSOURCE_smint3_bch AS SELECT id from t_jdbcsource_VIEW_bch_01;E" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE VIEW V_JDBCSOURCE_smint3_bch AS SELECT id from t_jdbcsource_VIEW_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 TC-viewname  duplicate" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW VIEWS;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1412129012">V_JDBCSOURCE_SMINT3_BCH	PUBLIC</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 CREATE view v_jdbcsource_smint3_bch1 AS SELECT id from t_jdbcsource_VIEW_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE view v_jdbcsource_smint3_bch1 AS SELECT id from t_jdbcsource_VIEW_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 TC-key_view" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW VIEWS;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1412129012">V_JDBCSOURCE_SMINT3_BCH	PUBLIC</stringProp>
                <stringProp name="1452464711">V_JDBCSOURCE_SMINT3_BCH1	PUBLIC</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 CREATE  v_jdbcsource_smint3_bch2 AS SELECT id from t_jdbcsource_smint3_bch;E" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE  v_jdbcsource_smint3_bch2 AS SELECT id from t_jdbcsource_smint3_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 TC-no key_view" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW VIEWS;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1412129012">V_JDBCSOURCE_SMINT3_BCH	PUBLIC</stringProp>
                <stringProp name="1452464711">V_JDBCSOURCE_SMINT3_BCH1	PUBLIC</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 DROP VIEW IF EXISTS v_jdbcsource_smint3_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v_jdbcsource_smint3_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 DROP VIEW IF EXISTS v_jdbcsource_smint3_bch1;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v_jdbcsource_smint3_bch1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname=" 803 SQL105 drop stream if exists t_jdbcsource_VIEW_bch_01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_VIEW_bch_01;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="910 drop function if exists " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 drop function if exists f_function1;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop function if exists f_function1;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 drop function if exists f_TEST_STRING; " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop function if exists f_TEST_STRING;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 CREATE FUNCTION f_TEST_STRING(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE FUNCTION f_TEST_STRING(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 show functions-01;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show functions;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-315629220">PUBLIC	F_TEST_STRING	FUNCTION</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 drop function if exists f_TEST_STRING;   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop function if exists f_TEST_STRING;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 TC-DROP FUNCTION f_TEST_STRING" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show functions;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-315629220">PUBLIC	F_TEST_STRING	FUNCTION</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 CREATE FUNCTION f_TEST_STRING1 (A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE FUNCTION f_TEST_STRING1 (A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 show functions-02;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show functions;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-34854219">PUBLIC	F_TEST_STRING1	FUNCTION</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 drop function if exists f_test_string1 ;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop function if exists f_test_string1 ;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="910 TC- DROP FUNCTION f_test_string1" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show functions;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-34854219">PUBLIC	F_TEST_STRING1	FUNCTION</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="497 ISQL010 drop stream if exists " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 drop stream if exists t_jdsource_stream_ifexists_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdsource_stream_ifexists_bch;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 CREATE STREAM t_jdsource_stream_ifexists_bch (id integer,tfloat float ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;exists1&apos; );  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdsource_stream_ifexists_bch (id integer,tfloat float ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;exists1&apos; );

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 show streams;   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-324802655">T_JDSOURCE_STREAM_IFEXISTS_BCH</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 TC-删除不存在的表" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists q1;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 drop stream if exists t_jdsource_stream_ifexists_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdsource_stream_ifexists_bch;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 TC-删除存在的表" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-324802655">T_JDSOURCE_STREAM_IFEXISTS_BCH</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 CREATE STREAM t_jdsource_stream_ifexists_bch (id integer,tfloat float ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;exists1&apos; );  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdsource_stream_ifexists_bch (id integer,tfloat float ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;exists1&apos; );

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 show streams;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-324802655">T_JDSOURCE_STREAM_IFEXISTS_BCH</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 drop stream if exists T_JDSOURCE_STREAM_IFEXISTS_BCH;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists T_JDSOURCE_STREAM_IFEXISTS_BCH;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 TC-创建表名小写，删除表名大写" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-324802655">T_JDSOURCE_STREAM_IFEXISTS_BCH</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 TC-删除命令大写" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS q1;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 DROP STREAM IF EXISTS t_jdsource_stream_ifexists_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS t_jdsource_stream_ifexists_bch;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 CREATE STREAM &quot;t_jdsource_stream_ifexists_bch&quot; (id integer,tfloat float ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;exists1&apos; );  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM &quot;t_jdsource_stream_ifexists_bch&quot; (id integer,tfloat float ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;tableName&apos;: &apos;exists1&apos; );

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 show streams;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1377539167">t_jdsource_stream_ifexists_bch</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 DROP STREAM IF EXISTS t_jdsource_stream_ifexists_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS t_jdsource_stream_ifexists_bch;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 TC-创建表名加引号，删除不加引号" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1377539167">t_jdsource_stream_ifexists_bch</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 DROP STREAM IF EXISTS &quot;t_jdsource_stream_ifexists_bch&quot;;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP STREAM IF EXISTS &quot;t_jdsource_stream_ifexists_bch&quot;;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="497 ISQL010 TC-创建表名加引号，删除也加引号" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">show streams;




</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1377539167">t_jdsource_stream_ifexists_bch</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="479 ISQL011 drop view if exists " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 drop stream if exists t_jdbcsource_bch001;  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists t_jdbcsource_bch001;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 TC- 删除不存在的view" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view if exists v001_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011  CREATE STREAM t_jdbcsource_bch001 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;test_002&apos;);   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_bch001 (id integer,name string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;test_002&apos;);

 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">id类型为int</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 create view v001_bch AS select id from  t_jdbcsource_bch001;    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view v001_bch AS select id from  t_jdbcsource_bch001;


 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 SHOW views;    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW views;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="630684675">V001_BCH</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 drop view if exists v001_bch;     " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view if exists v001_bch;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 TC-删除存在的view" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW views;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="630684675">V001_BCH</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 create view &quot;v002_bch&quot; AS select id from  t_jdbcsource_bch001;    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view &quot;v002_bch&quot; AS select id from  t_jdbcsource_bch001;


 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 SHOW views;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW views;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="566995844">v002_bch</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 drop view if exists v002_bch;    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop view if exists v002_bch;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 TC-创建时view name加引号，删除时不加引号" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW views;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="566995844">v002_bch</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 create view v003_bch AS select id from  t_jdbcsource_bch001;     " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create view v003_bch AS select id from  t_jdbcsource_bch001;


 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 DROP VIEW IF EXISTS v003_bch;     " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v003_bch;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 TC-删除命令大写" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW views;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632531717">V003_BCH</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 TC-VIEW name is too long" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS v003_bch66666666666666666666666666666666666666666666;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 DROP VIEW IF EXISTS &quot;v002_bch&quot;    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP VIEW IF EXISTS &quot;v002_bch&quot;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="479 ISQL011 TC-删除view 名字加引号" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SHOW views;

 

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">data值为float</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="566995844">v002_bch</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="496 ISQL004 Table Source filesystem RowtimeAttribute long类型支持 " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 drop stream if exists f_hdfs_csv_001;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> drop stream if exists f_hdfs_csv_001;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 drop stream if exists f_hdfs_csv_002;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> drop stream if exists f_hdfs_csv_002;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 drop stream if exists f_hdfs_csv_003;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> drop stream if exists f_hdfs_csv_003;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 drop stream if exists t_jdsink_file_bch001;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> drop stream if exists t_jdsink_file_bch001;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 CREATE STREAM f_hdfs_csv_001( id string, name string ) properties(&apos;type&apos;:&apos;source&apos;,  &apos;connector&apos;:&apos;filesystem&apos;, &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node6/istream/dingting/jemeter_istream-sql/bch&apos;,  &apos;format&apos;:&apos;csv&apos;, &apos;ignore-first-line&apos;:&apos;false&apos;, &apos;separator&apos;:&apos;,&apos;);" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE STREAM f_hdfs_csv_001(
id string,
name string
) properties(&apos;type&apos;:&apos;source&apos;, 
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node6/istream/dingting/jemeter_istream-sql/bch&apos;, 
&apos;format&apos;:&apos;csv&apos;,
&apos;ignore-first-line&apos;:&apos;false&apos;,
&apos;separator&apos;:&apos;,&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 CREATE STREAM f_hdfs_csv_002( id string, name string ) properties(&apos;type&apos;:&apos;source&apos;,  &apos;connector&apos;:&apos;filesystem&apos;, &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node6/istream/dingting/jemeter_istream-sql/bch&apos;,  &apos;format&apos;:&apos;csv&apos;, &apos;ignore-first-line&apos;:&apos;true&apos;, &apos;separator&apos;:&apos;,&apos;);" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE STREAM f_hdfs_csv_002(
id string,
name string
) properties(&apos;type&apos;:&apos;source&apos;, 
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node6/istream/dingting/jemeter_istream-sql/bch&apos;, 
&apos;format&apos;:&apos;csv&apos;,
&apos;ignore-first-line&apos;:&apos;true&apos;,
&apos;separator&apos;:&apos;,&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 CREATE STREAM f_hdfs_csv_003( id int, name string, time1 long ) properties(&apos;type&apos;:&apos;source&apos;,  &apos;connector&apos;:&apos;filesystem&apos;, &apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node6/istream/dingting/jemeter_istream-sql/bch01&apos;,  &apos;format&apos;:&apos;csv&apos;, &apos;rowtime&apos;:&apos;time1.myrowtime&apos;, &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;separator&apos;:&apos;,&apos;);  " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE STREAM f_hdfs_csv_003(
id int,
name string,
time1 bigint
) properties(&apos;type&apos;:&apos;source&apos;, 
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node6/istream/dingting/jemeter_istream-sql/bch01&apos;, 
&apos;format&apos;:&apos;csv&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;,
&apos;separator&apos;:&apos;,&apos;);

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 -ST-004 CREATE stream t_jdsink_file_bch001 (id int, name string,time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;file&apos;);    " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE stream t_jdsink_file_bch001 (id int, name string,time1 timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;file&apos;);

  </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 TC-&apos;ignore-first-line&apos;:&apos;false&apos;," enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 60000;
select * from f_hdfs_csv_001;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1573206489">id	name</stringProp>
                <stringProp name="47465">1	a</stringProp>
                <stringProp name="48427">2	b</stringProp>
                <stringProp name="49389">3	c</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004  TC-&apos;ignore-first-line&apos;:&apos;true&apos;," enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 60000;
select * from f_hdfs_csv_002;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="47465">1	a</stringProp>
                <stringProp name="48427">2	b</stringProp>
                <stringProp name="49389">3	c</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004 insert into t_jdsink_file_bch001  select * from f_hdfs_csv_003;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into t_jdsink_file_bch001  select * from f_hdfs_csv_003;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="496 ISQL004  TC-RowtimeAttribute long" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from file;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="497205255">1	a	2018-09-08 09:08:08.0</stringProp>
                <stringProp name="-335243451">2	b	2018-09-08 09:08:04.0</stringProp>
                <stringProp name="-1167683508">3	c	2018-09-08 09:08:09.0</stringProp>
                <stringProp name="497205255">1	a	2018-09-08 09:08:08.0</stringProp>
                <stringProp name="-335243451">2	b	2018-09-08 09:08:04.0</stringProp>
                <stringProp name="-1167683508">3	c	2018-09-08 09:08:09.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02 create  jdbc sink" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-key" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-key-stream" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_002;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_002;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_003;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  CREATE STREAM bch_jdbc_sink_001 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_001 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );


 

 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914831">BCH_JDBC_SINK_001</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE stream bch_jdbc_sink_002 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE stream bch_jdbc_sink_002 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

  </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-stream" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914830">BCH_JDBC_SINK_002</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE  bch_jdbc_sink_003 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE  bch_jdbc_sink_003 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );

  </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-NO stream" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914829">BCH_JDBC_SINK_003</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_001;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_003;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_002;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_002;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-key properties  type" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_005;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_005;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_006;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_006;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_004 (id int, name string) PROperties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM bch_jdbc_sink_004 (id int, name string) PROperties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );

 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-PROperties" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914828">BCH_JDBC_SINK_004</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  CREATE STREAM bch_jdbc_sink_005 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;,&apos;tableName&apos;: &apos;test&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">  CREATE STREAM bch_jdbc_sink_005 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;,&apos;tableName&apos;: &apos;test&apos;);

 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-properties" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914827">BCH_JDBC_SINK_005</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_006 (id int, name string)  (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM bch_jdbc_sink_006 (id int, name string)  (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-NO properties" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914826">BCH_JDBC_SINK_006</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-key-key  type" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_007;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_007;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_008;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_008;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_009;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_009;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_011;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_011;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_012;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_012;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_013;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_013;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_014;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_014;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_007 (id int, name string) properties (&apos;TYPE&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_007 (id int, name string) properties (&apos;TYPE&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;TYPE&apos;: &apos;sink&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914825">BCH_JDBC_SINK_007</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_008 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;CONNECTOR&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_008 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;CONNECTOR&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC- &apos;CONNECTOR&apos;: &apos;jdbc&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914824">BCH_JDBC_SINK_008</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_009 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;DRIVER&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_009 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;DRIVER&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC- &apos;DRIVER&apos;: &apos;com.mysql.jdbc.Driver&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914823">BCH_JDBC_SINK_009</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_010 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;DBUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_010 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;DBUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;DBUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914801">BCH_JDBC_SINK_010</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_011 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;USErname&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_011 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;USErname&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;USErname&apos;: &apos;${umysql}&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914800">BCH_JDBC_SINK_011</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_012 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;Password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_012 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;Password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;Password&apos;: &apos;${umysql_password}&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914800">BCH_JDBC_SINK_011</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  CREATE STREAM bch_jdbc_sink_013 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;FetchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_013 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;BatchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;BatchSize&apos;: &apos;1&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914798">BCH_JDBC_SINK_013</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_014 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;TableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_014 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;TableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;TableName&apos;: &apos;test&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914797">BCH_JDBC_SINK_014</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_007;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_007;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_010;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_010;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_009;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_009;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_014;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_014;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_012;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_012;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_008;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_008;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_013;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_013;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_011;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_011;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-name" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-table name " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS 白春红_jdbc_sink_120;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 白春红_jdbc_sink_120;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS 120;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 120;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS @#;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS @#;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS &quot;@#&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;@#&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  DROP STREAM IF EXISTS fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS date;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS date;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS date-1;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS date-1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS  bch12 ；" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS  bch12;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  DROP STREAM IF EXISTS BCH12;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS BCH12;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS &quot;BCH12&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;BCH12&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM 白春红_jdbc_sink_120 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM 白春红_jdbc_sink_120 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM 白春红_jdbc_sink_120" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1243101150">白春红_JDBC_SINK_120</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM @# (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM @# (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM @#" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2019">@#</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM &quot;@#&quot; (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);  " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM &quot;@#&quot; (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM &quot;@#&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2019">@#</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1977655744">fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM date (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM date (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM date" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2090926">DATE</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM date-1 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM date-1 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM date-1" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1338916398">date-1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch12 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch12 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM bch12" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="63019144">BCH12</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM BCH12 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM BCH12 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM bch12" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="63019144">BCH12</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM &quot;BCH12&quot; (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM &quot;BCH12&quot; (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-STREAM bch12" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="63019144">BCH12</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS 白春红_jdbc_sink_120;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 白春红_jdbc_sink_120;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS 120;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS 120;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  DROP STREAM IF EXISTS BCH12;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS BCH12;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  DROP STREAM IF EXISTS fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffttttttttttttttttttttttttttttttttttttttttttttttttttfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS date-1;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS date-1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS &quot;@#&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;@#&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS @#;E" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS @#;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS date;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS date;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS &quot;BCH12&quot;;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS &quot;BCH12&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS  bch12 ；" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS  bch12;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-field name" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_015;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_015;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_016;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_016;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_017;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_017;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_018;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_018;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_019;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_019;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_020;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_020;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_021;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_021;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_022;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_022;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_015 (ID int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_015 (ID int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-ID int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914796">BCH_JDBC_SINK_015</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_016 ( date int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_016 ( date int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-ID int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914795">BCH_JDBC_SINK_016</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  CREATE STREAM bch_jdbc_sink_017 (11 int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_017 (11 int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-11 int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914794">BCH_JDBC_SINK_017</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_018 (fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff11 int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; ); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_018 (fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff11 int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff11 int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914793">BCH_JDBC_SINK_018</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_019 ( id_1 int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_019 ( id_1 int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-id_1 int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914792">BCH_JDBC_SINK_019</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  CREATE STREAM bch_jdbc_sink_020 ( id-dd int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_020 ( id-dd int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-id-dd int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914770">BCH_JDBC_SINK_020</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_021 ( $# int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_021 ( $# int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-$# int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914769">BCH_JDBC_SINK_021</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_022 ( &quot;$#&quot; int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_022 ( &quot;$#&quot; int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-$# int" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914768">BCH_JDBC_SINK_022</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_015;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_015;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_021;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_021;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_017;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_017;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_018;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_018;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_016;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_016;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_020;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_020;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_019;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_019;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_022;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_022;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-quote" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_023;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_023;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_024;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_024;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_025;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_025;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_026;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_026;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_027;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_027;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_023 (id int, name string) properties (type: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_jdbc_sink_023 (id int, name string) properties (type: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-type: &apos;sink&apos;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW STREAMS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1917914767">BCH_JDBC_SINK_023</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_024 (id int, name string) properties (&apos;type&apos;: sink, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_jdbc_sink_024 (id int, name string) properties (&apos;type&apos;: sink, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;type&apos;: sink" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW STREAMS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1917914766">BCH_JDBC_SINK_024</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_025 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;  &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_jdbc_sink_025 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;  &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC- NO ," enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW STREAMS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1917914765">BCH_JDBC_SINK_025</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_026 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;， &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_jdbc_sink_026 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;， &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;type&apos;: &apos;sink&apos;，" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW STREAMS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1917914764">BCH_JDBC_SINK_026</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_027 (id int, name string) properties (&apos;type&apos; &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM bch_jdbc_sink_027 (id int, name string) properties (&apos;type&apos; &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;type&apos; &apos;sink&apos;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SHOW STREAMS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1917914763">BCH_JDBC_SINK_027</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_023;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_023;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_025;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_025;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_027;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_027;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_024;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_024;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_026;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_026;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-field value" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="647 SQL008-02-key-key value " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_028;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_028;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_029;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_029;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_030;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_030;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_031;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_031;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_032;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_032;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_033;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_033;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_034;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_034;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_028 (id int, name string) properties (&apos;type&apos;: &apos;SINK&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);     " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_028 (id int, name string) properties (&apos;type&apos;: &apos;SINK&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;type&apos;: &apos;SINK&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914762">BCH_JDBC_SINK_028</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_029 (id int, name string) properties (&apos;type&apos;: &apos;sink1&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);     " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_029 (id int, name string) properties (&apos;type&apos;: &apos;sink1&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;type&apos;: &apos;sink1&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914761">BCH_JDBC_SINK_029</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_030 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos; &apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);     " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_030 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos; &apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;connector&apos;: &apos; &apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914739">BCH_JDBC_SINK_030</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_031 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;JDBC&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);      " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_031 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;JDBC&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;connector&apos;: &apos;JDBC&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914738">BCH_JDBC_SINK_031</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_032 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;COM.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_032 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;COM.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;driver&apos;: &apos;COM.mysql.jdbc.Driver&apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914737">BCH_JDBC_SINK_032</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02  CREATE STREAM bch_jdbc_sink_033 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;COM.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos; &apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);    " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_033 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;COM.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos; &apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;test&apos;);

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;username&apos;: &apos; &apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914736">BCH_JDBC_SINK_033</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 CREATE STREAM bch_jdbc_sink_034 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos; &apos;);   " enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM bch_jdbc_sink_034 (id int, name string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/dingting&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos; &apos;);

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 TC-&apos;username&apos;: &apos; &apos;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">show streams;




 

 



 


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1917914735">BCH_JDBC_SINK_034</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_028;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_028;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_032;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_032;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_030;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_030;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_031;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_031;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_029;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_029;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_034;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_034;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="647 SQL008-02 DROP STREAM IF EXISTS bch_jdbc_sink_033;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS bch_jdbc_sink_033;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1137 DISQL-UDF-200-1 UDF Trunc" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 drop stream  if exists t_jdbcsource_trunc_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream  if exists t_jdbcsource_trunc_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 drop stream  if exists t_jdbcsink_trunc_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream  if exists t_jdbcsink_trunc_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 drop table  if exists trunc_sink;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table  if exists trunc_sink;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 create table  trunc_sink (date1 date,date2  date,date3  date,date4 date,date5 date,date6 date );" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table  trunc_sink (date1 date,date2  date,date3  date,date4 date,date5 date,date6 date );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1  CREATE STREAM t_jdbcsource_trunc_bch (time1 varchar(20),name  varchar(20),url  varchar(20),date1 date ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;time1&apos;);   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsource_trunc_bch (time1 varchar(20),name  varchar(20),url  varchar(20),date1 date ) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;, &apos;tableName&apos;: &apos;time1&apos;);


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1  CREATE STREAM t_jdbcsink_trunc_bch (date1 date,date2  date,date3  date,date4 date,date5 date,date6 date ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;trunc_sink&apos;);   " enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE STREAM t_jdbcsink_trunc_bch (date1 date,date2  date,date3  date,date4 date,date5 date,date6 date ) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;trunc_sink&apos;);


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 DELETE FROM  trunc_sink;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM  trunc_sink;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 insert into t_jdbcsink_trunc_bch select  TRUNC(DATE &apos;2009-02-12&apos;, &apos;MM&apos;), TRUNC(DATE &apos;2009-02-12&apos;, &apos;MONTH&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;YYYY&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;YEAR&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;YY&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;MON&apos;) FROM t_jdbcsource_trunc_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">insert into t_jdbcsink_trunc_bch select  TRUNC(DATE &apos;2009-02-12&apos;, &apos;MM&apos;), TRUNC(DATE &apos;2009-02-12&apos;, &apos;MONTH&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;YYYY&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;YEAR&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;YY&apos;),TRUNC(DATE &apos;2009-02-12&apos;, &apos;MON&apos;) FROM t_jdbcsource_trunc_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 TC-SELECT * FROM  trunc_sink;" enabled="true">
            <stringProp name="dataSource">${u3}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM  trunc_sink;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-398308376">2009-02-01	2009-02-01	2009-01-01	2009-01-01	2009-01-01	2009-02-01</stringProp>
                <stringProp name="-398308376">2009-02-01	2009-02-01	2009-01-01	2009-01-01	2009-01-01	2009-02-01</stringProp>
                <stringProp name="-398308376">2009-02-01	2009-02-01	2009-01-01	2009-01-01	2009-01-01	2009-02-01</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 drop stream  if exists t_jdbcsource_trunc_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream  if exists t_jdbcsource_trunc_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1137 DISQL-UDF-200-1 drop stream  if exists t_jdbcsink_trunc_bch;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream  if exists t_jdbcsink_trunc_bch;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1268 LDBX081-21 LinkoopDB Query Expression支持CEP SQL" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1268 LDBX081-21  ORDER BY proctime  PARTITION BY key1, key2   E,PARTITION BY后面字段未输出，已提issue，issue号：#1421" enabled="false">
            <stringProp name="TestPlan.comments"> PARTITION BY  后面的字段未输出</stringProp>
          </GenericController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop schema if exists TEST_EXTERNAL; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop schema if exists TEST_EXTERNAL;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists t_jdbcsink_cep_bch_0311;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0311;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 create schema TEST_EXTERNAL;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create schema TEST_EXTERNAL;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 CREATE STREAM TEST_EXTERNAL.t_jdbcsource_cep_bch_01 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;,  &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;proctime&apos;:&apos;proctime&apos;, &apos;tableName&apos;: &apos;cep11&apos;);    " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM TEST_EXTERNAL.t_jdbcsource_cep_bch_01 (id Int, name String, key1 String, key2 String) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;,  &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;proctime&apos;:&apos;proctime&apos;, &apos;tableName&apos;: &apos;cep11&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 CREATE STREAM t_jdbcsink_cep_bch_19 (KEY1 String, KEY2 String, AID int , AKEY1 String, BID Integer, CID Integer, CKEY2 String) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep19_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_0311 (KEY1 String, KEY2 String, AID int , AKEY1 String, BID Integer, CID Integer, CKEY2 String) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep0311_sink&apos;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop table if exists cep0311_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists cep0311_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 create table  cep0311_sink (KEY1 varchar(20), KEY2 varchar(20), AID int , AKEY1 varchar(20), BID Integer, CID Integer, CKEY2 varchar(20));" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  cep0311_sink (KEY1 varchar(20), KEY2 varchar(20), AID int , AKEY1 varchar(20), BID Integer, CID Integer, CKEY2 varchar(20));</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 delete from cep0311_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep0311_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 insert into t_jdbcsink_cep_bch_0311 SELECT *          FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_01          MATCH_RECOGNIZE (            PARTITION BY key1, key2            ORDER BY proctime            MEASURES             A.id AS aid,              A.key1 AS akey1,              LAST(B.id) AS bid,              C.id AS cid,              C.key2 AS ckey2            PATTERN (A B C)            DEFINE              A AS name = &apos;a&apos; AND key1 LIKE &apos;%key%&apos; AND id &gt; 0,              B AS name = &apos;b&apos; AND LAST(A.name, 2) IS NULL,              C AS name = &apos;c&apos; AND LAST(A.name) = &apos;a&apos;          ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_0311 SELECT *
         FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_01
         MATCH_RECOGNIZE (
           PARTITION BY key1, key2
           ORDER BY proctime
           MEASURES
            A.id AS aid,
             A.key1 AS akey1,
             LAST(B.id) AS bid,
             C.id AS cid,
             C.key2 AS ckey2
           PATTERN (A B C)
           DEFINE
             A AS name = &apos;a&apos; AND key1 LIKE &apos;%key%&apos; AND id &gt; 0,
             B AS name = &apos;b&apos; AND LAST(A.name, 2) IS NULL,
             C AS name = &apos;c&apos; AND LAST(A.name) = &apos;a&apos;
         ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments"> ORDER BY proctime</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21TC-select *  from cep0311_sink" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep0311_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-239327468">key1	second_key3	1	key1	2	3	second_key3</stringProp>
                  <stringProp name="-1122261703">key2	second_key4	6	key2	7	8	second_key4</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_01; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_01;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists t_jdbcsink_cep_bch_0311;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0311;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1268 LDBX081-21  no  PARTITION BY  E，不支持FIRST函数，已提issue，issue号：#1421" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists t_jdbcsink_cep_bch_0312;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0312;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  drop table if exist cep0312_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists cep0312_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  create table cep0312_sink(symbol int, tax int,price int,nullPrice int); " enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table cep0312_sink (symbol int, tax int,price int,nullPrice int);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  CREATE STREAM t_jdbcsource_cep_bch_05 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep15&apos;); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM TEST_EXTERNAL.t_jdbcsource_cep_bch_05 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep15&apos;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 CREATE STREAM t_jdbcsink_cep_bch_0312 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep0312_sink&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_0312 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep0312_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 insert into t_jdbcsink_cep_bch_0312 SELECT * FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_05 MATCH_RECOGNIZE (   ORDER BY myrowtime   MEASURES     FIRST(DOWN.price) as first,     LAST(DOWN.price) as last,     FIRST(DOWN.price, 5) as nullPrice,     UP.price AS price   AFTER MATCH SKIP PAST LAST ROW   PATTERN (DOWN{2,} UP)   DEFINE     DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,     UP AS price &gt; LAST(DOWN.price)    ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_0312 SELECT *
FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_05
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    FIRST(DOWN.price) as first,
    LAST(DOWN.price) as last,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">myrowtime不是严格升序</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">25000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 TC-select *  from cep0312_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep0312_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="94111718">17	13	null	19</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">25000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_05; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_05;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  drop stream if exists t_jdbcsink_cep_bch_0312;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0312;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1268 LDBX081-21  PATTERN (A? C)" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_0314; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_0314;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists t_jdbcsink_cep_bch_0315" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0315;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop table if exists cep0315_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists cep0315_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop table if exists cep0311_source" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists cep0311_source;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 create  table cep0315_sink( sumPrice int,sumPrice1 int,startTime timestamp default &apos;2019-09-09 09:09:09&apos;,endTime timestamp default &apos;2019-09-09 09:09:09&apos;,symbol varchar(20));" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create  table cep0315_sink( sumPrice int,sumPrice1 int,startTime timestamp default &apos;2019-09-09 09:09:09&apos;,endTime timestamp default &apos;2019-09-09 09:09:09&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21create  table cep0311_source(symbol varchar(20), tax int,price int,time1 timestamp);" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create  table cep0311_source(symbol varchar(20), tax int,price int,time1 timestamp);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 insert into  cep0311_source values (&apos;XYZ&apos;,1,7,&apos;2018-09-17 10:00:01&apos;),(&apos;XYZ&apos;,2,9,&apos;2018-09-17 10:00:02&apos;),(&apos;XYZ&apos;,1,10,&apos;2018-09-17 10:00:03&apos;),(&apos;XYZ&apos;,2,5,&apos;2018-09-17 10:00:04&apos;),(&apos;XYZ&apos;,2,17,&apos;2018-09-17 10:00:05&apos;),(&apos;XYZ&apos;,2,14,&apos;2018-09-17 10:00:06&apos;);" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  cep0311_source values (&apos;XYZ&apos;,1,7,&apos;2018-09-17 10:00:01&apos;),(&apos;XYZ&apos;,2,9,&apos;2018-09-17 10:00:02&apos;),(&apos;XYZ&apos;,1,10,&apos;2018-09-17 10:00:03&apos;),(&apos;XYZ&apos;,2,5,&apos;2018-09-17 10:00:04&apos;),(&apos;XYZ&apos;,2,17,&apos;2018-09-17 10:00:05&apos;),(&apos;XYZ&apos;,2,14,&apos;2018-09-17 10:00:06&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 CREATE STREAM TEST_EXTERNAL.t_jdbcsource_cep_bch_0314 (symbol varchar(20), tax int,price int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep0311_source&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM TEST_EXTERNAL.t_jdbcsource_cep_bch_0314 (symbol varchar(20), tax int,price int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep0311_source&apos;);

 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  CREATE STREAM t_jdbcsink_cep_bch_0315 ( sumPrice int,sumPrice1 int,startTime timestamp,endTime timestamp,symbol string) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep0315_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_0315 ( sumPrice int,sumPrice1 int,startTime timestamp,endTime timestamp) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep0315_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  delete from cep27_sink;" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from cep27_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 SELECT * FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_0314     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A? C)         DEFINE             A AS A.price&gt;=7,             C AS C.price&lt;=5     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> SELECT *
FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_0314
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A? C)
        DEFINE
            A AS A.price&gt;=7,
            C AS C.price&lt;=5
    );


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 insert into t_jdbcsink_cep_bch_0315 SELECT * FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_0314     MATCH_RECOGNIZE(         PARTITION BY symbol         ORDER BY myrowtime         MEASURES             A.price AS sumPrice,             C.price AS sumPrice1,             FIRST(myrowtime) as startTime,             LAST(myrowtime) as endTime &#x9;   ONE ROW PER MATCH         AFTER MATCH SKIP TO NEXT ROW         PATTERN (A? C)         DEFINE             A AS A.price&gt;=7,             C AS C.price&lt;=5     );   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_0315 SELECT *
FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_0314
    MATCH_RECOGNIZE(
        PARTITION BY symbol
        ORDER BY myrowtime
        MEASURES
            A.price AS sumPrice,
            C.price AS sumPrice1,
            FIRST(myrowtime) as startTime,
            LAST(myrowtime) as endTime
	   ONE ROW PER MATCH
        AFTER MATCH SKIP TO NEXT ROW
        PATTERN (A? C)
        DEFINE
            A AS A.price&gt;=7,
            C AS C.price&lt;=5
    );


</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  TC-select *  from cep0315_sink" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep0315_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="170991022">10	5	2018-09-17 10:00:03.0	2018-09-17 10:00:04.0	XYZ</stringProp>
                  <stringProp name="1554716567">null	5	2018-09-17 10:00:04.0	2018-09-17 10:00:04.0	XYZ</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_0314; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_0314;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  drop stream if exists t_jdbcsink_cep_bch_0315" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0315;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1268 LDBX081-21 DEFINE  DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL," enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_03; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists t_jdbcsink_cep_bch_0316;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0316;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop table if exists cep0316_sink; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists cep0316_sink;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 create table  cep0316_sink(symbol int, tax int,price int,nullPrice int); " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table  cep0316_sink(symbol int, tax int,price int,nullPrice int);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 insert into t_jdbcsink_cep_bch_0316 SELECT * FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_03 MATCH_RECOGNIZE (   ORDER BY myrowtime   MEASURES     FIRST(DOWN.price) as first1,     LAST(DOWN.price) as last1,     FIRST(DOWN.price, 5) as nullPrice,     UP.price AS price   ONE ROW PER MATCH   AFTER MATCH SKIP PAST LAST ROW   PATTERN (DOWN{2,} UP)   DEFINE     DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,     UP AS price &gt; LAST(DOWN.price)    ) AS T;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">insert into t_jdbcsink_cep_bch_0316 SELECT *
FROM TEST_EXTERNAL.t_jdbcsource_cep_bch_03
MATCH_RECOGNIZE (
  ORDER BY myrowtime
  MEASURES
    FIRST(DOWN.price) as first1,
    LAST(DOWN.price) as last1,
    FIRST(DOWN.price, 5) as nullPrice,
    UP.price AS price
  ONE ROW PER MATCH
  AFTER MATCH SKIP PAST LAST ROW
  PATTERN (DOWN{2,} UP)
  DEFINE
    DOWN AS price &lt; LAST(DOWN.price, 1) OR LAST(DOWN.price, 1) IS NULL,
    UP AS price &gt; LAST(DOWN.price)
   ) AS T;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  CREATE STREAM TEST_EXTERNAL.t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,  &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);     " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM TEST_EXTERNAL.t_jdbcsource_cep_bch_03 (symbol varchar(20), tstamp bigint,price int,tax int,time1 timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
 &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;, &apos;tableName&apos;: &apos;cep13&apos;);


 

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 CREATE STREAM t_jdbcsink_cep_bch_0316 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep0316_sink&apos;);   " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM t_jdbcsink_cep_bch_0316 (symbol int, tax int,price int,nullPrice int) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node4}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;batchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;cep0316_sink&apos;);






</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 TC-select *  from cep0316_sink" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select *  from cep0316_sink;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="352277178">19	13	null	20</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21  drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_03; " enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists TEST_EXTERNAL.t_jdbcsource_cep_bch_03;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop stream if exists t_jdbcsink_cep_bch_0316;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists t_jdbcsink_cep_bch_0316;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1268 LDBX081-21 drop schema if exists TEST_EXTERNAL; " enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop schema if exists TEST_EXTERNAL;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">data值为float</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas sink" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas jdbc" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_1326_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_1326_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_sink_1326_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_1326_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table T_PALLAS_1326_01(ID INT primary key,CREATE_TIMESTAMP TIMESTAMP);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM T_PALLAS_jsource_1326 (
 	ID INT primary key,CREATE_TIMESTAMP TIMESTAMP
 ) properties (
	 &apos;type&apos;: &apos;source&apos;, 
	 &apos;connector&apos;: &apos;jdbc&apos;,
	 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
	 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, 
	 &apos;username&apos;: &apos;${umysql}&apos;, 
	 &apos;password&apos;: &apos;${umysql_password}&apos;,
	 &apos;tableName&apos;: &apos;T_PALLAS_1326_01&apos;
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_sink_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream T_PALLAS_sink_1326_001(
ID INT primary key,CREATE_TIMESTAMP TIMESTAMP
)PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;,
  &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_1326_01 (ID,CREATE_TIMESTAMP) values (1,&apos;2019-03-04 11:11:11&apos;),(2,&apos;2019-04-04 12:34:32&apos;),(34,&apos;2018-11-23 06:54:34&apos;),(33,&apos;1993-11-21 09:00:00&apos;),(5,&apos;2011-03-22 13:43:22&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_sink_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_sink_1326_001 select * from T_PALLAS_jsource_1326;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 TC-select-T_PALLAS_sink_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from T_PALLAS_sink_1326_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="355590843">ID	CREATE_TIMESTAMP
1	2019-03-04 11:11:11.0
2	2019-04-04 12:34:32.0
5	2011-03-22 13:43:22.0
33	1993-11-21 09:00:00.0
34	2018-11-23 06:54:34.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_1326_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_1326_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_sink_1326_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas kafka" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1326 LDBX081-09 kafka producer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-producer.sh  --broker-list node6:29093 --topic testkafkas&lt; /home/luyao/kafkaly.txt </stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_sink_1326_002;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_ksource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_ksource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_sink_1326_002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_sink_1326_002(
  ID INT primary key,name string
) PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;,
  &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_ksource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream T_PALLAS_ksource_1326 (
 ID INT primary key,name string
)    PROPERTIES    (
 &apos;type&apos;: &apos;source&apos;,
 &apos;connector&apos;: &apos;kafka&apos;,
 &apos;version&apos;: &apos;0.10&apos;,
 &apos;topic&apos;: &apos;testkafkas&apos;,
 &apos;zookeeper.connect&apos;: &apos;node1:2181 node2:2181 node9:2181/linkoopdb/luyao&apos;,
 &apos;group.id&apos;: &apos;${__Random(1,53467,group.id)}&apos;,
 &apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,
 &apos;format&apos;: &apos;csv&apos; ,
 &apos;separator&apos;:&apos;,&apos;
 );</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_sink_1326_002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_sink_1326_002 select * from T_PALLAS_ksource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 TC-select-T_PALLAS_sink_1326_002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from T_PALLAS_sink_1326_002;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1625634832">ID	NAME
1	zhangsan
2	lisi
3	wangwu
4	zhaoliu
5	zhu
6	张三丰
</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_sink_1326_002;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_ksource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_ksource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas filesystem" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1326 LDBX081-09 put-file" enabled="true">
                <stringProp name="hostname">192.168.1.71</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
                <stringProp name="password">123456</stringProp>
                <stringProp name="command">/home/luyao/uploadhdfs.sh /home/luyao/luyao.csv /node4/linkoopdb/testdb/externalTable</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_sink_1326_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_fsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_fsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_fsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream T_PALLAS_fsource_1326(
	id int,
	name string,
	age int
) properties(
	&apos;type&apos;:&apos;source&apos;,
	&apos;connector&apos;:&apos;filesystem&apos;,
	&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node4/linkoopdb/testdb/externalTable/luyao.csv&apos;,
	&apos;format&apos;:&apos;csv&apos;,
	&apos;separator&apos;:&apos;,&apos;,
	&apos;dataType&apos;:&apos;static&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_sink_1326_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_sink_1326_003(
  id INT primary key,name string,age INT
) PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;,
    &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_sink_1326_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_sink_1326_003 select *from T_PALLAS_fsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 select-T_PALLAS_sink_1326_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from T_PALLAS_sink_1326_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="420771716">ID	NAME	AGE
1	zhangsan	28
2	lisi	29</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1326 LDBX081-09 drop-file" enabled="false">
                <stringProp name="hostname">192.168.1.71</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
                <stringProp name="password">123456</stringProp>
                <stringProp name="command">/home/luyao/drophdfs.sh /node4/linkoopdb/testdb/externalTable/luyao.csv</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">6000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_003" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_sink_1326_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_fsource_1326" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_fsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas pallas" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_psource_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_psource_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_psource_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop STREAM if exists T_PALLAS_psource_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop STREAM if exists T_PALLAS_sink_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_psource_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop STREAM if exists T_PALLAS_psource_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_psource_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table T_PALLAS_psource_jsource_1326(ID INT primary key,NAME VARCHAR(10));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_psource_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM T_PALLAS_psource_jsource_1326 (ID INT primary key,NAME string) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;fetchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;T_PALLAS_psource_jsource_1326&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_psource_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_psource_1326_004(
  ID INT primary key,NAME STRING
) PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;,
    &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_sink_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_sink_1326_004(
  ID INT primary key,NAME STRING
) PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;,
    &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_psource_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_psource_jsource_1326 (ID,NAME) values (1,&apos;ZHANGSAN&apos;),(2,&apos;李四&apos;),(3,&apos;王五&apos;),(4,&apos;tony&apos;),(5,&apos;max&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_psource_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_psource_1326_004 select * from T_PALLAS_psource_jsource_1326;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_sink_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO T_PALLAS_sink_1326_004 SELECT * FROM T_PALLAS_psource_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 TC-select-T_PALLAS_sink_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from T_PALLAS_sink_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1598606509">ID	NAME
1	ZHANGSAN
2	李四
3	王五
4	tony
5	max</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 cancel job &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_psource_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_psource_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_psource_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop STREAM if exists T_PALLAS_psource_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_sink_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop STREAM if exists T_PALLAS_sink_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_psource_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_psource_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas sink upsert" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_table_upsert1" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP TABLE IF EXISTS T_PALLAS_table_upsert1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_table_upsert2" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP TABLE IF EXISTS T_PALLAS_table_upsert2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_upsert_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS T_PALLAS_upsert_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_table_upsert1" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE T_PALLAS_table_upsert1(
   ID INT PRIMARY KEY, NAME VARCHAR(255), ACCOUNT BIGINT, AVERAGE DECIMAL(15,3), INCOME DOUBLE,
  byteField tinyint, shortField smallint, floatField float, dateField date,
  timestampField timestamp
) PROPERTIES(
  &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
) engine pallas;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_table_upsert2" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE T_PALLAS_table_upsert2(
 ID INT PRIMARY KEY, NAME VARCHAR(255), ACCOUNT BIGINT, AVERAGE DECIMAL(15,3), INCOME DOUBLE,
  byteField tinyint, shortField smallint, floatField float, dateField date,
  timestampField timestamp
) PROPERTIES(
  &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
) engine pallas;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_upsert_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_upsert_1326(
  ID INT PRIMARY KEY, NAME VARCHAR(255), ACCOUNT BIGINT, AVERAGE DECIMAL(15,3), INCOME DOUBLE,
  byteField tinyint, shortField smallint, floatField float, dateField date,
  timestampField timestamp
) PROPERTIES(
  &apos;connector&apos;:&apos;pallas&apos;,
  &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;,
  &apos;updateMode&apos;:&apos;upsert&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_table_upsert1" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO T_PALLAS_table_upsert1 VALUES 
(1,&apos;TONY&apos;,123457,11.466,11.4,1,4,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:11&apos;),
(2,&apos;sisi&apos;,123457,11.466,11.4,1,4,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:11&apos;),
(3,&apos;aaaa&apos;,123457,11.466,11.4,1,4,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:11&apos;),
(4,&apos;max&apos;,123457,11.466,11.4,1,4,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:11&apos;),
(5,&apos;mark&apos;,123457,11.466,11.4,1,4,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:11&apos;),
(6,&apos;xixi&apos;,123457,11.466,11.4,1,4,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:11&apos;),
(7,&apos;chch&apos;,123457,11.466,11.4,1,4,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:11&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_table_upsert2" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO T_PALLAS_table_upsert2 VALUES 
(1,&apos;spsp&apos;,123456789,117.46,11.45,1,0,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:31&apos;),
(2,&apos;哈哈&apos;,123456789,117.46,11.45,1,0,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:31&apos;),
(3,&apos;呵呵&apos;,123456789,117.46,11.45,1,0,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:31&apos;),
(4,&apos;依依&apos;,123456789,117.46,11.45,1,0,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:31&apos;),
(5,&apos;张三&apos;,123456789,117.46,11.45,1,0,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:31&apos;),
(6,&apos;李四&apos;,123456789,117.46,11.45,1,0,11.44,&apos;2019-03-04&apos;,&apos;2018-04-19 11:11:31&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_upsert_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO T_PALLAS_upsert_1326 SELECT ID , NAME, ACCOUNT, AVERAGE, INCOME, byteField, shortField, floatField, dateField, timestampField FROM T_PALLAS_table_upsert1 ;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_upsert_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO T_PALLAS_upsert_1326 SELECT * FROM T_PALLAS_table_upsert2;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 select-T_PALLAS_upsert_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from T_PALLAS_upsert_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-122809962">ID	NAME	ACCOUNT	AVERAGE	INCOME	BYTEFIELD	SHORTFIELD	FLOATFIELD	DATEFIELD	TIMESTAMPFIELD
1	spsp	123456789	117.460	11.45	1	0	11.44	2019-3-4	2018-04-19 11:11:31.0
2	哈哈	123456789	117.460	11.45	1	0	11.44	2019-3-4	2018-04-19 11:11:31.0
3	呵呵	123456789	117.460	11.45	1	0	11.44	2019-3-4	2018-04-19 11:11:31.0
4	依依	123456789	117.460	11.45	1	0	11.44	2019-3-4	2018-04-19 11:11:31.0
5	张三	123456789	117.460	11.45	1	0	11.44	2019-3-4	2018-04-19 11:11:31.0
6	李四	123456789	117.460	11.45	1	0	11.44	2019-3-4	2018-04-19 11:11:31.0
7	chch	123457	11.466	11.4	1	4	11.44	2019-3-4	2018-04-19 11:11:11.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_upsert_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP STREAM IF EXISTS T_PALLAS_upsert_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_table_upsert2" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP TABLE IF EXISTS T_PALLAS_table_upsert2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081 09-drop-T_PALLAS_table_upsert1" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DROP TABLE IF EXISTS T_PALLAS_table_upsert1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas source" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas jdbc" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_1326_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_1326_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_1326_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_jsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_table_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_table_jsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_1326_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table T_PALLAS_1326_02(ID INT primary key,CREATE_TIMESTAMP TIMESTAMP);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_source_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM T_PALLAS_source_jsource_1326 (ID INT primary key,CREATE_TIMESTAMP TIMESTAMP) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;fetchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;T_PALLAS_1326_02&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_source_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_source_1326_001(
  ID INT primary key,CREATE_TIMESTAMP TIMESTAMP
) PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;,
    &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_table_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE table T_PALLAS_table_jsink_1326(ID INT primary key,CREATE_TIMESTAMP TIMESTAMP);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM T_PALLAS_jsink_1326(ID INT primary key,CREATE_TIMESTAMP TIMESTAMP) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;: &apos;5&apos;, &apos;tableName&apos;: &apos;T_PALLAS_table_jsink_1326&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_1326_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_1326_02 (ID,CREATE_TIMESTAMP) values (1,&apos;2019-03-04 11:11:11&apos;),(2,&apos;2019-04-04 12:34:32&apos;),(34,&apos;2018-11-23 06:54:34&apos;),(33,&apos;1993-11-21 09:00:00&apos;),(5,&apos;2011-03-22 13:43:22&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_source_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_source_1326_001 select * from T_PALLAS_source_jsource_1326;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_jsink_1326 select * from T_PALLAS_source_1326_001;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 TC-select-T_PALLAS_table_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from T_PALLAS_table_jsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="355590843">ID	CREATE_TIMESTAMP
1	2019-03-04 11:11:11.0
2	2019-04-04 12:34:32.0
5	2011-03-22 13:43:22.0
33	1993-11-21 09:00:00.0
34	2018-11-23 06:54:34.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_table_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_table_jsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_jsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_1326_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_1326_001;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_1326_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_1326_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas source window" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas source window rowtime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_STREAM_ROWTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">DROP STREAM IF EXISTS T_PALLAS_STREAM_ROWTIME;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_TABLE_1326_002" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists T_PALLAS_TABLE_1326_002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsource_1326_002" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists T_PALLAS_jsource_1326_002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_STREAM_ROWTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">CREATE STREAM T_PALLAS_STREAM_ROWTIME(
  ID INT PRIMARY KEY, NAME VARCHAR(255),timestampField timestamp
) PROPERTIES(
  &apos;connector&apos;:&apos;pallas&apos;,
  &apos;linkoopdb.pallas.shard_number&apos; : &apos;2&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;,
  &apos;rowtime&apos;:&apos;timestampField.myrowtime&apos;,
  &apos;watermarksDelay&apos;:&apos;0&apos;
);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_TABLE_1326_002" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table T_PALLAS_TABLE_1326_002( ID INT PRIMARY KEY AUTO_INCREMENT, NAME VARCHAR(255),timestampField timestamp);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_jsource_1326_002" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM T_PALLAS_jsource_1326_002 ( ID INT PRIMARY KEY, NAME VARCHAR(255),timestampField timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;fetchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;T_PALLAS_TABLE_1326_002&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_1326_002" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into T_PALLAS_TABLE_1326_002 (NAME,timestampField) values 
(&apos;Tony&apos;,&apos;2019-04-04 11:36:00&apos;),
(&apos;MAX&apos;,&apos;2019-04-04 11:36:01&apos;),
(&apos;XX&apos;,&apos;2019-04-04 11:36:02&apos;),
(&apos;Tony&apos;,&apos;2019-04-04 11:36:50&apos;),
(&apos;Tony&apos;,&apos;2019-04-04 11:36:32&apos;),
(&apos;Tony&apos;,&apos;2019-04-04 11:46:30&apos;),
(&apos;Tony&apos;,&apos;2019-04-04 11:37:30&apos;),
(&apos;Tony&apos;,&apos;2019-04-04 01:36:30&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_STREAM_ROWTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into T_PALLAS_STREAM_ROWTIME select * from T_PALLAS_jsource_1326_002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 TC-select-T_PALLAS_STREAM_ROWTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; MINUTE),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; MINUTE),count(*) from T_PALLAS_STREAM_ROWTIME group by TUMBLE(myrowtime, INTERVAL &apos;1&apos; MINUTE);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">30000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="962333667">C1	C2	C3
2019-04-04 01:36:00.0	2019-04-04 01:37:00.0	5
2019-04-04 11:46:00.0	2019-04-04 11:47:00.0	1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsource_1326_002" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists T_PALLAS_jsource_1326_002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_TABLE_1326_002" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists T_PALLAS_TABLE_1326_002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_STREAM_ROWTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">DROP STREAM IF EXISTS T_PALLAS_STREAM_ROWTIME;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas source window protime" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_STREAM_PROTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">DROP STREAM IF EXISTS T_PALLAS_STREAM_PROTIME;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_TABLE_1326_005" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists T_PALLAS_TABLE_1326_005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsource_1326_005" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists T_PALLAS_jsource_1326_005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_STREAM_PROTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">CREATE STREAM T_PALLAS_STREAM_PROTIME(
  ID INT PRIMARY KEY, NAME VARCHAR(255),timestampField timestamp
) PROPERTIES(
  &apos;connector&apos;:&apos;pallas&apos;,
  &apos;linkoopdb.pallas.shard_number&apos; : &apos;2&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;,
  &apos;proctime&apos;:&apos;myproctime&apos;
);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_TABLE_1326_005" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table T_PALLAS_TABLE_1326_005( ID INT PRIMARY KEY AUTO_INCREMENT, NAME VARCHAR(255),timestampField timestamp);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_jsource_1326_005" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query"> CREATE STREAM T_PALLAS_jsource_1326_005 ( ID INT PRIMARY KEY, NAME VARCHAR(255),timestampField timestamp) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;fetchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;T_PALLAS_TABLE_1326_005&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_TABLE_1326_005" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into T_PALLAS_TABLE_1326_005 (NAME,timestampField) values (&apos;Tony&apos;,&apos;2019-04-04 11:36:00&apos;),(&apos;MAX&apos;,&apos;2019-04-04 11:36:01&apos;),(&apos;XX&apos;,&apos;2019-04-04 11:36:02&apos;),(&apos;Tony&apos;,&apos;2019-04-04 11:36:50&apos;),(&apos;Tony&apos;,&apos;2019-04-04 11:36:32&apos;),(&apos;Tony&apos;,&apos;2019-04-04 11:46:30&apos;),(&apos;Tony&apos;,&apos;2019-04-04 11:37:30&apos;),(&apos;Tony&apos;,&apos;2019-04-04 01:36:30&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_STREAM_PROTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into T_PALLAS_STREAM_PROTIME select * from T_PALLAS_jsource_1326_005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 select-T_PALLAS_STREAM_PROTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select ID from T_PALLAS_STREAM_PROTIME group by TUMBLE(myproctime, INTERVAL &apos;1&apos; DAY), ID</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">30000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2331">ID</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_jsource_1326_005" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists T_PALLAS_jsource_1326_005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_TABLE_1326_005" enabled="true">
                  <stringProp name="dataSource">${u3}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists T_PALLAS_TABLE_1326_005;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_STREAM_PROTIME" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">DROP STREAM IF EXISTS T_PALLAS_STREAM_PROTIME;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas kafka" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1326 LDBX081-09 kafka topic delete" enabled="true">
                <stringProp name="hostname">192.168.1.75</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
                <stringProp name="password">123456</stringProp>
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node2:2181/linkoopdb/luyao --topic test111</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_1326_03" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_1326_03;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_1326_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_1326_003;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_ksink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_ksink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_1326_03" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table T_PALLAS_1326_03(ID INT primary key,CREATE_TIMESTAMP TIMESTAMP);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_source_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM T_PALLAS_source_jsource_1326 (
 	ID INT primary key,CREATE_TIMESTAMP TIMESTAMP
 ) properties (
	 &apos;type&apos;: &apos;source&apos;,
	 &apos;connector&apos;: &apos;jdbc&apos;,
	 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, 
	 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, 
	 &apos;username&apos;: &apos;${umysql}&apos;, 
	 &apos;password&apos;: &apos;${umysql_password}&apos;,
	 &apos;fetchSize&apos;: &apos;1&apos;,
	 &apos;tableName&apos;: &apos;T_PALLAS_1326_03&apos;
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_source_1326_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_source_1326_003(
  ID INT primary key,CREATE_TIMESTAMP TIMESTAMP
) PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;,
    &apos;linkoopdb.pallas.shard_number&apos; : &apos;1&apos;,
  &apos;linkoopdb.pallas.shard_duplicate_number&apos; : &apos;1&apos;
);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_ksink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_ksink_1326(
  ID INT primary key,CREATE_TIMESTAMP TIMESTAMP
) PROPERTIES (
	&apos;type&apos;: &apos;sink&apos;,
	&apos;connector&apos;: &apos;kafka&apos;,
	&apos;version&apos;: &apos;0.10&apos;,
	&apos;topic&apos;: &apos;test111&apos;,
	&apos;zookeeper.connect&apos;: &apos;node2:2181/linkoopdb/luyao&apos;,
	&apos;group.id&apos;: &apos;${__Random(1,9999999,group.id)}&apos;,
	&apos;bootstrap.servers&apos;: &apos;node6:29093&apos;,
	&apos;format&apos;: &apos;csv&apos; ,
	&apos;separator&apos;:&apos;,&apos;
);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_1326_03" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_1326_03 (ID,CREATE_TIMESTAMP) values 
	(1,&apos;2019-03-04 11:11:11&apos;),
	(2,&apos;2019-04-04 12:34:32&apos;),
	(34,&apos;2018-11-23 06:54:34&apos;),
	(33,&apos;1993-11-21 09:00:00&apos;),
	(5,&apos;2011-03-22 13:43:22&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_source_1326_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_source_1326_003 select * from T_PALLAS_source_jsource_1326;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_ksink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_ksink_1326 select * from T_PALLAS_source_1326_003;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1326 LDBX081-09 kafka consumer" enabled="true">
                <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-console-consumer.sh   --zookeeper  node2:2181/linkoopdb/luyao  --topic test111  --timeout-ms 100000 --max-messages 5 --from-beginning</stringProp>
                <stringProp name="hostname">192.168.1.75</stringProp>
                <stringProp name="password">123456</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">luyao</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="854840347">1,2019-03-04 11:11:11.0
2,2019-04-04 12:34:32.0
5,2011-03-22 13:43:22.0
33,1993-11-21 09:00:00.0
34,2018-11-23 06:54:34.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1326 LDBX081-09 pallas filesystem " enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="1326 LDBX081-09 drop-file" enabled="true">
                <stringProp name="hostname">192.168.1.73</stringProp>
                <intProp name="port">22</intProp>
                <stringProp name="username">testdb</stringProp>
                <stringProp name="password">123456</stringProp>
                <stringProp name="command">/home/testdb/drophdfs.sh /node4/linkoopdb/testdb/externalTable/filesystemsink4.csv</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">6000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 show jobs" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SHOW JOBS;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jobid</stringProp>
                  <stringProp name="RegexExtractor.regex">	(.+?)	20</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 cancel jobs &quot;${jobid_1}&quot;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CANCEL JOB &quot;${jobid_1}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_1326_04" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_1326_04;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_EXTERNAL_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_EXTERNAL_fsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_table_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_PALLAS_table_fsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_jsource_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_source_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_source_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 drop-T_PALLAS_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">drop stream if exists T_PALLAS_fsink_1326;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_1326_04" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table T_PALLAS_1326_04(ID INT primary key,CREATE_TIMESTAMP TIMESTAMP);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_source_jsource_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM T_PALLAS_source_jsource_1326 (ID INT primary key,CREATE_TIMESTAMP TIMESTAMP) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;, &apos;fetchSize&apos;: &apos;1&apos;, &apos;tableName&apos;: &apos;T_PALLAS_1326_04&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_source_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_PALLAS_source_1326_004(
  ID INT primary key,CREATE_TIMESTAMP TIMESTAMP
) PROPERTIES (
  &apos;connector&apos;:&apos;pallas&apos;
);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">create stream T_PALLAS_fsink_1326(
id int,
CREATE_TIMESTAMP TIMESTAMP
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node4/linkoopdb/testdb/externalTable/filesystemsink4.csv&apos;,
&apos;format&apos;:&apos;csv&apos;,
&apos;separator&apos;:&apos;,&apos;,
&apos;dataType&apos;:&apos;static&apos; );</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_table_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE T_PALLAS_table_fsink_1326 (ID INT primary key,CREATE_TIMESTAMP TIMESTAMP);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_1326" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_1326_04 (ID,CREATE_TIMESTAMP) values (1,&apos;2019-03-04 11:11:11&apos;),(2,&apos;2019-04-04 12:34:32&apos;),(34,&apos;2018-11-23 06:54:34&apos;),(33,&apos;1993-11-21 09:00:00&apos;),(5,&apos;2011-03-22 13:43:22&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_source_1326_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_source_1326_004 select * from T_PALLAS_source_jsource_1326;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_fsink_1326 select * from T_PALLAS_source_1326_004;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 create-T_PALLAS_EXTERNAL_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE EXTERNAL TABLE T_PALLAS_EXTERNAL_fsink_1326 (ID INT primary key,CREATE_TIMESTAMP TIMESTAMP) LOCATION (&apos;hdfs://192.168.1.70:8020/node4/linkoopdb/testdb/externalTable/filesystemsink4.csv&apos;) FORMAT &apos;csv&apos; (DELIMITER &apos;,&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 insert-T_PALLAS_table_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_PALLAS_table_fsink_1326 select * from T_PALLAS_EXTERNAL_fsink_1326;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1326 LDBX081-09 select-T_PALLAS_table_fsink_1326" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">select * from T_PALLAS_table_fsink_1326;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1522 LDBX081-22 设置并发数和最大等待时长" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1522 LDBX081-22  STREAM_QUERY_LATENCY_MILLS" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1522 LDBX081-22  STREAM_QUERY_LATENCY_MILLS 200" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 drop-table-T_LATENCY_1522_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_LATENCY_1522_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 drop-stream-T_jsource_LATENCY_1522_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  T_jsource_LATENCY_1522_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 create-table-T_LATENCY_1522_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table T_LATENCY_1522_01(id int primary key,name varchar(10),age int);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 create-stream-T_jsource_LATENCY_1522_01" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM T_jsource_LATENCY_1522_01 (id int primary key,name varchar(10),age int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,  &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;proctime&apos;:&apos;proctime&apos;, &apos;tableName&apos;: &apos;T_LATENCY_1522_01&apos;);
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 insert-T_LATENCY_1522_01" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_LATENCY_1522_01 values (1,&apos;zhangsan&apos;,20),(2,&apos;鑫鑫&apos;,22),(3,&apos;点点&apos;,21),(4,&apos;lisi&apos;,21);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 TC" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 200;
select * from T_jsource_LATENCY_1522_01;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-63648387">ID	NAME	AGE	PROCTIME</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1522 LDBX081-22  STREAM_QUERY_LATENCY_MILLS 20000" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 drop-table-T_LATENCY_1522_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table if exists T_LATENCY_1522_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 drop-stream-T_jsource_LATENCY_1522_02" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists  T_jsource_LATENCY_1522_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 create-table-T_LATENCY_1522_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table T_LATENCY_1522_02(id int primary key,name varchar(10),age int);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 insert-T_LATENCY_1522_02" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into T_LATENCY_1522_02 values (1,&apos;zhangsan&apos;,20),(2,&apos;鑫鑫&apos;,22),(3,&apos;点点&apos;,21),(4,&apos;lisi&apos;,21);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 create-stream-T_jsource_LATENCY_1522_02" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM T_jsource_LATENCY_1522_02 (
 id int primary key,name varchar(10),age int
) properties (
 &apos;type&apos;: &apos;source&apos;,
 &apos;connector&apos;: &apos;jdbc&apos;,
 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, 
 &apos;username&apos;: &apos;${umysql}&apos;,
 &apos;password&apos;: &apos;${umysql_password}&apos;,
 &apos;tableName&apos;: &apos;T_LATENCY_1522_02&apos;
 );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 TC" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;
select * from T_jsource_LATENCY_1522_02;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1165656399">1	zhangsan	20
</stringProp>
                    <stringProp name="-1788571816">2	鑫鑫	22
</stringProp>
                    <stringProp name="484861400">3	点点	21
</stringProp>
                    <stringProp name="-811373920">4	lisi	21</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1522 LDBX081-22  STREAM_EXECUTE_PARALLELISM " enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 set-session STREAM_EXECUTE_PARALLELISM" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 3;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 drop-table-T_PARALLELISM_1522" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table if exists T_PARALLELISM_1522;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 drop-stream-T_jsource_PARALLELISM_1522" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists  T_jsource_PARALLELISM_1522;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 create-table-T_PARALLELISM_1522" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table T_PARALLELISM_1522(id int primary key AUTO_INCREMENT,name varchar(10),age int);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 insert-T_PARALLELISM_1522" enabled="true">
              <stringProp name="dataSource">${u3}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into T_PARALLELISM_1522 (name,age) values (&apos;zhangsan&apos;,20),(&apos;鑫鑫&apos;,22),(&apos;点点&apos;,21),(&apos;lisi&apos;,21);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 create-stream-T_jsource_PARALLELISM_1522" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> CREATE STREAM T_jsource_PARALLELISM_1522 (id int primary key,name varchar(10),age int
 ) properties (
 &apos;type&apos;: &apos;source&apos;,
 &apos;connector&apos;: &apos;jdbc&apos;, 
 &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
 &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;,
 &apos;username&apos;: &apos;${umysql}&apos;,
 &apos;password&apos;: &apos;${umysql_password}&apos;,
 &apos;tableName&apos;: &apos;T_PARALLELISM_1522&apos;
 );
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1522 LDBX081-22 TC" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 30000;
select * from T_jsource_PARALLELISM_1522;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1100905563">ID	NAME	AGE
</stringProp>
                  <stringProp name="1165656399">1	zhangsan	20
</stringProp>
                  <stringProp name="-1788571816">2	鑫鑫	22
</stringProp>
                  <stringProp name="484861400">3	点点	21
</stringProp>
                  <stringProp name="-811373920">4	lisi	21</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
