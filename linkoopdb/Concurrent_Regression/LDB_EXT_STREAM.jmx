<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="STREAM" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host, 192.168.1.73)}</stringProp>
            <stringProp name="Argument.desc">node</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a" elementType="Argument">
            <stringProp name="Argument.name">a</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.desc">dba user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a_password" elementType="Argument">
            <stringProp name="Argument.name">a_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">dba user password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">u_sqlserverlink_1</stringProp>
            <stringProp name="Argument.desc">ordinary user1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u1_password" elementType="Argument">
            <stringProp name="Argument.name">u1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary user1 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">T_USER2</stringProp>
            <stringProp name="Argument.desc">ordinary user2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u2_password" elementType="Argument">
            <stringProp name="Argument.name">u2_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary user2 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">T_USER3</stringProp>
            <stringProp name="Argument.desc">ordinary user3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3_password" elementType="Argument">
            <stringProp name="Argument.name">u3_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary user3 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="basic_data_manipulation_u1" elementType="Argument">
            <stringProp name="Argument.name">basic_data_manipulation_u1</stringProp>
            <stringProp name="Argument.value">basic_data_manipulation_u1</stringProp>
            <stringProp name="Argument.desc">ordinary basic_data_manipulation_u1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="basic_data_manipulation_u1_password" elementType="Argument">
            <stringProp name="Argument.name">basic_data_manipulation_u1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary basic_data_manipulation_u1 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="user" elementType="Argument">
            <stringProp name="Argument.name">user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysqluser" elementType="Argument">
            <stringProp name="Argument.name">mysqluser</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_dblink_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_dblink_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3306/wytest</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_driver" elementType="Argument">
            <stringProp name="Argument.name">mysql_driver</stringProp>
            <stringProp name="Argument.value">com.mysql.jdbc.Driver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_ddl_user1" elementType="Argument">
            <stringProp name="Argument.name">t_ddl_user1</stringProp>
            <stringProp name="Argument.value">T_DDL_USER1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_ddl_user1_password" elementType="Argument">
            <stringProp name="Argument.name">t_ddl_user1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user1" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user1</stringProp>
            <stringProp name="Argument.value">u_authorization_user1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user1_password" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user2" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user2</stringProp>
            <stringProp name="Argument.value">u_authorization_user2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user2_password" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user2_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="parquet_url_1" elementType="Argument">
            <stringProp name="Argument.name">parquet_url_1</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/item.parquet</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="ldbdist所需变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ldbdist://192.168.1.70:54321/single/singles.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single/singles.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single/singles.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files/files1.csv,ldbdist://192.168.1.70:54321/files/files2.csv,ldbdist://192.168.1.70:54321/files/files3.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files/files1.csv,ldbdist://192.168.1.70:54321/files/files2.csv,ldbdist://192.168.1.70:54321/files/files3.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files/files1.csv,ldbdist://192.168.1.70:54321/files/files2.csv,ldbdist://192.168.1.70:54321/files/files3.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/single" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/file" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/file</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/file&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/file" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/file</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/file&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files/files[1-3].csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files/files[1-3].csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files/files[1-3].csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files/files[1-3].csv,ldbdist://192.168.1.70:54321/single" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files/files[1-3].csv,ldbdist://192.168.1.70:54321/single</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files/files[1-3].csv,ldbdist://192.168.1.70:54321/single&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/notexist.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/notexist.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/notexist.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/notexist" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/notexist</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/notexist&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang1.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang1.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang1.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/files" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/files</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/files&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="stream所需变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="stream_u1" elementType="Argument">
            <stringProp name="Argument.name">stream_u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stream_u3" elementType="Argument">
            <stringProp name="Argument.name">stream_u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="bigdata" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">bigdata</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb;query_iterator=1</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="admin" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${a}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${u1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${u1}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="u_authorization_user1" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">u_authorization_user1</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">u_authorization_user1</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${basic_data_manipulation_u1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${basic_data_manipulation_u1}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${basic_data_manipulation_u1}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${t_ddl_user1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${t_ddl_user1}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${t_ddl_user1}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${a}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${user}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql node4" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:mysql://${node}:3306/jmeter_istreamsql</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${mysqluser}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${b}</stringProp>
        <stringProp name="dbUrl">${mysql_dblink_url}</stringProp>
        <stringProp name="driver">${mysql_driver}</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${mysqluser}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="a1" enabled="true">
        <stringProp name="TestPlan.comments">JDBC连接</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">a1</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">admin</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="a2" enabled="true">
        <stringProp name="TestPlan.comments">JDBC连接</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">a2</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">admin</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb_stream" enabled="true">
        <stringProp name="dataSource">${stream_u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${user}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql_stream" enabled="true">
        <stringProp name="dataSource">${stream_u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:mysql://${node}:3306/jmeter_istreamsql</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">test</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="LDB_EXT_STREAM" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">调用函数问题，开发目前没有最佳的解决方案，暂时停用。</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup" enabled="false"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP SCHEMA" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP SCHEMA IF EXISTS stream CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE SCHEMA" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE SCHEMA ${schema};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SET SCHEMA" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">SET SCHEMA ${schema};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08 Functions(Same with LinkoopDB) " enabled="true">
          <stringProp name="TestPlan.comments">932 LDBX081-08 TC-test int_string-01，  insert into 数据类型为numeric 报错，暂时禁用，bug号 #1402</stringProp>
        </GenericController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08-UDF" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="932 LDBX081-08 -no inherit-function" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -DT-function-001" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_STRING;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08- drop STREAM if exists aaaaa;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists aaaaa;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop STREAM if exists aaaaa_sink;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists aaaaa_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08- CREATE STREAM aaaaa" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> CREATE STREAM aaaaa (id Int) properties (&apos;type&apos;: &apos;source&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://node4:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;test&apos;, &apos;password&apos;: &apos;123456&apos;,&apos;tableName&apos;: &apos;aaaaa&apos; );
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 drop table if exists aaaaa_sink;" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop table if exists aaaaa_sink;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08  CREATE STREAM aaaaa_sink (data varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aaaaa_sink&apos; ); " enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM aaaaa_sink (data varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aaaaa_sink&apos; );


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 create table aaaaa_sink(data varchar(20));" enabled="true">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> create table aaaaa_sink(data varchar(20));</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08-SF-001" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_STRING(A INT ,B INT ) RETURNS VARCHAR(20) LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDF.getString&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 insert into aaaaa_sink select (f_TEST_STRING(2,19)  from aaaaa;                      " enabled="false">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into aaaaa_sink select f_TEST_STRING(2,19)  from aaaaa;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">insert into 数据类型为numeric 报错，暂时禁用</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-test int_string-01" enabled="false">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from aaaaa_sink;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">insert into 数据类型为numeric 报错，暂时禁用</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">30000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1552630">2@19</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -DT-function-002" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_DOU;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08   drop table if exists aaaaa_sink3;" enabled="false">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop table if exists aaaaa_sink3;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08  create table aaaaa_sink3(data DOUBLE);" enabled="false">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> create table aaaaa_sink3(data DOUBLE);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 CREATE FUNCTION TEST_DOU(A INT ,B INT ) RETURNS DOUBLE LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDFDouble.getString&apos;" enabled="false">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_DOU(A INT ,B INT ) RETURNS DOUBLE LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestUDFDouble.getString&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08  CREATE STREAM aaaaa_sink3 (data DOUBLE) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aaaaa_sink3&apos; );   " enabled="false">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM aaaaa_sink3 (data DOUBLE) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aaaaa_sink3&apos; );


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08  insert into aaaaa_sink3 select TEST_DOU(2,19) from  aaaaa;                       " enabled="false">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into aaaaa_sink3 select TEST_DOU(2,19) from  aaaaa;

                    


                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-select * from  aaaaa_sink3;" enabled="false">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  aaaaa_sink3;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1538113">21.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -DT-function-003" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_DOUBLE;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08-SF-004" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_DOUBLE(a DOUBLE ,b INT ) RETURNS DOUBLE LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.IntDouble.getString&apos; </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">id类型为int</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -TC-FUNCTION-004" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_DOUBLE(2.78,19) from  aaaaa;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="47681776">21.78</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -DT-function-004" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_ST;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08-SF-005" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_ST(b BOOLEAN ) RETURNS BOOLEAN LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.BooleanTest.getString&apos; </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -TC-FUNCTION-005" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_ST(TRUE)from aaaaa;


                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -DT-function-005" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_SHORT1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08  drop table if exists aaaaa_sink6;" enabled="false">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop table if exists aaaaa_sink6;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08   create table aaaaa_sink6(data INT);" enabled="false">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> create table aaaaa_sink6(data INT);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08-SF-006" enabled="false">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_SHORT1(A SMALLINT ,B SMALLINT ) RETURNS INT LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.TestShort.getString&apos; </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08  CREATE STREAM aaaaa_sink6 (data INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aaaaa_sink6&apos; );   " enabled="false">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> CREATE STREAM aaaaa_sink6 (data INT) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://${node}:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aaaaa_sink6&apos; );


</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 insert into aaaaa_sink6 select TEST_SHORT1(-32768,-32768 ) from aaaaa;                       " enabled="false">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">insert into aaaaa_sink6 select TEST_SHORT1(-32768,-32768 ) from aaaaa;


                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 TC-select * from  aaaaa_sink6;" enabled="false">
                <stringProp name="dataSource">${u3}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  aaaaa_sink6;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1339813420">-65536</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -DT-function-006" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop function if exists TEST_SHORT;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08-SF-007" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE FUNCTION TEST_SHORT(A SMALLINT ,B SMALLINT ) RETURNS DOUBLE LANGUAGE JAVA NOT DETERMINISTIC EXTERNAL NAME &apos;CLASSPATH:org.apache.ShortDouble.getString&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08 -TC-FUNCTION-007" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select TEST_SHORT(-32768,-32768 ) from aaaaa;

                    </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-929490706">-65536.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">40000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="932 LDBX081-08-  drop STREAM if exists aaaaa;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query"> drop STREAM if exists aaaaa;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
