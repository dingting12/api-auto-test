SQLCli Release 0.0.61
SQL> start SingleTableOperation1000.sql
SQL> ﻿--单表操作
Not connected. 
SQL> --case编写人 王煜
   > --编写日期 5月7日~5月10日
   > --以下测试用例仅包含对pallas表的操作（关于hdfs表替换表名及表结构即可复用）
   > --目前对结果的查询仅包含select方式，insert into到结果表中的测试用例后续会添加（因为创建结果表中的字段比较复杂） 
SQL> connect admin/123456@jdbc:linkoopdb:tcp://192.168.1.62:59105/ldb
Database connected.
SQL> 
SQL> --记录执行时间
SQL> set timing off
SQL> --不需要返回结果
SQL> set termout off
SQL> set echo on
SQL> 
SQL> --全表扫描
   > 
   > ---使用*，查询全字段
SQL> SELECT * FROM P1000  LIMIT 100;
100 rows selected.
SQL> 
SQL> ---列组合
SQL> SELECT TSMALLINT,TDOUBLE FROM P1000 LIMIT 100;
100 rows selected.
SQL> SELECT TSMALLINT,TDOUBLE,TDATE,TVARCHAR FROM P1000 LIMIT 10;
10 rows selected.
SQL> SELECT TSMALLINT,TBIGINT,TDOUBLE,TDATE,TBOOL,TTIMESTAMP,TCHAR,TVARCHAR FROM P1000 LIMIT 10;
10 rows selected.
SQL> 
SQL> ---DISTINCT组合
SQL> SELECT DISTINCT TSMALLINT,TDOUBLE FROM P1000 LIMIT 10;
10 rows selected.
SQL> SELECT DISTINCT TSMALLINT,TDOUBLE,TDATE,TVARCHAR FROM P1000 LIMIT 10;
10 rows selected.
SQL> SELECT DISTINCT TSMALLINT,TBIGINT,TDOUBLE,TDATE,TBOOL,TTIMESTAMP,TCHAR,TVARCHAR FROM P1000 LIMIT 10;
10 rows selected.
SQL> SELECT DISTINCT TVARCHAR,TCHAR,TBOOL,TTIMESTAMP,TDATE,TNUMERIC,TDECIMAL,TFLOAT,TDOUBLE,TREAL,TBIGINT,TINTEGER,TSMALLINT FROM P1000 LIMIT 10;
10 rows selected.
SQL> 
SQL> --带过滤条件
   > 
   > ---每列
   > 
   > ----smallint类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TSMALLINT IN (8638,9837,1224,8317,9225,7464,4661,818,9317,5932,5047,2741) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----smallint类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TSMALLINT IN (SELECT b.TSMALLINT FROM P1000 AS b WHERE b.TSMALLINT IN (8638,9837,1224,8317) OR b.TSMALLINT IN (SELECT c.TSMALLINT FROM P1000 AS c WHERE c.TSMALLINT IN (9225,7464,4661,818,9317,5932,5047,2741))) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----integer类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TINTEGER >= 503040 OR TINTEGER <= 1223 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----integer类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TINTEGER IN (SELECT b.TINTEGER FROM P1000 AS b WHERE b.TINTEGER >= 503040 OR b.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER <= 1223)) LIMIT 10;
10 rows selected.
SQL> 
SQL> 
SQL> ----bigint类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TBIGINT BETWEEN 234567802455 AND 908667115321 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----bigint类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----real类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TREAL NOT IN (155656.656,274367.736) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----real类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----double类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TDOUBLE <=9852.9 AND TDOUBLE >=5236.45 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----real类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852.9 AND TDOUBLE >=5236.45) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----float类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TFLOAT IS NOT NULL AND (TFLOAT BETWEEN 1092 AND 3284) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----float类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284)) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----decimal类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TDECIMAL IS NULL OR TDECIMAL >=8378.5 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----decimal类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----numeric类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TNUMERIC <> 7418.1886 AND TNUMERIC <> 8674.5869 AND TNUMERIC <> 9135.7007 AND TNUMERIC != 2827.9165 AND TNUMERIC != 4731.5215 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----numeric类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TNUMERIC IN (SELECT i.TNUMERIC FROM P1000 AS i WHERE i.TNUMERIC <> 7418.1886 AND i.TNUMERIC <> 8674.5869 AND i.TNUMERIC <> 9135.7007 AND i.TNUMERIC != 2827.9165 AND i.TNUMERIC != 4731.5215) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----date类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TDATE IN (DATE '1990-01-01',DATE '2005-12-30') LIMIT 10;
10 rows selected.
SQL> 
SQL> ----date类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TDATE IN (SELECT j.TDATE FROM P1000 AS j WHERE j.TDATE IN (DATE '1990-01-01',DATE '2005-12-30')) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----timestamp类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12') LIMIT 10;
10 rows selected.
SQL> 
SQL> ----timestamp类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TTIMESTAMP IN (SELECT k.TTIMESTAMP FROM P1000 AS k WHERE k.TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12')) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----boolean类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TBOOL = TRUE LIMIT 10;
10 rows selected.
SQL> 
SQL> ----boolean类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TBOOL IN (SELECT l.TBOOL FROM P1000 AS l WHERE l.TBOOL = TRUE) LIMIT 10;
10 rows selected.
SQL> 
SQL> ----char类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TCHAR LIKE '%a%' OR TCHAR LIKE 'q%' OR TCHAR LIKE '%z' LIMIT 10;
10 rows selected.
SQL> 
SQL> ----char类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TCHAR IN (SELECT m.TCHAR FROM P1000 AS m WHERE m.TCHAR LIKE '%a%' OR m.TCHAR LIKE 'q%' OR m.TCHAR LIKE '%z') LIMIT 10;
10 rows selected.
SQL> 
SQL> ----varchar类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000
   > WHERE TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_' LIMIT 10;
10 rows selected.
SQL> 
SQL> ----varchar类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a 
   > WHERE a.TVARCHAR IN (SELECT n.TVARCHAR FROM P1000 AS n WHERE n.TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_') LIMIT 10;
10 rows selected.
SQL> 
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE (
   >        TSMALLINT IN (8638,9837,1224,8317,9225,7464,4661,818,9317,5932,5047,2741)) 
   >        AND (TINTEGER >= 503040 OR TINTEGER <= 1223) 
   > 	   OR (TBIGINT BETWEEN 234567802455 AND 908667115321)
   >        AND (TREAL NOT IN (155656.656,274367.736)) 
   > 	   OR (TDOUBLE <=9852.9 AND TDOUBLE >=5236.45) 
   > 	   OR (TFLOAT IS NOT NULL  AND (TFLOAT BETWEEN 1092 AND 3284))
   > 	   OR ((TDECIMAL IS NULL OR TDECIMAL >=8378.5) 
   > 	   AND (TNUMERIC <> 7418.1886 AND TNUMERIC <> 8674.5869 AND TNUMERIC <> 9135.7007 AND TNUMERIC != 2827.9165 AND TNUMERIC != 4731.5215)) 
   > 	   OR TDATE IN (DATE '1990-01-01',DATE '2005-12-30') 
   > 	   OR ((TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12')) 
   > 	   AND (TBOOL = TRUE))
   > 	   OR (TCHAR LIKE '%a%' OR TCHAR LIKE 'q%' OR TCHAR LIKE '%z') 
   > 	   OR (TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_') LIMIT 10;
10 rows selected.
SQL> 
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段作为过滤条件的子查询
SQL> SELECT a.TSMALLINT,a.TINTEGER,a.TBIGINT,a.TREAL,a.TDOUBLE,a.TFLOAT,a.TDECIMAL,a.TNUMERIC,a.TDATE,a.TTIMESTAMP,a.TBOOL,a.TCHAR,a.TVARCHAR FROM P1000 AS a WHERE 
   >        a.TSMALLINT IN (SELECT b.TSMALLINT FROM P1000 AS b WHERE b.TSMALLINT IN (8638,9837,1224,8317,9225,7464,4661,818,9317,5932,5047,2741))
   >        AND a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        OR a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        OR a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        OR (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5)
   >        AND a.TNUMERIC IN (SELECT i.TNUMERIC FROM P1000 AS i WHERE i.TNUMERIC <> 8674.5869 AND i.TNUMERIC <> 9135.7007 AND i.TNUMERIC != 2827.9165 AND i.TNUMERIC != 4731.5215))
   >        OR a.TDATE IN (SELECT j.TDATE FROM P1000 AS j WHERE j.TDATE IN (DATE '1990-01-01',DATE '2005-12-30'))
   >        OR (a.TTIMESTAMP IN (SELECT k.TTIMESTAMP FROM P1000 AS k WHERE k.TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12'))
   >        OR a.TBOOL IN (SELECT l.TBOOL FROM P1000 AS l WHERE l.TBOOL = TRUE))
   >        OR a.TCHAR IN (SELECT m.TCHAR FROM P1000 AS m WHERE m.TCHAR LIKE '%a%' OR m.TCHAR LIKE 'q%' OR m.TCHAR LIKE '%z')
   >        OR a.TVARCHAR IN (SELECT n.TVARCHAR FROM P1000 AS n WHERE n.TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_') LIMIT 10;
10 rows selected.
SQL> 
SQL> 
SQL> ---每列加函数
   > 
   > ----smallint类型字段作为过滤条件，查询数值型函数加smallint列
SQL> SELECT ABS(TSMALLINT),BOOLEAN(TSMALLINT<TREAL),CBRT(TSMALLINT),BROUND(TSMALLINT,2),CEIL(TSMALLINT),
   >        CHAR(TSMALLINT),CONV(TSMALLINT,10,2),DEGREES(TSMALLINT),FLOOR(TSMALLINT),
   >        FORMAT_NUMBER(TSMALLINT,3),GREATEST(TSMALLINT,TBIGINT,TINTEGER),HEX(TSMALLINT),HYPOT(TSMALLINT,TSMALLINT),
   >        ISNOTNULL(TSMALLINT),LEAST(TSMALLINT),LN(TSMALLINT),LOG10(TSMALLINT),LOG1P(TSMALLINT),LOG2(TSMALLINT),
   >        MOD(TINTEGER,TSMALLINT),NEGATIVE(TSMALLINT),NULLIF(TSMALLINT,TINTEGER),PMOD(TINTEGER,TSMALLINT) FROM P1000
   >        WHERE TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----smallint类型字段加数值型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500) LIMIT 10;
10 rows selected.
SQL>        
SQL> 
SQL>        
SQL> ----integer类型字段作为过滤条件，查询数值型函数加integer列
SQL> SELECT ABS(TINTEGER),BOOLEAN(TINTEGER<TREAL),CBRT(TINTEGER),BROUND(TINTEGER,2),CEIL(TINTEGER),
   >        CHAR(TINTEGER),CONV(TINTEGER,10,2),DEGREES(TINTEGER),FLOOR(TINTEGER),
   >        FORMAT_NUMBER(TINTEGER,3),GREATEST(TINTEGER,TBIGINT,TINTEGER),HEX(TINTEGER),HYPOT(TINTEGER,TINTEGER),
   >        ISNOTNULL(TINTEGER),LEAST(TINTEGER),LN(TINTEGER),LOG10(TINTEGER),LOG1P(TINTEGER),LOG2(TINTEGER),
   >        MOD(TINTEGER,TINTEGER),NEGATIVE(TINTEGER),NULLIF(TINTEGER,TINTEGER),PMOD(TINTEGER,TINTEGER) FROM P1000
   >        WHERE TINTEGER>10000000 AND TINTEGER<=12000000 OR TINTEGER BETWEEN 20000000 AND 30000000 OR TINTEGER BETWEEN 70000000 AND 85000000 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----integer类型字段加数值型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TINTEGER)>=2500 AND ABS(TINTEGER)<=4500) 
   >        OR (BOOLEAN(TINTEGER<TREAL)=true)
   >        AND (CBRT(TINTEGER)>=8)
   >        AND (BROUND(TINTEGER,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TINTEGER) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TINTEGER,10,2))>=8 OR LENGTH(CONV(TINTEGER,10,2))<=5)
   >        AND (DEGREES(TINTEGER) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TINTEGER)<=600 AND FLOOR(TINTEGER)>=1500)
   >        AND (CEIL(TINTEGER) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TINTEGER,3))<=5)
   >        AND (GREATEST(TINTEGER,TBIGINT,TINTEGER)>=TINTEGER)
   >        OR (HEX(TINTEGER)>2000 AND HEX(TINTEGER)<2500)
   >        AND (HYPOT(TINTEGER,TINTEGER) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TINTEGER) IS NOT NULL)
   >        AND (LEAST(TINTEGER)<=TINTEGER)
   >        OR (LN(TINTEGER) BETWEEN 5 AND 6)
   >        AND (LOG10(TINTEGER) BETWEEN 2 AND 3)
   >        AND (LOG1P(TINTEGER) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TINTEGER) >=13.2)
   >        AND (MOD(TINTEGER,TINTEGER)<50)
   >        AND (NEGATIVE(TINTEGER)<=-9000)
   >        OR (NULLIF(TINTEGER,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TINTEGER)<=200))
   >        AND (TINTEGER>10000000 AND TINTEGER<=12000000 OR TINTEGER BETWEEN 20000000 AND 30000000 OR TINTEGER BETWEEN 70000000 AND 85000000) LIMIT 10;
10 rows selected.
SQL>        
SQL>        
SQL> ----bigint类型字段作为过滤条件，查询数值型函数加bigint列
SQL> SELECT ABS(TBIGINT),BOOLEAN(TBIGINT<TREAL),CBRT(TBIGINT),BROUND(TBIGINT,2),CEIL(TBIGINT),
   >        CHAR(TBIGINT),CONV(TBIGINT,10,2),DEGREES(TBIGINT),FLOOR(TBIGINT),
   >        FORMAT_NUMBER(TBIGINT,3),GREATEST(TBIGINT,TBIGINT,TBIGINT),HEX(TBIGINT),HYPOT(TBIGINT,TBIGINT),
   >        ISNOTNULL(TBIGINT),LEAST(TBIGINT),LN(TBIGINT),LOG10(TBIGINT),LOG1P(TBIGINT),LOG2(TBIGINT),
   >        MOD(TBIGINT,TBIGINT),NEGATIVE(TBIGINT),NULLIF(TBIGINT,TBIGINT),PMOD(TBIGINT,TBIGINT) FROM P1000
   >        WHERE TBIGINT>100000000000 AND TBIGINT<=210000000000 OR TBIGINT BETWEEN 400000000000 AND 500000000000 OR TBIGINT BETWEEN 80000000 AND 95000000 LIMIT 10;
10 rows selected.
SQL>        
SQL> ----bigint类型字段加数值型函数作为过滤条件         
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TBIGINT)>=2500 AND ABS(TBIGINT)<=4500) 
   >        OR (BOOLEAN(TBIGINT<TREAL)=true)
   >        AND (CBRT(TBIGINT)>=8)
   >        AND (BROUND(TBIGINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TBIGINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TBIGINT,10,2))>=8 OR LENGTH(CONV(TBIGINT,10,2))<=5)
   >        AND (DEGREES(TBIGINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TBIGINT)<=600 AND FLOOR(TBIGINT)>=1500)
   >        AND (CEIL(TBIGINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TBIGINT,3))<=5)
   >        AND (GREATEST(TBIGINT,TBIGINT,TBIGINT)>=TBIGINT)
   >        OR (HEX(TBIGINT)>2000 AND HEX(TBIGINT)<2500)
   >        AND (HYPOT(TBIGINT,TBIGINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TBIGINT) IS NOT NULL)
   >        AND (LEAST(TBIGINT)<=TBIGINT)
   >        OR (LN(TBIGINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TBIGINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TBIGINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TBIGINT) >=13.2)
   >        AND (MOD(TBIGINT,TBIGINT)<50)
   >        AND (NEGATIVE(TBIGINT)<=-9000)
   >        OR (NULLIF(TBIGINT,TBIGINT)<=100)
   >        AND (PMOD(TBIGINT,TBIGINT)<=200))
   >        AND (TBIGINT>100000000000 AND TBIGINT<=210000000000 OR TBIGINT BETWEEN 400000000000 AND 500000000000 OR TBIGINT BETWEEN 80000000 AND 95000000) LIMIT 10;
10 rows selected.
SQL>        
SQL> ----real类型字段作为过滤条件，查询数值型函数加real列
SQL> SELECT ABS(TREAL),BOOLEAN(TREAL<TDOUBLE),CBRT(TREAL),BROUND(TREAL,2),CEIL(TREAL),
   >        CHAR(CAST(TREAL AS INT)),CONV(TREAL,10,2),DEGREES(TREAL),FLOOR(TREAL),
   >        FORMAT_NUMBER(TREAL,3),GREATEST(TREAL,TREAL,TREAL),HEX(TREAL),HYPOT(TREAL,TREAL),
   >        ISNOTNULL(TREAL),LEAST(TREAL),LN(TREAL),LOG10(TREAL),LOG1P(TREAL),LOG2(TREAL),
   >        MOD(TREAL,TREAL),NEGATIVE(TREAL),NULLIF(TREAL,TREAL),PMOD(TREAL,TREAL) FROM P1000
   >        WHERE TREAL>2344 AND TREAL<=3456 OR TREAL BETWEEN 6857 AND 7000 OR TREAL BETWEEN 8888 AND 9780 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----real类型字段加数值型函数作为过滤条件        
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TREAL)>=2500 AND ABS(TREAL)<=4500) 
   >        OR (BOOLEAN(TREAL<TREAL)=true)
   >        AND (CBRT(TREAL)>=8)
   >        AND (BROUND(TREAL,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(CAST(TREAL AS INT)) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TREAL,10,2))>=8 OR LENGTH(CONV(TREAL,10,2))<=5)
   >        AND (DEGREES(TREAL) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TREAL)<=600 AND FLOOR(TREAL)>=1500)
   >        AND (CEIL(TREAL) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TREAL,3))<=5)
   >        AND (GREATEST(TREAL,TREAL,TREAL)>=TREAL)
   >        OR (HEX(TREAL)>2000 AND HEX(TREAL)<2500)
   >        AND (HYPOT(TREAL,TREAL) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TREAL) IS NOT NULL)
   >        AND (LEAST(TREAL)<=TREAL)
   >        OR (LN(TREAL) BETWEEN 5 AND 6)
   >        AND (LOG10(TREAL) BETWEEN 2 AND 3)
   >        AND (LOG1P(TREAL) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TREAL) >=13.2)
   >        AND (MOD(TREAL,TREAL)<50)
   >        AND (NEGATIVE(TREAL)<=-9000)
   >        OR (NULLIF(TREAL,TREAL)<=100)
   >        AND (PMOD(TREAL,TREAL)<=200))
   >        AND (TREAL>2344 AND TREAL<=3456 OR TREAL BETWEEN 6857 AND 7000 OR TREAL BETWEEN 8888 AND 9780) LIMIT 10;
10 rows selected.
SQL>        
SQL> ----double类型字段作为过滤条件，查询数值型函数加double列
SQL> SELECT ABS(TDOUBLE),BOOLEAN(TDOUBLE<TDOUBLE),CBRT(TDOUBLE),BROUND(TDOUBLE,2),CEIL(TDOUBLE),
   >        CHAR(CAST(TDOUBLE AS INT)),CONV(TDOUBLE,10,2),DEGREES(TDOUBLE),FLOOR(TDOUBLE),
   >        FORMAT_NUMBER(TDOUBLE,3),GREATEST(TDOUBLE,TDOUBLE,TDOUBLE),HEX(TDOUBLE),HYPOT(TDOUBLE,TDOUBLE),
   >        ISNOTNULL(TDOUBLE),LEAST(TDOUBLE),LN(TDOUBLE),LOG10(TDOUBLE),LOG1P(TDOUBLE),LOG2(TDOUBLE),
   >        MOD(TDOUBLE,TDOUBLE),NEGATIVE(TDOUBLE),NULLIF(TDOUBLE,TDOUBLE),PMOD(TDOUBLE,TDOUBLE) FROM P1000
   >        WHERE TDOUBLE>2344 AND TDOUBLE<=3456 OR TDOUBLE BETWEEN 6857 AND 7000 OR TDOUBLE BETWEEN 8888 AND 9780 LIMIT 10;
10 rows selected.
SQL>        
SQL> ----double类型字段加数值型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TDOUBLE)>=2500 AND ABS(TDOUBLE)<=4500) 
   >        OR (BOOLEAN(TDOUBLE<TDOUBLE)=true)
   >        AND (CBRT(TDOUBLE)>=8)
   >        AND (BROUND(TDOUBLE,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(CAST(TDOUBLE AS INT)) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TDOUBLE,10,2))>=8 OR LENGTH(CONV(TDOUBLE,10,2))<=5)
   >        AND (DEGREES(TDOUBLE) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TDOUBLE)<=600 AND FLOOR(TDOUBLE)>=1500)
   >        AND (CEIL(TDOUBLE) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TDOUBLE,3))<=5)
   >        AND (GREATEST(TDOUBLE,TDOUBLE,TDOUBLE)>=TDOUBLE)
   >        OR (HEX(TDOUBLE)>2000 AND HEX(TDOUBLE)<2500)
   >        AND (HYPOT(TDOUBLE,TDOUBLE) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TDOUBLE) IS NOT NULL)
   >        AND (LEAST(TDOUBLE)<=TDOUBLE)
   >        OR (LN(TDOUBLE) BETWEEN 5 AND 6)
   >        AND (LOG10(TDOUBLE) BETWEEN 2 AND 3)
   >        AND (LOG1P(TDOUBLE) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TDOUBLE) >=13.2)
   >        AND (MOD(TDOUBLE,TDOUBLE)<50)
   >        AND (NEGATIVE(TDOUBLE)<=-9000)
   >        OR (NULLIF(TDOUBLE,TDOUBLE)<=100)
   >        AND (PMOD(TDOUBLE,TDOUBLE)<=200))
   >        AND (TDOUBLE>2344 AND TDOUBLE<=3456 OR TDOUBLE BETWEEN 6857 AND 7000 OR TDOUBLE BETWEEN 8888 AND 9780) LIMIT 10;
10 rows selected.
SQL>        
SQL> ----float类型字段作为过滤条件，查询数值型函数加float列
SQL> SELECT ABS(TFLOAT),BOOLEAN(TFLOAT<TFLOAT),CBRT(TFLOAT),BROUND(TFLOAT,2),CEIL(TFLOAT),
   >        CHAR(CAST(TFLOAT AS INT)),CONV(TFLOAT,10,2),DEGREES(TFLOAT),FLOOR(TFLOAT),
   >        FORMAT_NUMBER(TFLOAT,3),GREATEST(TFLOAT,TFLOAT,TFLOAT),HEX(TFLOAT),HYPOT(TFLOAT,TFLOAT),
   >        ISNOTNULL(TFLOAT),LEAST(TFLOAT),LN(TFLOAT),LOG10(TFLOAT),LOG1P(TFLOAT),LOG2(TFLOAT),
   >        MOD(TFLOAT,TFLOAT),NEGATIVE(TFLOAT),NULLIF(TFLOAT,TFLOAT),PMOD(TFLOAT,TFLOAT) FROM P1000
   >        WHERE TFLOAT>2344 AND TFLOAT<=3456 OR TFLOAT BETWEEN 6857 AND 7000 OR TFLOAT BETWEEN 8888 AND 9780 LIMIT 10;
10 rows selected.
SQL>        
SQL> ----float类型字段加数值型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TFLOAT)>=2500 AND ABS(TFLOAT)<=4500) 
   >        OR (BOOLEAN(TFLOAT<TFLOAT)=true)
   >        AND (CBRT(TFLOAT)>=8)
   >        AND (BROUND(TFLOAT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(CAST(TFLOAT AS INT)) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TFLOAT,10,2))>=8 OR LENGTH(CONV(TFLOAT,10,2))<=5)
   >        AND (DEGREES(TFLOAT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TFLOAT)<=600 AND FLOOR(TFLOAT)>=1500)
   >        AND (CEIL(TFLOAT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TFLOAT,3))<=5)
   >        AND (GREATEST(TFLOAT,TFLOAT,TFLOAT)>=TFLOAT)
   >        OR (HEX(TFLOAT)>2000 AND HEX(TFLOAT)<2500)
   >        AND (HYPOT(TFLOAT,TFLOAT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TFLOAT) IS NOT NULL)
   >        AND (LEAST(TFLOAT)<=TFLOAT)
   >        OR (LN(TFLOAT) BETWEEN 5 AND 6)
   >        AND (LOG10(TFLOAT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TFLOAT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TFLOAT) >=13.2)
   >        AND (MOD(TFLOAT,TFLOAT)<50)
   >        AND (NEGATIVE(TFLOAT)<=-9000)
   >        OR (NULLIF(TFLOAT,TFLOAT)<=100)
   >        AND (PMOD(TFLOAT,TFLOAT)<=200))
   >        AND (TFLOAT>2344 AND TFLOAT<=3456 OR TFLOAT BETWEEN 6857 AND 7000 OR TFLOAT BETWEEN 8888 AND 9780) LIMIT 10;
10 rows selected.
SQL>        
SQL> ----decimal类型字段作为过滤条件，查询数值型函数加decimal列
SQL> SELECT ABS(TDECIMAL),BOOLEAN(TDECIMAL<TDECIMAL),CBRT(TDECIMAL),BROUND(TDECIMAL,2),CEIL(TDECIMAL),
   >        CHAR(CAST(TDECIMAL AS INT)),CONV(TDECIMAL,10,2),DEGREES(TDECIMAL),FLOOR(TDECIMAL),
   >        FORMAT_NUMBER(TDECIMAL,3),GREATEST(TDECIMAL,TDECIMAL,TDECIMAL),HEX(TDECIMAL),HYPOT(TDECIMAL,TDECIMAL),
   >        ISNOTNULL(TDECIMAL),LEAST(TDECIMAL),LN(TDECIMAL),LOG10(TDECIMAL),LOG1P(TDECIMAL),LOG2(TDECIMAL),
   >        MOD(TDECIMAL,TDECIMAL),NEGATIVE(TDECIMAL),NULLIF(TDECIMAL,TDECIMAL),PMOD(TDECIMAL,TDECIMAL) FROM P1000
   >        WHERE TDECIMAL>2344 AND TDECIMAL<=3456 OR TDECIMAL BETWEEN 6857 AND 7000 OR TDECIMAL BETWEEN 8888 AND 9780 LIMIT 10;
10 rows selected.
SQL>        
SQL> ----decimal类型字段加数值型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TDECIMAL)>=2500 AND ABS(TDECIMAL)<=4500) 
   >        OR (BOOLEAN(TDECIMAL<TDECIMAL)=true)
   >        AND (CBRT(TDECIMAL)>=8)
   >        AND (BROUND(TDECIMAL,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(CAST(TDECIMAL AS INT)) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TDECIMAL,10,2))>=8 OR LENGTH(CONV(TDECIMAL,10,2))<=5)
   >        AND (DEGREES(TDECIMAL) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TDECIMAL)<=600 AND FLOOR(TDECIMAL)>=1500)
   >        AND (CEIL(TDECIMAL) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TDECIMAL,3))<=5)
   >        AND (GREATEST(TDECIMAL,TDECIMAL,TDECIMAL)>=TDECIMAL)
   >        OR (HEX(TDECIMAL)>2000 AND HEX(TDECIMAL)<2500)
   >        AND (HYPOT(TDECIMAL,TDECIMAL) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TDECIMAL) IS NOT NULL)
   >        AND (LEAST(TDECIMAL)<=TDECIMAL)
   >        OR (LN(TDECIMAL) BETWEEN 5 AND 6)
   >        AND (LOG10(TDECIMAL) BETWEEN 2 AND 3)
   >        AND (LOG1P(TDECIMAL) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TDECIMAL) >=13.2)
   >        AND (MOD(TDECIMAL,TDECIMAL)<50)
   >        AND (NEGATIVE(TDECIMAL)<=-9000)
   >        OR (NULLIF(TDECIMAL,TDECIMAL)<=100)
   >        AND (PMOD(TDECIMAL,TDECIMAL)<=200))
   >        AND (TDECIMAL>2344 AND TDECIMAL<=3456 OR TDECIMAL BETWEEN 6857 AND 7000 OR TDECIMAL BETWEEN 8888 AND 9780) LIMIT 10;
10 rows selected.
SQL>        
SQL> ----numeric类型字段作为过滤条件，查询数值型函数加numeric列
SQL> SELECT ABS(TNUMERIC),BOOLEAN(TNUMERIC<TNUMERIC),CBRT(TNUMERIC),BROUND(TNUMERIC,2),CEIL(TNUMERIC),
   >        CHAR(CAST(TNUMERIC AS INT)),CONV(TNUMERIC,10,2),DEGREES(TNUMERIC),FLOOR(TNUMERIC),
   >        FORMAT_NUMBER(TNUMERIC,3),GREATEST(TNUMERIC,TNUMERIC,TNUMERIC),HEX(TNUMERIC),HYPOT(TNUMERIC,TNUMERIC),
   >        ISNOTNULL(TNUMERIC),LEAST(TNUMERIC),LN(TNUMERIC),LOG10(TNUMERIC),LOG1P(TNUMERIC),LOG2(TNUMERIC),
   >        MOD(TNUMERIC,TNUMERIC),NEGATIVE(TNUMERIC),NULLIF(TNUMERIC,TNUMERIC),PMOD(TNUMERIC,TNUMERIC) FROM P1000
   >        WHERE TNUMERIC>2344 AND TNUMERIC<=3456 OR TNUMERIC BETWEEN 6857 AND 7000 OR TNUMERIC BETWEEN 8888 AND 9780 LIMIT 10;
10 rows selected.
SQL> 
SQL> ----numeric类型字段加数值型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE 
   >        ((ABS(TNUMERIC)>=2500 AND ABS(TNUMERIC)<=4500) 
   >        OR (BOOLEAN(TNUMERIC<TNUMERIC)=true)
   >        AND (CBRT(TNUMERIC)>=8)
   >        AND (BROUND(TNUMERIC,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(CAST(TNUMERIC AS INT)) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TNUMERIC,10,2))>=8 OR LENGTH(CONV(TNUMERIC,10,2))<=5)
   >        AND (DEGREES(TNUMERIC) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TNUMERIC)<=600 AND FLOOR(TNUMERIC)>=1500)
   >        AND (CEIL(TNUMERIC) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TNUMERIC,3))<=5)
   >        AND (GREATEST(TNUMERIC,TNUMERIC,TNUMERIC)>=TNUMERIC)
   >        OR (HEX(TNUMERIC)>2000 AND HEX(TNUMERIC)<2500)
   >        AND (HYPOT(TNUMERIC,TNUMERIC) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TNUMERIC) IS NOT NULL)
   >        AND (LEAST(TNUMERIC)<=TNUMERIC)
   >        OR (LN(TNUMERIC) BETWEEN 5 AND 6)
   >        AND (LOG10(TNUMERIC) BETWEEN 2 AND 3)
   >        AND (LOG1P(TNUMERIC) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TNUMERIC) >=13.2)
   >        AND (MOD(TNUMERIC,TNUMERIC)<50)
   >        AND (NEGATIVE(TNUMERIC)<=-9000)
   >        OR (NULLIF(TNUMERIC,TNUMERIC)<=100)
   >        AND (PMOD(TNUMERIC,TNUMERIC)<=200))
   >        AND (TNUMERIC>2344 AND TNUMERIC<=3456 OR TNUMERIC BETWEEN 6857 AND 7000 OR TNUMERIC BETWEEN 8888 AND 9780) LIMIT 10;
10 rows selected.
SQL>        
SQL> ----date类型字段作为过滤条件，查询数值型函数加date列
SQL> SELECT TDATE,ADD_MONTHS(TDATE,4),DATE_ADD(TDATE,20),DATE_FORMAT(TDATE,'YYYY'),DATE_SUB(TDATE,13),
   >        DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6)),DAY(TDATE),DAYOFMONTH(TDATE),DAYOFYEAR(TDATE),
   >        LAST_DAY(TDATE),MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)),NEXT_DAY(TDATE,'TU'),TO_DATE(TDATE,'yyyy-mm-dd'),
   >        TRUNC(TDATE,'YEAR'),UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd'),WEEKOFYEAR(TDATE),YEAR(TDATE) FROM P1000
   >        WHERE (TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30') LIMIT 10;
10 rows selected.
SQL>        
SQL> ----date类型字段加时间类型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE
   >        (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30')) LIMIT 10;
10 rows selected.
SQL>        
SQL> ----timestamp类型字段作为过滤条件，查询数值型函数加timestamp列
SQL> SELECT DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),DATE_TRUNC(TTIMESTAMP,'YEAR'),
   >        DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),
   >        MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP) FROM P1000
   >        WHERE (TTIMESTAMP BETWEEN '1990-01-01 00:00:00' AND '2003-12-30 12:12:12') LIMIT 10;
10 rows selected.
SQL> 
SQL> ----timestamp类型字段加时间型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE
   >        (DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss') >= '1990-01-01 00:00:00')
   >        AND (DATE_TRUNC(TTIMESTAMP,'YEAR') BETWEEN '1980-01-01 00:00:00' AND '2020-01-01 00:00:00')
   >        AND (DAY(TTIMESTAMP) >= 10 AND DAY(TTIMESTAMP) <=20)
   >        AND (FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul') NOT BETWEEN '1999-01-01 00:00:00' AND '2015-12-30 00:00:00')
   >        AND (MINUTE(TTIMESTAMP) BETWEEN 10 AND 40)
   >        AND (MONTH(TTIMESTAMP) BETWEEN 1 AND 9)
   >        AND (SECOND(TTIMESTAMP) >= 10)
   >        AND (TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss') BETWEEN '2002-01-01 00:00:00' AND '2040-12-30 12:12:12')
   >        AND (YEAR(TTIMESTAMP) >=1999)
   >        OR (TTIMESTAMP BETWEEN '1990-01-01 00:00:00' AND '2003-12-30 12:12:12') LIMIT 10;
10 rows selected.
SQL> 
SQL> ----boolean,未找到相关函数
   > 
   > ----char类型字段作为过滤条件，查询数值型函数加char列
SQL> SELECT CHARACTER_LENGTH(TCHAR),TRIM(TCHAR),TRIM(BOTH 'D' FROM TCHAR),TRIM(TRAILING 'g' FROM TCHAR),
   >        SUBSTRING(TCHAR FROM 13 FOR 40),LPAD(TCHAR,55,TVARCHAR),MD5(TCHAR),PRINTF(TCHAR+'%d %s',3232,TVARCHAR),
   >        REPLACE(TCHAR,'i','LDB'),REVERSE(TCHAR),TRIM(RIGHT(TCHAR,4)) FROM P1000
   >        WHERE TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_' LIMIT 10;
10 rows selected.
SQL> 
SQL> ----char类型字段加字段型函数作为过滤条件
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE
   >        (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_') LIMIT 10;
10 rows selected.
SQL>        
SQL> ----varchar类型字段作为过滤条件，查询数值型函数加varchar列
SQL> SELECT CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),
   >        SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),
   >        REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)) FROM P1000
   >        WHERE TVARCHAR LIKE '_P%' OR TVARCHAR LIKE '%V%' AND TVARCHAR LIKE '_A_' LIMIT 10;
10 rows selected.
SQL> 
SQL> ----varchar类型字段加字符型函数作为过滤条件       
SQL> SELECT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR FROM P1000 WHERE
   >        (CHARACTER_LENGTH(TVARCHAR) = 50)
   >        AND (TRIM(TVARCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TVARCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TVARCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TVARCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TVARCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TVARCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TVARCHAR)) >=30)
   >        AND (PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TVARCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TVARCHAR))=LENGTH(TVARCHAR))
   >        AND (TRIM(RIGHT(TVARCHAR,4)) LIKE '%A')
   >        AND (TVARCHAR LIKE '_P%' OR TVARCHAR LIKE '%V%' AND TVARCHAR LIKE '_A_') LIMIT 10;    
10 rows selected.
SQL>        
SQL> ----数值型函数，字符型函数，时间型函数作为过滤条件
SQL> SELECT DISTINCT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),
   >        MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP) FROM P1000 WHERE 
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500)
   > 	   AND  (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30'))
   > 	   AND (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_') LIMIT 10;
10 rows selected.
SQL>        
SQL>        
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段,数值型函数，字符型函数，时间型函数作为过滤条件
SQL> SELECT DISTINCT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),
   >        MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP) FROM P1000 WHERE 
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500)
   > 	   AND  (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30'))
   > 	   AND (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_')
   >        AND (TSMALLINT IN (8638,9837,1224,8317,9225,7464,4661,818,9317,5932,5047,2741)) 
   >        AND (TINTEGER >= 503040 OR TINTEGER <= 1223) 
   > 	   AND (TBIGINT BETWEEN 234567802455 AND 908667115321)
   >        AND (TREAL NOT IN (155656.656,274367.736)) 
   > 	   OR (TDOUBLE <=9852.9 AND TDOUBLE >=5236.45) 
   > 	   AND (TFLOAT IS NOT NULL  AND (TFLOAT BETWEEN 1092 AND 3284))
   > 	   AND ((TDECIMAL IS NULL OR TDECIMAL >=8378.5) 
   > 	   AND (TNUMERIC <> 7418.1886 AND TNUMERIC <> 8674.5869 AND TNUMERIC <> 9135.7007 AND TNUMERIC != 2827.9165 AND TNUMERIC != 4731.5215)) 
   > 	   AND TDATE IN (DATE '1990-01-01',DATE '2005-12-30') 
   > 	   OR ((TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12')) 
   > 	   AND (TBOOL = TRUE))
   > 	   AND (TCHAR LIKE '%a%' OR TCHAR LIKE 'q%' OR TCHAR LIKE '%z') 
   > 	   AND (TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_') LIMIT 10;
10 rows selected.
SQL> 	   
SQL> 	   
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段,数值型函数，字符型函数，时间型函数作为过滤条件的子查询
   > --报错，Worker execution: ldb worker caused error: Null-aware predicate sub-queries cannot be used in nested conditions
SQL> SELECT DISTINCT TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),
   >        MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP) FROM P1000 AS a WHERE 
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500)
   > 	   AND  (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30'))
   > 	   AND (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_')
   >        AND a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5)
   >        AND a.TNUMERIC IN (SELECT i.TNUMERIC FROM P1000 AS i WHERE i.TNUMERIC <> 8674.5869 AND i.TNUMERIC <> 9135.7007 AND i.TNUMERIC != 2827.9165 AND i.TNUMERIC != 4731.5215))
   >        AND a.TDATE IN (SELECT j.TDATE FROM P1000 AS j WHERE j.TDATE IN (DATE '1990-01-01',DATE '2005-12-30'))
   >        OR (a.TTIMESTAMP IN (SELECT k.TTIMESTAMP FROM P1000 AS k WHERE k.TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12'))
   >        AND a.TBOOL IN (SELECT l.TBOOL FROM P1000 AS l WHERE l.TBOOL = TRUE))
   >        AND a.TCHAR IN (SELECT m.TCHAR FROM P1000 AS m WHERE m.TCHAR LIKE '%a%' OR m.TCHAR LIKE 'q%' OR m.TCHAR LIKE '%z')
   >        AND a.TVARCHAR IN (SELECT n.TVARCHAR FROM P1000 AS n WHERE n.TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_') LIMIT 10;
java.sql.SQLException: Worker execution: ldb worker caused error: Null-aware predicate sub-queries cannot be used in nested conditions: (((((((((((((((((cast(abs(TSMALLINT#696247) as int) >= 2500) && (cast(abs(TSMALLINT#696247) as int) <= 4500)) || ((((((((((cast((cast(TSMALLINT#696247 as double) < TREAL#696250) as boolean) = true) && (CBRT(cast(TSMALLINT#696247 as double)) >= cast(8 as double))) && ((cast(bround(TSMALLINT#696247, 2) as int) >= 600) && (cast(bround(TSMALLINT#696247, 2) as int) <= 2000))) && cast(named_struct(col_0, chr(cast(TSMALLINT#696247 as bigint))) as struct<col_0:string>) IN (cast(named_struct(col_0, x) as struct<col_0:string>),cast(named_struct(col_0, v) as struct<col_0:string>),cast(named_struct(col_0, n) as struct<col_0:string>),cast(named_struct(col_0, D) as struct<col_0:string>),cast(named_struct(col_0, K) as struct<col_0:string>),cast(named_struct(col_0, k) as struct<col_0:string>),cast(named_struct(col_0, c) as struct<col_0:string>),cast(named_struct(col_0, A) as struct<col_0:string>),cast(named_struct(col_0, a) as struct<col_0:string>),cast(named_struct(col_0, b) as struct<col_0:string>),cast(named_struct(col_0, B) as struct<col_0:string>),cast(named_struct(col_0, C) as struct<col_0:string>),cast(named_struct(col_0, d) as struct<col_0:string>),cast(named_struct(col_0, e) as struct<col_0:string>))) && ((length(conv(cast(TSMALLINT#696247 as string), 10, 2)) >= 8) || (length(conv(cast(TSMALLINT#696247 as string), 10, 2)) <= 5))) && ((DEGREES(cast(TSMALLINT#696247 as double)) >= cast(42000 as double)) && (DEGREES(cast(TSMALLINT#696247 as double)) <= cast(400000 as double)))) && ((FLOOR(cast(TSMALLINT#696247 as double)) <= cast(600 as bigint)) && (FLOOR(cast(TSMALLINT#696247 as double)) >= cast(1500 as bigint)))) && cast(named_struct(col_0, CEIL(cast(TSMALLINT#696247 as double))) as struct<col_0:bigint>) IN (cast(named_struct(col_0, 5239) as struct<col_0:bigint>),cast(named_struct(col_0, 5242) as struct<col_0:bigint>),cast(named_struct(col_0, 8212) as struct<col_0:bigint>),cast(named_struct(col_0, 8114) as struct<col_0:bigint>),cast(named_struct(col_0, 5026) as struct<col_0:bigint>),cast(named_struct(col_0, 8102) as struct<col_0:bigint>),cast(named_struct(col_0, 8317) as struct<col_0:bigint>),cast(named_struct(col_0, 2404) as struct<col_0:bigint>))) && (length(format_number(TSMALLINT#696247, 3)) <= 5)) && (CASE WHEN (CASE WHEN (cast(TSMALLINT#696247 as bigint) > TBIGINT#696249L) THEN cast(TSMALLINT#696247 as bigint) ELSE TBIGINT#696249L END > cast(TINTEGER#696248 as bigint)) THEN CASE WHEN (cast(TSMALLINT#696247 as bigint) > TBIGINT#696249L) THEN cast(TSMALLINT#696247 as bigint) ELSE TBIGINT#696249L END ELSE cast(TINTEGER#696248 as bigint) END >= cast(TSMALLINT#696247 as bigint)))) || (((((cast(hex(cast(TSMALLINT#696247 as bigint)) as int) > 2000) && (cast(hex(cast(TSMALLINT#696247 as bigint)) as int) < 2500)) && ((HYPOT(cast(TSMALLINT#696247 as double), cast(TSMALLINT#696247 as double)) >= cast(12000 as double)) && (HYPOT(cast(TSMALLINT#696247 as double), cast(TSMALLINT#696247 as double)) <= cast(13000 as double)))) && isnotnull(isnotnull(TSMALLINT#696247))) && (TSMALLINT#696247 <= TSMALLINT#696247))) || ((((LOG(cast(TSMALLINT#696247 as double)) >= cast(5 as double)) && (LOG(cast(TSMALLINT#696247 as double)) <= cast(6 as double))) && ((LOG10(cast(TSMALLINT#696247 as double)) >= cast(2 as double)) && (LOG10(cast(TSMALLINT#696247 as double)) <= cast(3 as double)))) && NOT ((LOG1P(cast(TSMALLINT#696247 as double)) >= cast(6 as double)) && (LOG1P(cast(TSMALLINT#696247 as double)) <= cast(8 as double))))) || (((LOG2(cast(TSMALLINT#696247 as double)) >= cast(13.2 as double)) && ((TINTEGER#696248 % cast(TSMALLINT#696247 as int)) < 50)) && (cast(-TSMALLINT#696247 as int) <= -9000))) || ((cast(CASE WHEN (cast(TSMALLINT#696247 as int) = TINTEGER#696248) THEN null ELSE TSMALLINT#696247 END as int) <= 100) && (pmod(TINTEGER#696248, cast(TSMALLINT#696247 as int)) <= 200))) && ((((cast(TSMALLINT#696247 as int) > 400) && (cast(TSMALLINT#696247 as int) <= 3000)) || ((cast(TSMALLINT#696247 as int) >= 5000) && (cast(TSMALLINT#696247 as int) <= 5500))) || ((cast(TSMALLINT#696247 as int) >= 8000) && (cast(TSMALLINT#696247 as int) <= 8500)))) && ((cast(add_months(TDATE#696255, 4) as timestamp) >= 915120000000000) && (cast(add_months(TDATE#696255, 4) as timestamp) <= 1609257600000000))) && ((date_add(TDATE#696255, 20) >= 7305) && (date_add(TDATE#696255, 20) <= 10955))) || ((((((cast(named_struct(col_0, date_format(cast(TDATE#696255 as timestamp), yyyy, Some(Asia/Shanghai))) as struct<col_0:string>) IN (cast(named_struct(col_0, 2000) as struct<col_0:string>),cast(named_struct(col_0, 2003) as struct<col_0:string>),cast(named_struct(col_0, 2047) as struct<col_0:string>),cast(named_struct(col_0, 2032) as struct<col_0:string>),cast(named_struct(col_0, 2033) as struct<col_0:string>),cast(named_struct(col_0, 2048) as struct<col_0:string>)) && NOT ((date_sub(TDATE#696255, 13) >= 9494) && (date_sub(TDATE#696255, 13) <= 25567))) && (datediff(date_add(TDATE#696255, 12), date_sub(TDATE#696255, 6)) >= 18)) && ((dayofmonth(TDATE#696255) >= 10) && (dayofmonth(TDATE#696255) <= 25))) && ((dayofmonth(TDATE#696255) >= 10) && (dayofmonth(TDATE#696255) <= 15))) && NOT ((dayofyear(TDATE#696255) >= 50) && (dayofyear(TDATE#696255) <= 300))) && ((cast(next_day(TDATE#696255, TU) as timestamp) >= 1577808000000000) && (cast(next_day(TDATE#696255, TU) as timestamp) <= 2240409600000000)))) || (((cast(named_struct(col_0, last_day(TDATE#696255)) as struct<col_0:date>) IN (cast(named_struct(col_0, 13452) as struct<col_0:date>),cast(named_struct(col_0, 6939) as struct<col_0:date>),cast(named_struct(col_0, 11261) as struct<col_0:date>),cast(named_struct(col_0, 12295) as struct<col_0:date>),cast(named_struct(col_0, 19477) as struct<col_0:date>),cast(named_struct(col_0, 4249) as struct<col_0:date>)) && (months_between(cast(TDATE#696255 as timestamp), cast(add_months(TDATE#696255, 18) as timestamp), true, Some(Asia/Shanghai)) = cast(-18 as double))) && ((cast(cast(unix_timestamp(TDATE#696255, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) >= 10592) && (cast(cast(unix_timestamp(TDATE#696255, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) <= 13147))) && (trunc(TDATE#696255, YEAR) >= 12053))) || (((((((to_unix_timestamp(TDATE#696255, yyyy-MM-dd HH:mm:ss, Some(Asia/Shanghai)) >= cast(1911111111 as bigint)) && ((weekofyear(TDATE#696255) >= 20) && (weekofyear(TDATE#696255) <= 30))) && NOT cast(named_struct(col_0, year(TDATE#696255)) as struct<col_0:int>) IN (cast(named_struct(col_0, 2047) as struct<col_0:int>),cast(named_struct(col_0, 2033) as struct<col_0:int>),cast(named_struct(col_0, 2008) as struct<col_0:int>),cast(named_struct(col_0, 2010) as struct<col_0:int>),cast(named_struct(col_0, 2023) as struct<col_0:int>))) && (((TDATE#696255 >= 10592) && (TDATE#696255 <= 13147)) || (TDATE#696255 >= 22278))) && (length(TCHAR#696258) = 50)) && trim(TCHAR#696258, Some( )) LIKE %J) && trim(TCHAR#696258, Some(D)) LIKE %M%)) || (((((NOT rtrim(TCHAR#696258, Some(g)) LIKE N% && NOT rtrim(TCHAR#696258, Some(g)) LIKE %A%) && substring(TCHAR#696258, 13, 40) LIKE _z%) && lpad(TCHAR#696258, 55, TVARCHAR#696259) LIKE %O) && (length(md5(cast(TCHAR#696258 as binary))) >= 30)) && format_string(concat(TCHAR#696258, %d %s), 3232, TVARCHAR#696259) LIKE %323%)) || ((((((replace(TCHAR#696258, i, LDB) LIKE %LDB% && (length(reverse(TCHAR#696258)) = length(TCHAR#696258))) && trim(right(TCHAR#696258, 4), Some( )) LIKE %A) && (((TCHAR#696258 >= ) && TCHAR#696258 LIKE _P%) || (((TCHAR#696258 >= ) && TCHAR#696258 LIKE %V%) && ((TCHAR#696258 >= ) && TCHAR#696258 LIKE _A_)))) && TINTEGER#696248 IN (list#696519 [])) && TBIGINT#696249L IN (list#696520 [])) && TREAL#696250 IN (list#696521 []))) || (((TDOUBLE#696251 IN (list#696522 []) && TFLOAT#696252 IN (list#696523 [])) && (TDECIMAL#696253 IN (list#696524 []) && TNUMERIC#696254 IN (list#696525 []))) && TDATE#696255 IN (list#696526 []))) || (((TTIMESTAMP#696256 IN (list#696527 []) && TBOOL#696257 IN (list#696528 [])) && TCHAR#696258 IN (list#696529 [])) && TVARCHAR#696259 IN (list#696530 [])));;
GlobalLimit (0 + 10)
+- LocalLimit (0 + 10)
   +- Distinct
      +- Project [TSMALLINT#696247, TINTEGER#696248, TBIGINT#696249L, TREAL#696250, TDOUBLE#696251, TFLOAT#696252, TDECIMAL#696253, TNUMERIC#696254, TDATE#696255, TTIMESTAMP#696256, TBOOL#696257, TCHAR#696258, TVARCHAR#696259, length(TVARCHAR#696259) AS C14#700059, trim(TVARCHAR#696259, Some( )) AS C15#700312, trim(TVARCHAR#696259, Some(D)) AS C16#700565, rtrim(TVARCHAR#696259, Some(g)) AS C17#700818, substring(TVARCHAR#696259, 13, 40) AS C18#701071, lpad(TVARCHAR#696259, 55, TVARCHAR#696259) AS C19#701324, md5(cast(TVARCHAR#696259 as binary)) AS C20#701577, format_string(concat(TVARCHAR#696259, %d %s), 3232, TVARCHAR#696259) AS C21#701830, replace(TVARCHAR#696259, i, LDB) AS C22#702083, reverse(TVARCHAR#696259) AS C23#702336, trim(right(TVARCHAR#696259, 4), Some( )) AS C24#702589, ... 9 more fields]
         +- Filter (((((((((((((((((cast(abs(TSMALLINT#696247) as int) >= 2500) && (cast(abs(TSMALLINT#696247) as int) <= 4500)) || ((((((((((cast((cast(TSMALLINT#696247 as double) < TREAL#696250) as boolean) = true) && (CBRT(cast(TSMALLINT#696247 as double)) >= cast(8 as double))) && ((cast(bround(TSMALLINT#696247, 2) as int) >= 600) && (cast(bround(TSMALLINT#696247, 2) as int) <= 2000))) && cast(named_struct(col_0, chr(cast(TSMALLINT#696247 as bigint))) as struct<col_0:string>) IN (cast(named_struct(col_0, x) as struct<col_0:string>),cast(named_struct(col_0, v) as struct<col_0:string>),cast(named_struct(col_0, n) as struct<col_0:string>),cast(named_struct(col_0, D) as struct<col_0:string>),cast(named_struct(col_0, K) as struct<col_0:string>),cast(named_struct(col_0, k) as struct<col_0:string>),cast(named_struct(col_0, c) as struct<col_0:string>),cast(named_struct(col_0, A) as struct<col_0:string>),cast(named_struct(col_0, a) as struct<col_0:string>),cast(named_struct(col_0, b) as struct<col_0:string>),cast(named_struct(col_0, B) as struct<col_0:string>),cast(named_struct(col_0, C) as struct<col_0:string>),cast(named_struct(col_0, d) as struct<col_0:string>),cast(named_struct(col_0, e) as struct<col_0:string>))) && ((length(conv(cast(TSMALLINT#696247 as string), 10, 2)) >= 8) || (length(conv(cast(TSMALLINT#696247 as string), 10, 2)) <= 5))) && ((DEGREES(cast(TSMALLINT#696247 as double)) >= cast(42000 as double)) && (DEGREES(cast(TSMALLINT#696247 as double)) <= cast(400000 as double)))) && ((FLOOR(cast(TSMALLINT#696247 as double)) <= cast(600 as bigint)) && (FLOOR(cast(TSMALLINT#696247 as double)) >= cast(1500 as bigint)))) && cast(named_struct(col_0, CEIL(cast(TSMALLINT#696247 as double))) as struct<col_0:bigint>) IN (cast(named_struct(col_0, 5239) as struct<col_0:bigint>),cast(named_struct(col_0, 5242) as struct<col_0:bigint>),cast(named_struct(col_0, 8212) as struct<col_0:bigint>),cast(named_struct(col_0, 8114) as struct<col_0:bigint>),cast(named_struct(col_0, 5026) as struct<col_0:bigint>),cast(named_struct(col_0, 8102) as struct<col_0:bigint>),cast(named_struct(col_0, 8317) as struct<col_0:bigint>),cast(named_struct(col_0, 2404) as struct<col_0:bigint>))) && (length(format_number(TSMALLINT#696247, 3)) <= 5)) && (CASE WHEN (CASE WHEN (cast(TSMALLINT#696247 as bigint) > TBIGINT#696249L) THEN cast(TSMALLINT#696247 as bigint) ELSE TBIGINT#696249L END > cast(TINTEGER#696248 as bigint)) THEN CASE WHEN (cast(TSMALLINT#696247 as bigint) > TBIGINT#696249L) THEN cast(TSMALLINT#696247 as bigint) ELSE TBIGINT#696249L END ELSE cast(TINTEGER#696248 as bigint) END >= cast(TSMALLINT#696247 as bigint)))) || (((((cast(hex(cast(TSMALLINT#696247 as bigint)) as int) > 2000) && (cast(hex(cast(TSMALLINT#696247 as bigint)) as int) < 2500)) && ((HYPOT(cast(TSMALLINT#696247 as double), cast(TSMALLINT#696247 as double)) >= cast(12000 as double)) && (HYPOT(cast(TSMALLINT#696247 as double), cast(TSMALLINT#696247 as double)) <= cast(13000 as double)))) && isnotnull(isnotnull(TSMALLINT#696247))) && (TSMALLINT#696247 <= TSMALLINT#696247))) || ((((LOG(cast(TSMALLINT#696247 as double)) >= cast(5 as double)) && (LOG(cast(TSMALLINT#696247 as double)) <= cast(6 as double))) && ((LOG10(cast(TSMALLINT#696247 as double)) >= cast(2 as double)) && (LOG10(cast(TSMALLINT#696247 as double)) <= cast(3 as double)))) && NOT ((LOG1P(cast(TSMALLINT#696247 as double)) >= cast(6 as double)) && (LOG1P(cast(TSMALLINT#696247 as double)) <= cast(8 as double))))) || (((LOG2(cast(TSMALLINT#696247 as double)) >= cast(13.2 as double)) && ((TINTEGER#696248 % cast(TSMALLINT#696247 as int)) < 50)) && (cast(-TSMALLINT#696247 as int) <= -9000))) || ((cast(CASE WHEN (cast(TSMALLINT#696247 as int) = TINTEGER#696248) THEN null ELSE TSMALLINT#696247 END as int) <= 100) && (pmod(TINTEGER#696248, cast(TSMALLINT#696247 as int)) <= 200))) && ((((cast(TSMALLINT#696247 as int) > 400) && (cast(TSMALLINT#696247 as int) <= 3000)) || ((cast(TSMALLINT#696247 as int) >= 5000) && (cast(TSMALLINT#696247 as int) <= 5500))) || ((cast(TSMALLINT#696247 as int) >= 8000) && (cast(TSMALLINT#696247 as int) <= 8500)))) && ((cast(add_months(TDATE#696255, 4) as timestamp) >= 915120000000000) && (cast(add_months(TDATE#696255, 4) as timestamp) <= 1609257600000000))) && ((date_add(TDATE#696255, 20) >= 7305) && (date_add(TDATE#696255, 20) <= 10955))) || ((((((cast(named_struct(col_0, date_format(cast(TDATE#696255 as timestamp), yyyy, Some(Asia/Shanghai))) as struct<col_0:string>) IN (cast(named_struct(col_0, 2000) as struct<col_0:string>),cast(named_struct(col_0, 2003) as struct<col_0:string>),cast(named_struct(col_0, 2047) as struct<col_0:string>),cast(named_struct(col_0, 2032) as struct<col_0:string>),cast(named_struct(col_0, 2033) as struct<col_0:string>),cast(named_struct(col_0, 2048) as struct<col_0:string>)) && NOT ((date_sub(TDATE#696255, 13) >= 9494) && (date_sub(TDATE#696255, 13) <= 25567))) && (datediff(date_add(TDATE#696255, 12), date_sub(TDATE#696255, 6)) >= 18)) && ((dayofmonth(TDATE#696255) >= 10) && (dayofmonth(TDATE#696255) <= 25))) && ((dayofmonth(TDATE#696255) >= 10) && (dayofmonth(TDATE#696255) <= 15))) && NOT ((dayofyear(TDATE#696255) >= 50) && (dayofyear(TDATE#696255) <= 300))) && ((cast(next_day(TDATE#696255, TU) as timestamp) >= 1577808000000000) && (cast(next_day(TDATE#696255, TU) as timestamp) <= 2240409600000000)))) || (((cast(named_struct(col_0, last_day(TDATE#696255)) as struct<col_0:date>) IN (cast(named_struct(col_0, 13452) as struct<col_0:date>),cast(named_struct(col_0, 6939) as struct<col_0:date>),cast(named_struct(col_0, 11261) as struct<col_0:date>),cast(named_struct(col_0, 12295) as struct<col_0:date>),cast(named_struct(col_0, 19477) as struct<col_0:date>),cast(named_struct(col_0, 4249) as struct<col_0:date>)) && (months_between(cast(TDATE#696255 as timestamp), cast(add_months(TDATE#696255, 18) as timestamp), true, Some(Asia/Shanghai)) = cast(-18 as double))) && ((cast(cast(unix_timestamp(TDATE#696255, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) >= 10592) && (cast(cast(unix_timestamp(TDATE#696255, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) <= 13147))) && (trunc(TDATE#696255, YEAR) >= 12053))) || (((((((to_unix_timestamp(TDATE#696255, yyyy-MM-dd HH:mm:ss, Some(Asia/Shanghai)) >= cast(1911111111 as bigint)) && ((weekofyear(TDATE#696255) >= 20) && (weekofyear(TDATE#696255) <= 30))) && NOT cast(named_struct(col_0, year(TDATE#696255)) as struct<col_0:int>) IN (cast(named_struct(col_0, 2047) as struct<col_0:int>),cast(named_struct(col_0, 2033) as struct<col_0:int>),cast(named_struct(col_0, 2008) as struct<col_0:int>),cast(named_struct(col_0, 2010) as struct<col_0:int>),cast(named_struct(col_0, 2023) as struct<col_0:int>))) && (((TDATE#696255 >= 10592) && (TDATE#696255 <= 13147)) || (TDATE#696255 >= 22278))) && (length(TCHAR#696258) = 50)) && trim(TCHAR#696258, Some( )) LIKE %J) && trim(TCHAR#696258, Some(D)) LIKE %M%)) || (((((NOT rtrim(TCHAR#696258, Some(g)) LIKE N% && NOT rtrim(TCHAR#696258, Some(g)) LIKE %A%) && substring(TCHAR#696258, 13, 40) LIKE _z%) && lpad(TCHAR#696258, 55, TVARCHAR#696259) LIKE %O) && (length(md5(cast(TCHAR#696258 as binary))) >= 30)) && format_string(concat(TCHAR#696258, %d %s), 3232, TVARCHAR#696259) LIKE %323%)) || ((((((replace(TCHAR#696258, i, LDB) LIKE %LDB% && (length(reverse(TCHAR#696258)) = length(TCHAR#696258))) && trim(right(TCHAR#696258, 4), Some( )) LIKE %A) && (((TCHAR#696258 >= ) && TCHAR#696258 LIKE _P%) || (((TCHAR#696258 >= ) && TCHAR#696258 LIKE %V%) && ((TCHAR#696258 >= ) && TCHAR#696258 LIKE _A_)))) && TINTEGER#696248 IN (list#696519 [])) && TBIGINT#696249L IN (list#696520 [])) && TREAL#696250 IN (list#696521 []))) || (((TDOUBLE#696251 IN (list#696522 []) && TFLOAT#696252 IN (list#696523 [])) && (TDECIMAL#696253 IN (list#696524 []) && TNUMERIC#696254 IN (list#696525 []))) && TDATE#696255 IN (list#696526 []))) || (((TTIMESTAMP#696256 IN (list#696527 []) && TBOOL#696257 IN (list#696528 [])) && TCHAR#696258 IN (list#696529 [])) && TVARCHAR#696259 IN (list#696530 [])))
            :  :- Project [TINTEGER#696269]
            :  :  +- Filter ((TINTEGER#696269 >= 503040) || (TINTEGER#696269 <= 1223))
            :  :     +- Project [TUNIQUE#721386L AS TUNIQUE#696267L, TSMALLINT#721387 AS TSMALLINT#696268, TINTEGER#721388 AS TINTEGER#696269, TBIGINT#721389L AS TBIGINT#696270L, TREAL#721390 AS TREAL#696271, TDOUBLE#721391 AS TDOUBLE#696272, TFLOAT#721392 AS TFLOAT#696273, TDECIMAL#721393 AS TDECIMAL#696274, TNUMERIC#721394 AS TNUMERIC#696275, TDATE#721395 AS TDATE#696276, TTIMESTAMP#721396 AS TTIMESTAMP#696277, TBOOL#721397 AS TBOOL#696278, TCHAR#721398 AS TCHAR#696279, TVARCHAR#721399 AS TVARCHAR#696280, TCHARIDX1#721400 AS TCHARIDX1#696281, TCHARIDX2#721401 AS TCHARIDX2#696282, TCHARIDX3#721402 AS TCHARIDX3#696283, TVARCHARIDX1#721403 AS TVARCHARIDX1#696284, TVARCHARIDX2#721404 AS TVARCHARIDX2#696285, TVARCHARIDX3#721405 AS TVARCHARIDX3#696286, _LDBID_#721406 AS _LDBID_#696287]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721386L, TSMALLINT#721387, TINTEGER#721388, TBIGINT#721389L, TREAL#721390, TDOUBLE#721391, TFLOAT#721392, TDECIMAL#721393, TNUMERIC#721394, TDATE#721395, TTIMESTAMP#721396, TBOOL#721397, TCHAR#721398, TVARCHAR#721399, TCHARIDX1#721400, TCHARIDX2#721401, TCHARIDX3#721402, TVARCHARIDX1#721403, TVARCHARIDX2#721404, TVARCHARIDX3#721405, _LDBID_#721406] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TBIGINT#696291L]
            :  :  +- Filter ((TBIGINT#696291L >= 234567802455) && (TBIGINT#696291L <= 908667115321))
            :  :     +- Project [TUNIQUE#721428L AS TUNIQUE#696288L, TSMALLINT#721429 AS TSMALLINT#696289, TINTEGER#721430 AS TINTEGER#696290, TBIGINT#721431L AS TBIGINT#696291L, TREAL#721432 AS TREAL#696292, TDOUBLE#721433 AS TDOUBLE#696293, TFLOAT#721434 AS TFLOAT#696294, TDECIMAL#721435 AS TDECIMAL#696295, TNUMERIC#721436 AS TNUMERIC#696296, TDATE#721437 AS TDATE#696297, TTIMESTAMP#721438 AS TTIMESTAMP#696298, TBOOL#721439 AS TBOOL#696299, TCHAR#721440 AS TCHAR#696300, TVARCHAR#721441 AS TVARCHAR#696301, TCHARIDX1#721442 AS TCHARIDX1#696302, TCHARIDX2#721443 AS TCHARIDX2#696303, TCHARIDX3#721444 AS TCHARIDX3#696304, TVARCHARIDX1#721445 AS TVARCHARIDX1#696305, TVARCHARIDX2#721446 AS TVARCHARIDX2#696306, TVARCHARIDX3#721447 AS TVARCHARIDX3#696307, _LDBID_#721448 AS _LDBID_#696308]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721428L, TSMALLINT#721429, TINTEGER#721430, TBIGINT#721431L, TREAL#721432, TDOUBLE#721433, TFLOAT#721434, TDECIMAL#721435, TNUMERIC#721436, TDATE#721437, TTIMESTAMP#721438, TBOOL#721439, TCHAR#721440, TVARCHAR#721441, TCHARIDX1#721442, TCHARIDX2#721443, TCHARIDX3#721444, TVARCHARIDX1#721445, TVARCHARIDX2#721446, TVARCHARIDX3#721447, _LDBID_#721448] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TREAL#696313]
            :  :  +- Filter NOT cast(TREAL#696313 as double) IN (cast(155656.656 as double),cast(274367.736 as double))
            :  :     +- Project [TUNIQUE#721470L AS TUNIQUE#696309L, TSMALLINT#721471 AS TSMALLINT#696310, TINTEGER#721472 AS TINTEGER#696311, TBIGINT#721473L AS TBIGINT#696312L, TREAL#721474 AS TREAL#696313, TDOUBLE#721475 AS TDOUBLE#696314, TFLOAT#721476 AS TFLOAT#696315, TDECIMAL#721477 AS TDECIMAL#696316, TNUMERIC#721478 AS TNUMERIC#696317, TDATE#721479 AS TDATE#696318, TTIMESTAMP#721480 AS TTIMESTAMP#696319, TBOOL#721481 AS TBOOL#696320, TCHAR#721482 AS TCHAR#696321, TVARCHAR#721483 AS TVARCHAR#696322, TCHARIDX1#721484 AS TCHARIDX1#696323, TCHARIDX2#721485 AS TCHARIDX2#696324, TCHARIDX3#721486 AS TCHARIDX3#696325, TVARCHARIDX1#721487 AS TVARCHARIDX1#696326, TVARCHARIDX2#721488 AS TVARCHARIDX2#696327, TVARCHARIDX3#721489 AS TVARCHARIDX3#696328, _LDBID_#721490 AS _LDBID_#696329]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721470L, TSMALLINT#721471, TINTEGER#721472, TBIGINT#721473L, TREAL#721474, TDOUBLE#721475, TFLOAT#721476, TDECIMAL#721477, TNUMERIC#721478, TDATE#721479, TTIMESTAMP#721480, TBOOL#721481, TCHAR#721482, TVARCHAR#721483, TCHARIDX1#721484, TCHARIDX2#721485, TCHARIDX3#721486, TVARCHARIDX1#721487, TVARCHARIDX2#721488, TVARCHARIDX3#721489, _LDBID_#721490] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TDOUBLE#696335]
            :  :  +- Filter ((TDOUBLE#696335 <= cast(9852 as double)) && (TDOUBLE#696335 >= cast(5236.45 as double)))
            :  :     +- Project [TUNIQUE#721512L AS TUNIQUE#696330L, TSMALLINT#721513 AS TSMALLINT#696331, TINTEGER#721514 AS TINTEGER#696332, TBIGINT#721515L AS TBIGINT#696333L, TREAL#721516 AS TREAL#696334, TDOUBLE#721517 AS TDOUBLE#696335, TFLOAT#721518 AS TFLOAT#696336, TDECIMAL#721519 AS TDECIMAL#696337, TNUMERIC#721520 AS TNUMERIC#696338, TDATE#721521 AS TDATE#696339, TTIMESTAMP#721522 AS TTIMESTAMP#696340, TBOOL#721523 AS TBOOL#696341, TCHAR#721524 AS TCHAR#696342, TVARCHAR#721525 AS TVARCHAR#696343, TCHARIDX1#721526 AS TCHARIDX1#696344, TCHARIDX2#721527 AS TCHARIDX2#696345, TCHARIDX3#721528 AS TCHARIDX3#696346, TVARCHARIDX1#721529 AS TVARCHARIDX1#696347, TVARCHARIDX2#721530 AS TVARCHARIDX2#696348, TVARCHARIDX3#721531 AS TVARCHARIDX3#696349, _LDBID_#721532 AS _LDBID_#696350]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721512L, TSMALLINT#721513, TINTEGER#721514, TBIGINT#721515L, TREAL#721516, TDOUBLE#721517, TFLOAT#721518, TDECIMAL#721519, TNUMERIC#721520, TDATE#721521, TTIMESTAMP#721522, TBOOL#721523, TCHAR#721524, TVARCHAR#721525, TCHARIDX1#721526, TCHARIDX2#721527, TCHARIDX3#721528, TVARCHARIDX1#721529, TVARCHARIDX2#721530, TVARCHARIDX3#721531, _LDBID_#721532] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TFLOAT#696357]
            :  :  +- Filter (isnotnull(TFLOAT#696357) && ((TFLOAT#696357 >= cast(1092 as float)) && (TFLOAT#696357 <= cast(3284 as float))))
            :  :     +- Project [TUNIQUE#721554L AS TUNIQUE#696351L, TSMALLINT#721555 AS TSMALLINT#696352, TINTEGER#721556 AS TINTEGER#696353, TBIGINT#721557L AS TBIGINT#696354L, TREAL#721558 AS TREAL#696355, TDOUBLE#721559 AS TDOUBLE#696356, TFLOAT#721560 AS TFLOAT#696357, TDECIMAL#721561 AS TDECIMAL#696358, TNUMERIC#721562 AS TNUMERIC#696359, TDATE#721563 AS TDATE#696360, TTIMESTAMP#721564 AS TTIMESTAMP#696361, TBOOL#721565 AS TBOOL#696362, TCHAR#721566 AS TCHAR#696363, TVARCHAR#721567 AS TVARCHAR#696364, TCHARIDX1#721568 AS TCHARIDX1#696365, TCHARIDX2#721569 AS TCHARIDX2#696366, TCHARIDX3#721570 AS TCHARIDX3#696367, TVARCHARIDX1#721571 AS TVARCHARIDX1#696368, TVARCHARIDX2#721572 AS TVARCHARIDX2#696369, TVARCHARIDX3#721573 AS TVARCHARIDX3#696370, _LDBID_#721574 AS _LDBID_#696371]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721554L, TSMALLINT#721555, TINTEGER#721556, TBIGINT#721557L, TREAL#721558, TDOUBLE#721559, TFLOAT#721560, TDECIMAL#721561, TNUMERIC#721562, TDATE#721563, TTIMESTAMP#721564, TBOOL#721565, TCHAR#721566, TVARCHAR#721567, TCHARIDX1#721568, TCHARIDX2#721569, TCHARIDX3#721570, TVARCHARIDX1#721571, TVARCHARIDX2#721572, TVARCHARIDX3#721573, _LDBID_#721574] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TDECIMAL#696379]
            :  :  +- Filter (isnull(TDECIMAL#696379) || (cast(TDECIMAL#696379 as decimal(10,2)) >= cast(8378.5 as decimal(10,2))))
            :  :     +- Project [TUNIQUE#721596L AS TUNIQUE#696372L, TSMALLINT#721597 AS TSMALLINT#696373, TINTEGER#721598 AS TINTEGER#696374, TBIGINT#721599L AS TBIGINT#696375L, TREAL#721600 AS TREAL#696376, TDOUBLE#721601 AS TDOUBLE#696377, TFLOAT#721602 AS TFLOAT#696378, TDECIMAL#721603 AS TDECIMAL#696379, TNUMERIC#721604 AS TNUMERIC#696380, TDATE#721605 AS TDATE#696381, TTIMESTAMP#721606 AS TTIMESTAMP#696382, TBOOL#721607 AS TBOOL#696383, TCHAR#721608 AS TCHAR#696384, TVARCHAR#721609 AS TVARCHAR#696385, TCHARIDX1#721610 AS TCHARIDX1#696386, TCHARIDX2#721611 AS TCHARIDX2#696387, TCHARIDX3#721612 AS TCHARIDX3#696388, TVARCHARIDX1#721613 AS TVARCHARIDX1#696389, TVARCHARIDX2#721614 AS TVARCHARIDX2#696390, TVARCHARIDX3#721615 AS TVARCHARIDX3#696391, _LDBID_#721616 AS _LDBID_#696392]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721596L, TSMALLINT#721597, TINTEGER#721598, TBIGINT#721599L, TREAL#721600, TDOUBLE#721601, TFLOAT#721602, TDECIMAL#721603, TNUMERIC#721604, TDATE#721605, TTIMESTAMP#721606, TBOOL#721607, TCHAR#721608, TVARCHAR#721609, TCHARIDX1#721610, TCHARIDX2#721611, TCHARIDX3#721612, TVARCHARIDX1#721613, TVARCHARIDX2#721614, TVARCHARIDX3#721615, _LDBID_#721616] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TNUMERIC#696401]
            :  :  +- Filter (((NOT (cast(TNUMERIC#696401 as decimal(10,4)) = cast(8674.5869 as decimal(10,4))) && NOT (cast(TNUMERIC#696401 as decimal(10,4)) = cast(9135.7007 as decimal(10,4)))) && NOT (cast(TNUMERIC#696401 as decimal(10,4)) = cast(2827.9165 as decimal(10,4)))) && NOT (cast(TNUMERIC#696401 as decimal(10,4)) = cast(4731.5215 as decimal(10,4))))
            :  :     +- Project [TUNIQUE#721638L AS TUNIQUE#696393L, TSMALLINT#721639 AS TSMALLINT#696394, TINTEGER#721640 AS TINTEGER#696395, TBIGINT#721641L AS TBIGINT#696396L, TREAL#721642 AS TREAL#696397, TDOUBLE#721643 AS TDOUBLE#696398, TFLOAT#721644 AS TFLOAT#696399, TDECIMAL#721645 AS TDECIMAL#696400, TNUMERIC#721646 AS TNUMERIC#696401, TDATE#721647 AS TDATE#696402, TTIMESTAMP#721648 AS TTIMESTAMP#696403, TBOOL#721649 AS TBOOL#696404, TCHAR#721650 AS TCHAR#696405, TVARCHAR#721651 AS TVARCHAR#696406, TCHARIDX1#721652 AS TCHARIDX1#696407, TCHARIDX2#721653 AS TCHARIDX2#696408, TCHARIDX3#721654 AS TCHARIDX3#696409, TVARCHARIDX1#721655 AS TVARCHARIDX1#696410, TVARCHARIDX2#721656 AS TVARCHARIDX2#696411, TVARCHARIDX3#721657 AS TVARCHARIDX3#696412, _LDBID_#721658 AS _LDBID_#696413]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721638L, TSMALLINT#721639, TINTEGER#721640, TBIGINT#721641L, TREAL#721642, TDOUBLE#721643, TFLOAT#721644, TDECIMAL#721645, TNUMERIC#721646, TDATE#721647, TTIMESTAMP#721648, TBOOL#721649, TCHAR#721650, TVARCHAR#721651, TCHARIDX1#721652, TCHARIDX2#721653, TCHARIDX3#721654, TVARCHARIDX1#721655, TVARCHARIDX2#721656, TVARCHARIDX3#721657, _LDBID_#721658] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TDATE#696423]
            :  :  +- Filter TDATE#696423 IN (7305,13147)
            :  :     +- Project [TUNIQUE#721680L AS TUNIQUE#696414L, TSMALLINT#721681 AS TSMALLINT#696415, TINTEGER#721682 AS TINTEGER#696416, TBIGINT#721683L AS TBIGINT#696417L, TREAL#721684 AS TREAL#696418, TDOUBLE#721685 AS TDOUBLE#696419, TFLOAT#721686 AS TFLOAT#696420, TDECIMAL#721687 AS TDECIMAL#696421, TNUMERIC#721688 AS TNUMERIC#696422, TDATE#721689 AS TDATE#696423, TTIMESTAMP#721690 AS TTIMESTAMP#696424, TBOOL#721691 AS TBOOL#696425, TCHAR#721692 AS TCHAR#696426, TVARCHAR#721693 AS TVARCHAR#696427, TCHARIDX1#721694 AS TCHARIDX1#696428, TCHARIDX2#721695 AS TCHARIDX2#696429, TCHARIDX3#721696 AS TCHARIDX3#696430, TVARCHARIDX1#721697 AS TVARCHARIDX1#696431, TVARCHARIDX2#721698 AS TVARCHARIDX2#696432, TVARCHARIDX3#721699 AS TVARCHARIDX3#696433, _LDBID_#721700 AS _LDBID_#696434]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721680L, TSMALLINT#721681, TINTEGER#721682, TBIGINT#721683L, TREAL#721684, TDOUBLE#721685, TFLOAT#721686, TDECIMAL#721687, TNUMERIC#721688, TDATE#721689, TTIMESTAMP#721690, TBOOL#721691, TCHAR#721692, TVARCHAR#721693, TCHARIDX1#721694, TCHARIDX2#721695, TCHARIDX3#721696, TVARCHARIDX1#721697, TVARCHARIDX2#721698, TVARCHARIDX3#721699, _LDBID_#721700] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TTIMESTAMP#696445]
            :  :  +- Filter NOT TTIMESTAMP#696445 IN (986270400000000,1041221532000000)
            :  :     +- Project [TUNIQUE#721722L AS TUNIQUE#696435L, TSMALLINT#721723 AS TSMALLINT#696436, TINTEGER#721724 AS TINTEGER#696437, TBIGINT#721725L AS TBIGINT#696438L, TREAL#721726 AS TREAL#696439, TDOUBLE#721727 AS TDOUBLE#696440, TFLOAT#721728 AS TFLOAT#696441, TDECIMAL#721729 AS TDECIMAL#696442, TNUMERIC#721730 AS TNUMERIC#696443, TDATE#721731 AS TDATE#696444, TTIMESTAMP#721732 AS TTIMESTAMP#696445, TBOOL#721733 AS TBOOL#696446, TCHAR#721734 AS TCHAR#696447, TVARCHAR#721735 AS TVARCHAR#696448, TCHARIDX1#721736 AS TCHARIDX1#696449, TCHARIDX2#721737 AS TCHARIDX2#696450, TCHARIDX3#721738 AS TCHARIDX3#696451, TVARCHARIDX1#721739 AS TVARCHARIDX1#696452, TVARCHARIDX2#721740 AS TVARCHARIDX2#696453, TVARCHARIDX3#721741 AS TVARCHARIDX3#696454, _LDBID_#721742 AS _LDBID_#696455]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721722L, TSMALLINT#721723, TINTEGER#721724, TBIGINT#721725L, TREAL#721726, TDOUBLE#721727, TFLOAT#721728, TDECIMAL#721729, TNUMERIC#721730, TDATE#721731, TTIMESTAMP#721732, TBOOL#721733, TCHAR#721734, TVARCHAR#721735, TCHARIDX1#721736, TCHARIDX2#721737, TCHARIDX3#721738, TVARCHARIDX1#721739, TVARCHARIDX2#721740, TVARCHARIDX3#721741, _LDBID_#721742] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TBOOL#696467]
            :  :  +- Filter (TBOOL#696467 = true)
            :  :     +- Project [TUNIQUE#721764L AS TUNIQUE#696456L, TSMALLINT#721765 AS TSMALLINT#696457, TINTEGER#721766 AS TINTEGER#696458, TBIGINT#721767L AS TBIGINT#696459L, TREAL#721768 AS TREAL#696460, TDOUBLE#721769 AS TDOUBLE#696461, TFLOAT#721770 AS TFLOAT#696462, TDECIMAL#721771 AS TDECIMAL#696463, TNUMERIC#721772 AS TNUMERIC#696464, TDATE#721773 AS TDATE#696465, TTIMESTAMP#721774 AS TTIMESTAMP#696466, TBOOL#721775 AS TBOOL#696467, TCHAR#721776 AS TCHAR#696468, TVARCHAR#721777 AS TVARCHAR#696469, TCHARIDX1#721778 AS TCHARIDX1#696470, TCHARIDX2#721779 AS TCHARIDX2#696471, TCHARIDX3#721780 AS TCHARIDX3#696472, TVARCHARIDX1#721781 AS TVARCHARIDX1#696473, TVARCHARIDX2#721782 AS TVARCHARIDX2#696474, TVARCHARIDX3#721783 AS TVARCHARIDX3#696475, _LDBID_#721784 AS _LDBID_#696476]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721764L, TSMALLINT#721765, TINTEGER#721766, TBIGINT#721767L, TREAL#721768, TDOUBLE#721769, TFLOAT#721770, TDECIMAL#721771, TNUMERIC#721772, TDATE#721773, TTIMESTAMP#721774, TBOOL#721775, TCHAR#721776, TVARCHAR#721777, TCHARIDX1#721778, TCHARIDX2#721779, TCHARIDX3#721780, TVARCHARIDX1#721781, TVARCHARIDX2#721782, TVARCHARIDX3#721783, _LDBID_#721784] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  :- Project [TCHAR#696489]
            :  :  +- Filter ((((TCHAR#696489 >= ) && TCHAR#696489 LIKE %a%) || ((TCHAR#696489 >= q) && TCHAR#696489 LIKE q%)) || ((TCHAR#696489 >= ) && TCHAR#696489 LIKE %z))
            :  :     +- Project [TUNIQUE#721806L AS TUNIQUE#696477L, TSMALLINT#721807 AS TSMALLINT#696478, TINTEGER#721808 AS TINTEGER#696479, TBIGINT#721809L AS TBIGINT#696480L, TREAL#721810 AS TREAL#696481, TDOUBLE#721811 AS TDOUBLE#696482, TFLOAT#721812 AS TFLOAT#696483, TDECIMAL#721813 AS TDECIMAL#696484, TNUMERIC#721814 AS TNUMERIC#696485, TDATE#721815 AS TDATE#696486, TTIMESTAMP#721816 AS TTIMESTAMP#696487, TBOOL#721817 AS TBOOL#696488, TCHAR#721818 AS TCHAR#696489, TVARCHAR#721819 AS TVARCHAR#696490, TCHARIDX1#721820 AS TCHARIDX1#696491, TCHARIDX2#721821 AS TCHARIDX2#696492, TCHARIDX3#721822 AS TCHARIDX3#696493, TVARCHARIDX1#721823 AS TVARCHARIDX1#696494, TVARCHARIDX2#721824 AS TVARCHARIDX2#696495, TVARCHARIDX3#721825 AS TVARCHARIDX3#696496, _LDBID_#721826 AS _LDBID_#696497]
            :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#721806L, TSMALLINT#721807, TINTEGER#721808, TBIGINT#721809L, TREAL#721810, TDOUBLE#721811, TFLOAT#721812, TDECIMAL#721813, TNUMERIC#721814, TDATE#721815, TTIMESTAMP#721816, TBOOL#721817, TCHAR#721818, TVARCHAR#721819, TCHARIDX1#721820, TCHARIDX2#721821, TCHARIDX3#721822, TVARCHARIDX1#721823, TVARCHARIDX2#721824, TVARCHARIDX3#721825, _LDBID_#721826] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            :  +- Project [TVARCHAR#696511]
            :     +- Filter (((TVARCHAR#696511 >= ) && TVARCHAR#696511 LIKE _c_) || NOT ((TVARCHAR#696511 >= ) && TVARCHAR#696511 LIKE %d_))
            :        +- Project [TUNIQUE#721848L AS TUNIQUE#696498L, TSMALLINT#721849 AS TSMALLINT#696499, TINTEGER#721850 AS TINTEGER#696500, TBIGINT#721851L AS TBIGINT#696501L, TREAL#721852 AS TREAL#696502, TDOUBLE#721853 AS TDOUBLE#696503, TFLOAT#721854 AS TFLOAT#696504, TDECIMAL#721855 AS TDECIMAL#696505, TNUMERIC#721856 AS TNUMERIC#696506, TDATE#721857 AS TDATE#696507, TTIMESTAMP#721858 AS TTIMESTAMP#696508, TBOOL#721859 AS TBOOL#696509, TCHAR#721860 AS TCHAR#696510, TVARCHAR#721861 AS TVARCHAR#696511, TCHARIDX1#721862 AS TCHARIDX1#696512, TCHARIDX2#721863 AS TCHARIDX2#696513, TCHARIDX3#721864 AS TCHARIDX3#696514, TVARCHARIDX1#721865 AS TVARCHARIDX1#696515, TVARCHARIDX2#721866 AS TVARCHARIDX2#696516, TVARCHARIDX3#721867 AS TVARCHARIDX3#696517, _LDBID_#721868 AS _LDBID_#696518]
            :           +- RelationV2 PallasDataSourceEntance[TUNIQUE#721848L, TSMALLINT#721849, TINTEGER#721850, TBIGINT#721851L, TREAL#721852, TDOUBLE#721853, TFLOAT#721854, TDECIMAL#721855, TNUMERIC#721856, TDATE#721857, TTIMESTAMP#721858, TBOOL#721859, TCHAR#721860, TVARCHAR#721861, TCHARIDX1#721862, TCHARIDX2#721863, TCHARIDX3#721864, TVARCHARIDX1#721865, TVARCHARIDX2#721866, TVARCHARIDX3#721867, _LDBID_#721868] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
            +- Project [TUNIQUE#721344L AS TUNIQUE#696246L, TSMALLINT#721345 AS TSMALLINT#696247, TINTEGER#721346 AS TINTEGER#696248, TBIGINT#721347L AS TBIGINT#696249L, TREAL#721348 AS TREAL#696250, TDOUBLE#721349 AS TDOUBLE#696251, TFLOAT#721350 AS TFLOAT#696252, TDECIMAL#721351 AS TDECIMAL#696253, TNUMERIC#721352 AS TNUMERIC#696254, TDATE#721353 AS TDATE#696255, TTIMESTAMP#721354 AS TTIMESTAMP#696256, TBOOL#721355 AS TBOOL#696257, TCHAR#721356 AS TCHAR#696258, TVARCHAR#721357 AS TVARCHAR#696259, TCHARIDX1#721358 AS TCHARIDX1#696260, TCHARIDX2#721359 AS TCHARIDX2#696261, TCHARIDX3#721360 AS TCHARIDX3#696262, TVARCHARIDX1#721361 AS TVARCHARIDX1#696263, TVARCHARIDX2#721362 AS TVARCHARIDX2#696264, TVARCHARIDX3#721363 AS TVARCHARIDX3#696265, _LDBID_#721364 AS _LDBID_#696266]
               +- RelationV2 PallasDataSourceEntance[TUNIQUE#721344L, TSMALLINT#721345, TINTEGER#721346, TBIGINT#721347L, TREAL#721348, TDOUBLE#721349, TFLOAT#721350, TDECIMAL#721351, TNUMERIC#721352, TDATE#721353, TTIMESTAMP#721354, TBOOL#721355, TCHAR#721356, TVARCHAR#721357, TCHARIDX1#721358, TCHARIDX2#721359, TCHARIDX3#721360, TVARCHARIDX1#721361, TVARCHARIDX2#721362, TVARCHARIDX3#721363, _LDBID_#721364] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])

SQL>     
SQL>        
SQL> --group by
   > 
   > ---每列
   >        
   > ----smallint类型作为group by条件
SQL> SELECT TSMALLINT,SUM(TINTEGER) AS TSUM,AVG(TBIGINT) AS TAVG,MAX(TREAL) AS TMAX,MIN(TDOUBLE) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TSMALLINT BETWEEN 200 AND 600
   >        GROUP BY TSMALLINT ORDER BY TSMALLINT LIMIT 10;
10 rows selected.
SQL>        
SQL> ----interger类型作为group by条件
SQL> SELECT TINTEGER,SUM(TSMALLINT) AS TSUM,AVG(TBIGINT) AS TAVG,MAX(TREAL) AS TMAX,MIN(TDOUBLE) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TINTEGER,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TINTEGER BETWEEN 15000000 AND 70000000
   >        GROUP BY TINTEGER ORDER BY TINTEGER LIMIT 10;
10 rows selected.
SQL>        
SQL> ----bigint类型作为group by条件
SQL> SELECT TBIGINT,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TREAL) AS TMAX,MIN(TDOUBLE) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TBIGINT,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TBIGINT BETWEEN 222222222222 AND 444444444444
   >        GROUP BY TBIGINT ORDER BY TBIGINT LIMIT 10;
10 rows selected.
SQL> ----real类型作为group by条件
SQL> SELECT TREAL,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TDOUBLE) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TREAL,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TREAL BETWEEN 4500 AND 7000
   >        GROUP BY TREAL ORDER BY TREAL LIMIT 10;
10 rows selected.
SQL>        
SQL> ----double类型作为group by条件
SQL> SELECT TDOUBLE,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TDOUBLE,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TDOUBLE BETWEEN 4500 AND 7000
   >        GROUP BY TDOUBLE ORDER BY TDOUBLE LIMIT 10;
10 rows selected.
SQL>        
SQL> ----float类型作为group by条件
SQL> SELECT TFLOAT,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TDOUBLE,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TDOUBLE BETWEEN 4500 AND 7000
   >        GROUP BY TFLOAT ORDER BY TFLOAT LIMIT 10;
java.sql.SQLSyntaxErrorException: expression not in aggregate or GROUP BY columns: PERCENTILE(PUBLIC.P1000.TDOUBLE,0.5,100) in statement [SELECT TFLOAT,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
       APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
       COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TDOUBLE,0.5,100) AS TPERCENTILE,
       PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
       WHERE TDOUBLE BETWEEN 4500 AND 7000
       GROUP BY TFLOAT ORDER BY TFLOAT LIMIT 10]
SQL>        
SQL> ----decimal类型作为group by条件
SQL> SELECT TDECIMAL,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TDECIMAL,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TDECIMAL BETWEEN 4500 AND 7000
   >        GROUP BY TDECIMAL ORDER BY TDECIMAL LIMIT 10;
10 rows selected.
SQL>        
SQL> ----numeric类型作为group by条件
SQL> SELECT TNUMERIC,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE(TNUMERIC,0.5,100) AS TPERCENTILE,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TNUMERIC BETWEEN 4500 AND 7000
   >        GROUP BY TNUMERIC ORDER BY TNUMERIC LIMIT 10;
10 rows selected.
SQL>        
SQL> ----date类型作为group by条件
SQL> SELECT TDATE,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TDATE BETWEEN '1990-01-01' AND '2005-12-30'
   >        GROUP BY TDATE ORDER BY TDATE LIMIT 10;
10 rows selected.
SQL>        
SQL> ----timestamp类型作为group by条件
SQL> SELECT TTIMESTAMP,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TTIMESTAMP BETWEEN '1990-01-01 00:00:00' AND '2005-12-30 00:00:00'
   >        GROUP BY TTIMESTAMP ORDER BY TTIMESTAMP LIMIT 10;
10 rows selected.
SQL>        
SQL> ----boolean类型作为group by条件
SQL> SELECT TBOOL,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TBOOL = TRUE
   >        GROUP BY TBOOL ORDER BY TBOOL LIMIT 10;
1 row selected.
SQL>        
SQL> ----char类型作为group by条件
SQL> SELECT TCHAR,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TCHAR LIKE '%c_'
   >        GROUP BY TCHAR ORDER BY TCHAR LIMIT 10;
10 rows selected.
SQL>        
SQL> ----varchar类型作为group by条件
SQL> SELECT TVARCHAR,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TVARCHAR LIKE '%xc%'
   >        GROUP BY TVARCHAR ORDER BY TVARCHAR LIMIT 10;
10 rows selected.
SQL>              
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型作为group by条件
SQL> SELECT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,COUNT(TFLOAT) AS TCOUNT,
   >        APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,
   >        COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000
   >        WHERE TVARCHAR LIKE '%xc%'
   >        AND TCHAR LIKE '%c_'
   >        AND TBOOL = TRUE
   >        OR TTIMESTAMP BETWEEN '1990-01-01 00:00:00' AND '2005-12-30 00:00:00'
   >        AND TDATE BETWEEN '1990-01-01' AND '2005-12-30'
   >        AND TNUMERIC BETWEEN 2134 AND 6567
   >        AND TDECIMAL BETWEEN 4500 AND 7000
   >        AND TDOUBLE BETWEEN 8908 AND 9374
   >        AND TREAL BETWEEN 5654 AND 7656
   >        AND TBIGINT BETWEEN 222222222222 AND 444444444444
   >        AND TINTEGER BETWEEN 15000000 AND 70000000
   >        AND TSMALLINT BETWEEN 200 AND 600
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE ORDER BY TUNIQUE LIMIT 10;
10 rows selected.
SQL>        
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段,数值型函数，字符型函数，时间型函数作为过滤条件。 
   > ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar作为group by条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX,RANK() OVER(PARTITION BY TSMALLINT ORDER BY TUNIQUE) AS TRANK FROM P1000 WHERE 
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500)
   > 	   AND  (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30'))
   > 	   AND (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_')
   >        AND (TSMALLINT IN (8638,9837,1224,8317,9225,7464,4661,818,9317,5932,5047,2741)) 
   >        AND (TINTEGER >= 503040 OR TINTEGER <= 1223) 
   > 	   AND (TBIGINT BETWEEN 234567802455 AND 908667115321)
   >        AND (TREAL NOT IN (155656.656,274367.736)) 
   > 	   OR (TDOUBLE <=9852.9 AND TDOUBLE >=5236.45) 
   > 	   AND (TFLOAT IS NOT NULL  AND (TFLOAT BETWEEN 1092 AND 3284))
   > 	   AND ((TDECIMAL IS NULL OR TDECIMAL >=8378.5) 
   > 	   AND (TNUMERIC <> 7418.1886 AND TNUMERIC <> 8674.5869 AND TNUMERIC <> 9135.7007 AND TNUMERIC != 2827.9165 AND TNUMERIC != 4731.5215)) 
   > 	   AND TDATE IN (DATE '1990-01-01',DATE '2005-12-30') 
   > 	   OR ((TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12')) 
   > 	   AND (TBOOL = TRUE))
   > 	   AND (TCHAR LIKE '%a%' OR TCHAR LIKE 'q%' OR TCHAR LIKE '%z') 
   > 	   AND (TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_')
   > 	   GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE ORDER BY TUNIQUE LIMIT 10;
10 rows selected.
SQL> 	   
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段,数值型函数，字符型函数，时间型函数作为过滤条件的子查询。 
   > ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar作为group by条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX,RANK() OVER(PARTITION BY TSMALLINT ORDER BY TUNIQUE) AS TRANK FROM P1000 AS a WHERE
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500)
   > 	   AND  (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30'))
   > 	   AND (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_')
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5)
   >        AND a.TNUMERIC IN (SELECT i.TNUMERIC FROM P1000 AS i WHERE i.TNUMERIC <> 8674.5869 AND i.TNUMERIC <> 9135.7007 AND i.TNUMERIC != 2827.9165 AND i.TNUMERIC != 4731.5215))
   >        AND a.TDATE IN (SELECT j.TDATE FROM P1000 AS j WHERE j.TDATE IN (DATE '1990-01-01',DATE '2005-12-30'))
   >        OR (a.TTIMESTAMP IN (SELECT k.TTIMESTAMP FROM P1000 AS k WHERE k.TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12'))
   >        AND a.TBOOL IN (SELECT l.TBOOL FROM P1000 AS l WHERE l.TBOOL = TRUE))
   >        AND a.TCHAR IN (SELECT m.TCHAR FROM P1000 AS m WHERE m.TCHAR LIKE '%a%' OR m.TCHAR LIKE 'q%' OR m.TCHAR LIKE '%z')
   >        AND a.TVARCHAR IN (SELECT n.TVARCHAR FROM P1000 AS n WHERE n.TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_')
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE ORDER BY TUNIQUE LIMIT 10;
java.sql.SQLException: Worker execution: ldb worker caused error: Null-aware predicate sub-queries cannot be used in nested conditions: ((((((((((((((((((cast(abs(TSMALLINT#705332) as int) >= 2500) && (cast(abs(TSMALLINT#705332) as int) <= 4500)) || ((((((((((cast((cast(TSMALLINT#705332 as double) < TREAL#705335) as boolean) = true) && (CBRT(cast(TSMALLINT#705332 as double)) >= cast(8 as double))) && ((cast(bround(TSMALLINT#705332, 2) as int) >= 600) && (cast(bround(TSMALLINT#705332, 2) as int) <= 2000))) && cast(named_struct(col_0, chr(cast(TSMALLINT#705332 as bigint))) as struct<col_0:string>) IN (cast(named_struct(col_0, x) as struct<col_0:string>),cast(named_struct(col_0, v) as struct<col_0:string>),cast(named_struct(col_0, n) as struct<col_0:string>),cast(named_struct(col_0, D) as struct<col_0:string>),cast(named_struct(col_0, K) as struct<col_0:string>),cast(named_struct(col_0, k) as struct<col_0:string>),cast(named_struct(col_0, c) as struct<col_0:string>),cast(named_struct(col_0, A) as struct<col_0:string>),cast(named_struct(col_0, a) as struct<col_0:string>),cast(named_struct(col_0, b) as struct<col_0:string>),cast(named_struct(col_0, B) as struct<col_0:string>),cast(named_struct(col_0, C) as struct<col_0:string>),cast(named_struct(col_0, d) as struct<col_0:string>),cast(named_struct(col_0, e) as struct<col_0:string>))) && ((length(conv(cast(TSMALLINT#705332 as string), 10, 2)) >= 8) || (length(conv(cast(TSMALLINT#705332 as string), 10, 2)) <= 5))) && ((DEGREES(cast(TSMALLINT#705332 as double)) >= cast(42000 as double)) && (DEGREES(cast(TSMALLINT#705332 as double)) <= cast(400000 as double)))) && ((FLOOR(cast(TSMALLINT#705332 as double)) <= cast(600 as bigint)) && (FLOOR(cast(TSMALLINT#705332 as double)) >= cast(1500 as bigint)))) && cast(named_struct(col_0, CEIL(cast(TSMALLINT#705332 as double))) as struct<col_0:bigint>) IN (cast(named_struct(col_0, 5239) as struct<col_0:bigint>),cast(named_struct(col_0, 5242) as struct<col_0:bigint>),cast(named_struct(col_0, 8212) as struct<col_0:bigint>),cast(named_struct(col_0, 8114) as struct<col_0:bigint>),cast(named_struct(col_0, 5026) as struct<col_0:bigint>),cast(named_struct(col_0, 8102) as struct<col_0:bigint>),cast(named_struct(col_0, 8317) as struct<col_0:bigint>),cast(named_struct(col_0, 2404) as struct<col_0:bigint>))) && (length(format_number(TSMALLINT#705332, 3)) <= 5)) && (CASE WHEN (CASE WHEN (cast(TSMALLINT#705332 as bigint) > TBIGINT#705334L) THEN cast(TSMALLINT#705332 as bigint) ELSE TBIGINT#705334L END > cast(TINTEGER#705333 as bigint)) THEN CASE WHEN (cast(TSMALLINT#705332 as bigint) > TBIGINT#705334L) THEN cast(TSMALLINT#705332 as bigint) ELSE TBIGINT#705334L END ELSE cast(TINTEGER#705333 as bigint) END >= cast(TSMALLINT#705332 as bigint)))) || (((((cast(hex(cast(TSMALLINT#705332 as bigint)) as int) > 2000) && (cast(hex(cast(TSMALLINT#705332 as bigint)) as int) < 2500)) && ((HYPOT(cast(TSMALLINT#705332 as double), cast(TSMALLINT#705332 as double)) >= cast(12000 as double)) && (HYPOT(cast(TSMALLINT#705332 as double), cast(TSMALLINT#705332 as double)) <= cast(13000 as double)))) && isnotnull(isnotnull(TSMALLINT#705332))) && (TSMALLINT#705332 <= TSMALLINT#705332))) || ((((LOG(cast(TSMALLINT#705332 as double)) >= cast(5 as double)) && (LOG(cast(TSMALLINT#705332 as double)) <= cast(6 as double))) && ((LOG10(cast(TSMALLINT#705332 as double)) >= cast(2 as double)) && (LOG10(cast(TSMALLINT#705332 as double)) <= cast(3 as double)))) && NOT ((LOG1P(cast(TSMALLINT#705332 as double)) >= cast(6 as double)) && (LOG1P(cast(TSMALLINT#705332 as double)) <= cast(8 as double))))) || (((LOG2(cast(TSMALLINT#705332 as double)) >= cast(13.2 as double)) && ((TINTEGER#705333 % cast(TSMALLINT#705332 as int)) < 50)) && (cast(-TSMALLINT#705332 as int) <= -9000))) || ((cast(CASE WHEN (cast(TSMALLINT#705332 as int) = TINTEGER#705333) THEN null ELSE TSMALLINT#705332 END as int) <= 100) && (pmod(TINTEGER#705333, cast(TSMALLINT#705332 as int)) <= 200))) && ((((cast(TSMALLINT#705332 as int) > 400) && (cast(TSMALLINT#705332 as int) <= 3000)) || ((cast(TSMALLINT#705332 as int) >= 5000) && (cast(TSMALLINT#705332 as int) <= 5500))) || ((cast(TSMALLINT#705332 as int) >= 8000) && (cast(TSMALLINT#705332 as int) <= 8500)))) && ((cast(add_months(TDATE#705340, 4) as timestamp) >= 915120000000000) && (cast(add_months(TDATE#705340, 4) as timestamp) <= 1609257600000000))) && ((date_add(TDATE#705340, 20) >= 7305) && (date_add(TDATE#705340, 20) <= 10955))) || ((((((cast(named_struct(col_0, date_format(cast(TDATE#705340 as timestamp), yyyy, Some(Asia/Shanghai))) as struct<col_0:string>) IN (cast(named_struct(col_0, 2000) as struct<col_0:string>),cast(named_struct(col_0, 2003) as struct<col_0:string>),cast(named_struct(col_0, 2047) as struct<col_0:string>),cast(named_struct(col_0, 2032) as struct<col_0:string>),cast(named_struct(col_0, 2033) as struct<col_0:string>),cast(named_struct(col_0, 2048) as struct<col_0:string>)) && NOT ((date_sub(TDATE#705340, 13) >= 9494) && (date_sub(TDATE#705340, 13) <= 25567))) && (datediff(date_add(TDATE#705340, 12), date_sub(TDATE#705340, 6)) >= 18)) && ((dayofmonth(TDATE#705340) >= 10) && (dayofmonth(TDATE#705340) <= 25))) && ((dayofmonth(TDATE#705340) >= 10) && (dayofmonth(TDATE#705340) <= 15))) && NOT ((dayofyear(TDATE#705340) >= 50) && (dayofyear(TDATE#705340) <= 300))) && ((cast(next_day(TDATE#705340, TU) as timestamp) >= 1577808000000000) && (cast(next_day(TDATE#705340, TU) as timestamp) <= 2240409600000000)))) || (((cast(named_struct(col_0, last_day(TDATE#705340)) as struct<col_0:date>) IN (cast(named_struct(col_0, 13452) as struct<col_0:date>),cast(named_struct(col_0, 6939) as struct<col_0:date>),cast(named_struct(col_0, 11261) as struct<col_0:date>),cast(named_struct(col_0, 12295) as struct<col_0:date>),cast(named_struct(col_0, 19477) as struct<col_0:date>),cast(named_struct(col_0, 4249) as struct<col_0:date>)) && (months_between(cast(TDATE#705340 as timestamp), cast(add_months(TDATE#705340, 18) as timestamp), true, Some(Asia/Shanghai)) = cast(-18 as double))) && ((cast(cast(unix_timestamp(TDATE#705340, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) >= 10592) && (cast(cast(unix_timestamp(TDATE#705340, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) <= 13147))) && (trunc(TDATE#705340, YEAR) >= 12053))) || (((((((to_unix_timestamp(TDATE#705340, yyyy-MM-dd HH:mm:ss, Some(Asia/Shanghai)) >= cast(1911111111 as bigint)) && ((weekofyear(TDATE#705340) >= 20) && (weekofyear(TDATE#705340) <= 30))) && NOT cast(named_struct(col_0, year(TDATE#705340)) as struct<col_0:int>) IN (cast(named_struct(col_0, 2047) as struct<col_0:int>),cast(named_struct(col_0, 2033) as struct<col_0:int>),cast(named_struct(col_0, 2008) as struct<col_0:int>),cast(named_struct(col_0, 2010) as struct<col_0:int>),cast(named_struct(col_0, 2023) as struct<col_0:int>))) && (((TDATE#705340 >= 10592) && (TDATE#705340 <= 13147)) || (TDATE#705340 >= 22278))) && (length(TCHAR#705343) = 50)) && trim(TCHAR#705343, Some( )) LIKE %J) && trim(TCHAR#705343, Some(D)) LIKE %M%)) || (((((NOT rtrim(TCHAR#705343, Some(g)) LIKE N% && NOT rtrim(TCHAR#705343, Some(g)) LIKE %A%) && substring(TCHAR#705343, 13, 40) LIKE _z%) && lpad(TCHAR#705343, 55, TVARCHAR#705344) LIKE %O) && (length(md5(cast(TCHAR#705343 as binary))) >= 30)) && format_string(concat(TCHAR#705343, %d %s), 3232, TVARCHAR#705344) LIKE %323%)) || (((replace(TCHAR#705343, i, LDB) LIKE %LDB% && (length(reverse(TCHAR#705343)) = length(TCHAR#705343))) && trim(right(TCHAR#705343, 4), Some( )) LIKE %A) && (((TCHAR#705343 >= ) && TCHAR#705343 LIKE _P%) || (((TCHAR#705343 >= ) && TCHAR#705343 LIKE %V%) && ((TCHAR#705343 >= ) && TCHAR#705343 LIKE _A_))))) || ((TINTEGER#705333 IN (list#705604 []) && TBIGINT#705334L IN (list#705605 [])) && TREAL#705335 IN (list#705606 []))) || (((TDOUBLE#705336 IN (list#705607 []) && TFLOAT#705337 IN (list#705608 [])) && (TDECIMAL#705338 IN (list#705609 []) && TNUMERIC#705339 IN (list#705610 []))) && TDATE#705340 IN (list#705611 []))) || (((TTIMESTAMP#705341 IN (list#705612 []) && TBOOL#705342 IN (list#705613 [])) && TCHAR#705343 IN (list#705614 [])) && TVARCHAR#705344 IN (list#705615 [])));;
GlobalLimit (0 + 10)
+- LocalLimit (0 + 10)
   +- Sort [TUNIQUE#705331L ASC NULLS FIRST], true
      +- Distinct
         +- Project [TUNIQUE#705331L, TSMALLINT#705332, TINTEGER#705333, TBIGINT#705334L, TREAL#705335, TDOUBLE#705336, TFLOAT#705337, TDECIMAL#705338, TNUMERIC#705339, TDATE#705340, TTIMESTAMP#705341, TBOOL#705342, TCHAR#705343, TVARCHAR#705344, C15#709396, C16#709649, C17#709902, C18#710155, C19#710408, C20#710661, C21#710914, C22#711167, C23#711420, C24#711673, ... 22 more fields]
            +- Project [TUNIQUE#705331L, TSMALLINT#705332, TINTEGER#705333, TBIGINT#705334L, TREAL#705335, TDOUBLE#705336, TFLOAT#705337, TDECIMAL#705338, TNUMERIC#705339, TDATE#705340, TTIMESTAMP#705341, TBOOL#705342, TCHAR#705343, TVARCHAR#705344, C15#709396, C16#709649, C17#709902, C18#710155, C19#710408, C20#710661, C21#710914, C22#711167, C23#711420, C24#711673, ... 22 more fields]
               +- Window [rank(TUNIQUE#705331L) windowspecdefinition(TSMALLINT#705332, TUNIQUE#705331L ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS TRANK#717239], [TSMALLINT#705332], [TUNIQUE#705331L ASC NULLS FIRST]
                  +- Aggregate [TSMALLINT#705332, TINTEGER#705333, TBIGINT#705334L, TREAL#705335, TDOUBLE#705336, TFLOAT#705337, TDECIMAL#705338, TNUMERIC#705339, TDATE#705340, TTIMESTAMP#705341, TBOOL#705342, TCHAR#705343, TVARCHAR#705344, TUNIQUE#705331L], [TUNIQUE#705331L, TSMALLINT#705332, TINTEGER#705333, TBIGINT#705334L, TREAL#705335, TDOUBLE#705336, TFLOAT#705337, TDECIMAL#705338, TNUMERIC#705339, TDATE#705340, TTIMESTAMP#705341, TBOOL#705342, TCHAR#705343, TVARCHAR#705344, length(TVARCHAR#705344) AS C15#709396, trim(TVARCHAR#705344, Some( )) AS C16#709649, trim(TVARCHAR#705344, Some(D)) AS C17#709902, rtrim(TVARCHAR#705344, Some(g)) AS C18#710155, substring(TVARCHAR#705344, 13, 40) AS C19#710408, lpad(TVARCHAR#705344, 55, TVARCHAR#705344) AS C20#710661, md5(cast(TVARCHAR#705344 as binary)) AS C21#710914, format_string(concat(TVARCHAR#705344, %d %s), 3232, TVARCHAR#705344) AS C22#711167, replace(TVARCHAR#705344, i, LDB) AS C23#711420, reverse(TVARCHAR#705344) AS C24#711673, ... 21 more fields]
                     +- Filter ((((((((((((((((((cast(abs(TSMALLINT#705332) as int) >= 2500) && (cast(abs(TSMALLINT#705332) as int) <= 4500)) || ((((((((((cast((cast(TSMALLINT#705332 as double) < TREAL#705335) as boolean) = true) && (CBRT(cast(TSMALLINT#705332 as double)) >= cast(8 as double))) && ((cast(bround(TSMALLINT#705332, 2) as int) >= 600) && (cast(bround(TSMALLINT#705332, 2) as int) <= 2000))) && cast(named_struct(col_0, chr(cast(TSMALLINT#705332 as bigint))) as struct<col_0:string>) IN (cast(named_struct(col_0, x) as struct<col_0:string>),cast(named_struct(col_0, v) as struct<col_0:string>),cast(named_struct(col_0, n) as struct<col_0:string>),cast(named_struct(col_0, D) as struct<col_0:string>),cast(named_struct(col_0, K) as struct<col_0:string>),cast(named_struct(col_0, k) as struct<col_0:string>),cast(named_struct(col_0, c) as struct<col_0:string>),cast(named_struct(col_0, A) as struct<col_0:string>),cast(named_struct(col_0, a) as struct<col_0:string>),cast(named_struct(col_0, b) as struct<col_0:string>),cast(named_struct(col_0, B) as struct<col_0:string>),cast(named_struct(col_0, C) as struct<col_0:string>),cast(named_struct(col_0, d) as struct<col_0:string>),cast(named_struct(col_0, e) as struct<col_0:string>))) && ((length(conv(cast(TSMALLINT#705332 as string), 10, 2)) >= 8) || (length(conv(cast(TSMALLINT#705332 as string), 10, 2)) <= 5))) && ((DEGREES(cast(TSMALLINT#705332 as double)) >= cast(42000 as double)) && (DEGREES(cast(TSMALLINT#705332 as double)) <= cast(400000 as double)))) && ((FLOOR(cast(TSMALLINT#705332 as double)) <= cast(600 as bigint)) && (FLOOR(cast(TSMALLINT#705332 as double)) >= cast(1500 as bigint)))) && cast(named_struct(col_0, CEIL(cast(TSMALLINT#705332 as double))) as struct<col_0:bigint>) IN (cast(named_struct(col_0, 5239) as struct<col_0:bigint>),cast(named_struct(col_0, 5242) as struct<col_0:bigint>),cast(named_struct(col_0, 8212) as struct<col_0:bigint>),cast(named_struct(col_0, 8114) as struct<col_0:bigint>),cast(named_struct(col_0, 5026) as struct<col_0:bigint>),cast(named_struct(col_0, 8102) as struct<col_0:bigint>),cast(named_struct(col_0, 8317) as struct<col_0:bigint>),cast(named_struct(col_0, 2404) as struct<col_0:bigint>))) && (length(format_number(TSMALLINT#705332, 3)) <= 5)) && (CASE WHEN (CASE WHEN (cast(TSMALLINT#705332 as bigint) > TBIGINT#705334L) THEN cast(TSMALLINT#705332 as bigint) ELSE TBIGINT#705334L END > cast(TINTEGER#705333 as bigint)) THEN CASE WHEN (cast(TSMALLINT#705332 as bigint) > TBIGINT#705334L) THEN cast(TSMALLINT#705332 as bigint) ELSE TBIGINT#705334L END ELSE cast(TINTEGER#705333 as bigint) END >= cast(TSMALLINT#705332 as bigint)))) || (((((cast(hex(cast(TSMALLINT#705332 as bigint)) as int) > 2000) && (cast(hex(cast(TSMALLINT#705332 as bigint)) as int) < 2500)) && ((HYPOT(cast(TSMALLINT#705332 as double), cast(TSMALLINT#705332 as double)) >= cast(12000 as double)) && (HYPOT(cast(TSMALLINT#705332 as double), cast(TSMALLINT#705332 as double)) <= cast(13000 as double)))) && isnotnull(isnotnull(TSMALLINT#705332))) && (TSMALLINT#705332 <= TSMALLINT#705332))) || ((((LOG(cast(TSMALLINT#705332 as double)) >= cast(5 as double)) && (LOG(cast(TSMALLINT#705332 as double)) <= cast(6 as double))) && ((LOG10(cast(TSMALLINT#705332 as double)) >= cast(2 as double)) && (LOG10(cast(TSMALLINT#705332 as double)) <= cast(3 as double)))) && NOT ((LOG1P(cast(TSMALLINT#705332 as double)) >= cast(6 as double)) && (LOG1P(cast(TSMALLINT#705332 as double)) <= cast(8 as double))))) || (((LOG2(cast(TSMALLINT#705332 as double)) >= cast(13.2 as double)) && ((TINTEGER#705333 % cast(TSMALLINT#705332 as int)) < 50)) && (cast(-TSMALLINT#705332 as int) <= -9000))) || ((cast(CASE WHEN (cast(TSMALLINT#705332 as int) = TINTEGER#705333) THEN null ELSE TSMALLINT#705332 END as int) <= 100) && (pmod(TINTEGER#705333, cast(TSMALLINT#705332 as int)) <= 200))) && ((((cast(TSMALLINT#705332 as int) > 400) && (cast(TSMALLINT#705332 as int) <= 3000)) || ((cast(TSMALLINT#705332 as int) >= 5000) && (cast(TSMALLINT#705332 as int) <= 5500))) || ((cast(TSMALLINT#705332 as int) >= 8000) && (cast(TSMALLINT#705332 as int) <= 8500)))) && ((cast(add_months(TDATE#705340, 4) as timestamp) >= 915120000000000) && (cast(add_months(TDATE#705340, 4) as timestamp) <= 1609257600000000))) && ((date_add(TDATE#705340, 20) >= 7305) && (date_add(TDATE#705340, 20) <= 10955))) || ((((((cast(named_struct(col_0, date_format(cast(TDATE#705340 as timestamp), yyyy, Some(Asia/Shanghai))) as struct<col_0:string>) IN (cast(named_struct(col_0, 2000) as struct<col_0:string>),cast(named_struct(col_0, 2003) as struct<col_0:string>),cast(named_struct(col_0, 2047) as struct<col_0:string>),cast(named_struct(col_0, 2032) as struct<col_0:string>),cast(named_struct(col_0, 2033) as struct<col_0:string>),cast(named_struct(col_0, 2048) as struct<col_0:string>)) && NOT ((date_sub(TDATE#705340, 13) >= 9494) && (date_sub(TDATE#705340, 13) <= 25567))) && (datediff(date_add(TDATE#705340, 12), date_sub(TDATE#705340, 6)) >= 18)) && ((dayofmonth(TDATE#705340) >= 10) && (dayofmonth(TDATE#705340) <= 25))) && ((dayofmonth(TDATE#705340) >= 10) && (dayofmonth(TDATE#705340) <= 15))) && NOT ((dayofyear(TDATE#705340) >= 50) && (dayofyear(TDATE#705340) <= 300))) && ((cast(next_day(TDATE#705340, TU) as timestamp) >= 1577808000000000) && (cast(next_day(TDATE#705340, TU) as timestamp) <= 2240409600000000)))) || (((cast(named_struct(col_0, last_day(TDATE#705340)) as struct<col_0:date>) IN (cast(named_struct(col_0, 13452) as struct<col_0:date>),cast(named_struct(col_0, 6939) as struct<col_0:date>),cast(named_struct(col_0, 11261) as struct<col_0:date>),cast(named_struct(col_0, 12295) as struct<col_0:date>),cast(named_struct(col_0, 19477) as struct<col_0:date>),cast(named_struct(col_0, 4249) as struct<col_0:date>)) && (months_between(cast(TDATE#705340 as timestamp), cast(add_months(TDATE#705340, 18) as timestamp), true, Some(Asia/Shanghai)) = cast(-18 as double))) && ((cast(cast(unix_timestamp(TDATE#705340, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) >= 10592) && (cast(cast(unix_timestamp(TDATE#705340, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) <= 13147))) && (trunc(TDATE#705340, YEAR) >= 12053))) || (((((((to_unix_timestamp(TDATE#705340, yyyy-MM-dd HH:mm:ss, Some(Asia/Shanghai)) >= cast(1911111111 as bigint)) && ((weekofyear(TDATE#705340) >= 20) && (weekofyear(TDATE#705340) <= 30))) && NOT cast(named_struct(col_0, year(TDATE#705340)) as struct<col_0:int>) IN (cast(named_struct(col_0, 2047) as struct<col_0:int>),cast(named_struct(col_0, 2033) as struct<col_0:int>),cast(named_struct(col_0, 2008) as struct<col_0:int>),cast(named_struct(col_0, 2010) as struct<col_0:int>),cast(named_struct(col_0, 2023) as struct<col_0:int>))) && (((TDATE#705340 >= 10592) && (TDATE#705340 <= 13147)) || (TDATE#705340 >= 22278))) && (length(TCHAR#705343) = 50)) && trim(TCHAR#705343, Some( )) LIKE %J) && trim(TCHAR#705343, Some(D)) LIKE %M%)) || (((((NOT rtrim(TCHAR#705343, Some(g)) LIKE N% && NOT rtrim(TCHAR#705343, Some(g)) LIKE %A%) && substring(TCHAR#705343, 13, 40) LIKE _z%) && lpad(TCHAR#705343, 55, TVARCHAR#705344) LIKE %O) && (length(md5(cast(TCHAR#705343 as binary))) >= 30)) && format_string(concat(TCHAR#705343, %d %s), 3232, TVARCHAR#705344) LIKE %323%)) || (((replace(TCHAR#705343, i, LDB) LIKE %LDB% && (length(reverse(TCHAR#705343)) = length(TCHAR#705343))) && trim(right(TCHAR#705343, 4), Some( )) LIKE %A) && (((TCHAR#705343 >= ) && TCHAR#705343 LIKE _P%) || (((TCHAR#705343 >= ) && TCHAR#705343 LIKE %V%) && ((TCHAR#705343 >= ) && TCHAR#705343 LIKE _A_))))) || ((TINTEGER#705333 IN (list#705604 []) && TBIGINT#705334L IN (list#705605 [])) && TREAL#705335 IN (list#705606 []))) || (((TDOUBLE#705336 IN (list#705607 []) && TFLOAT#705337 IN (list#705608 [])) && (TDECIMAL#705338 IN (list#705609 []) && TNUMERIC#705339 IN (list#705610 []))) && TDATE#705340 IN (list#705611 []))) || (((TTIMESTAMP#705341 IN (list#705612 []) && TBOOL#705342 IN (list#705613 [])) && TCHAR#705343 IN (list#705614 [])) && TVARCHAR#705344 IN (list#705615 [])))
                        :  :- Project [TINTEGER#705354]
                        :  :  +- Filter ((TINTEGER#705354 >= 503040) || (TINTEGER#705354 <= 1223))
                        :  :     +- Project [TUNIQUE#727082L AS TUNIQUE#705352L, TSMALLINT#727083 AS TSMALLINT#705353, TINTEGER#727084 AS TINTEGER#705354, TBIGINT#727085L AS TBIGINT#705355L, TREAL#727086 AS TREAL#705356, TDOUBLE#727087 AS TDOUBLE#705357, TFLOAT#727088 AS TFLOAT#705358, TDECIMAL#727089 AS TDECIMAL#705359, TNUMERIC#727090 AS TNUMERIC#705360, TDATE#727091 AS TDATE#705361, TTIMESTAMP#727092 AS TTIMESTAMP#705362, TBOOL#727093 AS TBOOL#705363, TCHAR#727094 AS TCHAR#705364, TVARCHAR#727095 AS TVARCHAR#705365, TCHARIDX1#727096 AS TCHARIDX1#705366, TCHARIDX2#727097 AS TCHARIDX2#705367, TCHARIDX3#727098 AS TCHARIDX3#705368, TVARCHARIDX1#727099 AS TVARCHARIDX1#705369, TVARCHARIDX2#727100 AS TVARCHARIDX2#705370, TVARCHARIDX3#727101 AS TVARCHARIDX3#705371, _LDBID_#727102 AS _LDBID_#705372]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727082L, TSMALLINT#727083, TINTEGER#727084, TBIGINT#727085L, TREAL#727086, TDOUBLE#727087, TFLOAT#727088, TDECIMAL#727089, TNUMERIC#727090, TDATE#727091, TTIMESTAMP#727092, TBOOL#727093, TCHAR#727094, TVARCHAR#727095, TCHARIDX1#727096, TCHARIDX2#727097, TCHARIDX3#727098, TVARCHARIDX1#727099, TVARCHARIDX2#727100, TVARCHARIDX3#727101, _LDBID_#727102] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TBIGINT#705376L]
                        :  :  +- Filter ((TBIGINT#705376L >= 234567802455) && (TBIGINT#705376L <= 908667115321))
                        :  :     +- Project [TUNIQUE#727124L AS TUNIQUE#705373L, TSMALLINT#727125 AS TSMALLINT#705374, TINTEGER#727126 AS TINTEGER#705375, TBIGINT#727127L AS TBIGINT#705376L, TREAL#727128 AS TREAL#705377, TDOUBLE#727129 AS TDOUBLE#705378, TFLOAT#727130 AS TFLOAT#705379, TDECIMAL#727131 AS TDECIMAL#705380, TNUMERIC#727132 AS TNUMERIC#705381, TDATE#727133 AS TDATE#705382, TTIMESTAMP#727134 AS TTIMESTAMP#705383, TBOOL#727135 AS TBOOL#705384, TCHAR#727136 AS TCHAR#705385, TVARCHAR#727137 AS TVARCHAR#705386, TCHARIDX1#727138 AS TCHARIDX1#705387, TCHARIDX2#727139 AS TCHARIDX2#705388, TCHARIDX3#727140 AS TCHARIDX3#705389, TVARCHARIDX1#727141 AS TVARCHARIDX1#705390, TVARCHARIDX2#727142 AS TVARCHARIDX2#705391, TVARCHARIDX3#727143 AS TVARCHARIDX3#705392, _LDBID_#727144 AS _LDBID_#705393]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727124L, TSMALLINT#727125, TINTEGER#727126, TBIGINT#727127L, TREAL#727128, TDOUBLE#727129, TFLOAT#727130, TDECIMAL#727131, TNUMERIC#727132, TDATE#727133, TTIMESTAMP#727134, TBOOL#727135, TCHAR#727136, TVARCHAR#727137, TCHARIDX1#727138, TCHARIDX2#727139, TCHARIDX3#727140, TVARCHARIDX1#727141, TVARCHARIDX2#727142, TVARCHARIDX3#727143, _LDBID_#727144] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TREAL#705398]
                        :  :  +- Filter NOT cast(TREAL#705398 as double) IN (cast(155656.656 as double),cast(274367.736 as double))
                        :  :     +- Project [TUNIQUE#727166L AS TUNIQUE#705394L, TSMALLINT#727167 AS TSMALLINT#705395, TINTEGER#727168 AS TINTEGER#705396, TBIGINT#727169L AS TBIGINT#705397L, TREAL#727170 AS TREAL#705398, TDOUBLE#727171 AS TDOUBLE#705399, TFLOAT#727172 AS TFLOAT#705400, TDECIMAL#727173 AS TDECIMAL#705401, TNUMERIC#727174 AS TNUMERIC#705402, TDATE#727175 AS TDATE#705403, TTIMESTAMP#727176 AS TTIMESTAMP#705404, TBOOL#727177 AS TBOOL#705405, TCHAR#727178 AS TCHAR#705406, TVARCHAR#727179 AS TVARCHAR#705407, TCHARIDX1#727180 AS TCHARIDX1#705408, TCHARIDX2#727181 AS TCHARIDX2#705409, TCHARIDX3#727182 AS TCHARIDX3#705410, TVARCHARIDX1#727183 AS TVARCHARIDX1#705411, TVARCHARIDX2#727184 AS TVARCHARIDX2#705412, TVARCHARIDX3#727185 AS TVARCHARIDX3#705413, _LDBID_#727186 AS _LDBID_#705414]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727166L, TSMALLINT#727167, TINTEGER#727168, TBIGINT#727169L, TREAL#727170, TDOUBLE#727171, TFLOAT#727172, TDECIMAL#727173, TNUMERIC#727174, TDATE#727175, TTIMESTAMP#727176, TBOOL#727177, TCHAR#727178, TVARCHAR#727179, TCHARIDX1#727180, TCHARIDX2#727181, TCHARIDX3#727182, TVARCHARIDX1#727183, TVARCHARIDX2#727184, TVARCHARIDX3#727185, _LDBID_#727186] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TDOUBLE#705420]
                        :  :  +- Filter ((TDOUBLE#705420 <= cast(9852 as double)) && (TDOUBLE#705420 >= cast(5236.45 as double)))
                        :  :     +- Project [TUNIQUE#727208L AS TUNIQUE#705415L, TSMALLINT#727209 AS TSMALLINT#705416, TINTEGER#727210 AS TINTEGER#705417, TBIGINT#727211L AS TBIGINT#705418L, TREAL#727212 AS TREAL#705419, TDOUBLE#727213 AS TDOUBLE#705420, TFLOAT#727214 AS TFLOAT#705421, TDECIMAL#727215 AS TDECIMAL#705422, TNUMERIC#727216 AS TNUMERIC#705423, TDATE#727217 AS TDATE#705424, TTIMESTAMP#727218 AS TTIMESTAMP#705425, TBOOL#727219 AS TBOOL#705426, TCHAR#727220 AS TCHAR#705427, TVARCHAR#727221 AS TVARCHAR#705428, TCHARIDX1#727222 AS TCHARIDX1#705429, TCHARIDX2#727223 AS TCHARIDX2#705430, TCHARIDX3#727224 AS TCHARIDX3#705431, TVARCHARIDX1#727225 AS TVARCHARIDX1#705432, TVARCHARIDX2#727226 AS TVARCHARIDX2#705433, TVARCHARIDX3#727227 AS TVARCHARIDX3#705434, _LDBID_#727228 AS _LDBID_#705435]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727208L, TSMALLINT#727209, TINTEGER#727210, TBIGINT#727211L, TREAL#727212, TDOUBLE#727213, TFLOAT#727214, TDECIMAL#727215, TNUMERIC#727216, TDATE#727217, TTIMESTAMP#727218, TBOOL#727219, TCHAR#727220, TVARCHAR#727221, TCHARIDX1#727222, TCHARIDX2#727223, TCHARIDX3#727224, TVARCHARIDX1#727225, TVARCHARIDX2#727226, TVARCHARIDX3#727227, _LDBID_#727228] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TFLOAT#705442]
                        :  :  +- Filter (isnotnull(TFLOAT#705442) && ((TFLOAT#705442 >= cast(1092 as float)) && (TFLOAT#705442 <= cast(3284 as float))))
                        :  :     +- Project [TUNIQUE#727250L AS TUNIQUE#705436L, TSMALLINT#727251 AS TSMALLINT#705437, TINTEGER#727252 AS TINTEGER#705438, TBIGINT#727253L AS TBIGINT#705439L, TREAL#727254 AS TREAL#705440, TDOUBLE#727255 AS TDOUBLE#705441, TFLOAT#727256 AS TFLOAT#705442, TDECIMAL#727257 AS TDECIMAL#705443, TNUMERIC#727258 AS TNUMERIC#705444, TDATE#727259 AS TDATE#705445, TTIMESTAMP#727260 AS TTIMESTAMP#705446, TBOOL#727261 AS TBOOL#705447, TCHAR#727262 AS TCHAR#705448, TVARCHAR#727263 AS TVARCHAR#705449, TCHARIDX1#727264 AS TCHARIDX1#705450, TCHARIDX2#727265 AS TCHARIDX2#705451, TCHARIDX3#727266 AS TCHARIDX3#705452, TVARCHARIDX1#727267 AS TVARCHARIDX1#705453, TVARCHARIDX2#727268 AS TVARCHARIDX2#705454, TVARCHARIDX3#727269 AS TVARCHARIDX3#705455, _LDBID_#727270 AS _LDBID_#705456]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727250L, TSMALLINT#727251, TINTEGER#727252, TBIGINT#727253L, TREAL#727254, TDOUBLE#727255, TFLOAT#727256, TDECIMAL#727257, TNUMERIC#727258, TDATE#727259, TTIMESTAMP#727260, TBOOL#727261, TCHAR#727262, TVARCHAR#727263, TCHARIDX1#727264, TCHARIDX2#727265, TCHARIDX3#727266, TVARCHARIDX1#727267, TVARCHARIDX2#727268, TVARCHARIDX3#727269, _LDBID_#727270] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TDECIMAL#705464]
                        :  :  +- Filter (isnull(TDECIMAL#705464) || (cast(TDECIMAL#705464 as decimal(10,2)) >= cast(8378.5 as decimal(10,2))))
                        :  :     +- Project [TUNIQUE#727292L AS TUNIQUE#705457L, TSMALLINT#727293 AS TSMALLINT#705458, TINTEGER#727294 AS TINTEGER#705459, TBIGINT#727295L AS TBIGINT#705460L, TREAL#727296 AS TREAL#705461, TDOUBLE#727297 AS TDOUBLE#705462, TFLOAT#727298 AS TFLOAT#705463, TDECIMAL#727299 AS TDECIMAL#705464, TNUMERIC#727300 AS TNUMERIC#705465, TDATE#727301 AS TDATE#705466, TTIMESTAMP#727302 AS TTIMESTAMP#705467, TBOOL#727303 AS TBOOL#705468, TCHAR#727304 AS TCHAR#705469, TVARCHAR#727305 AS TVARCHAR#705470, TCHARIDX1#727306 AS TCHARIDX1#705471, TCHARIDX2#727307 AS TCHARIDX2#705472, TCHARIDX3#727308 AS TCHARIDX3#705473, TVARCHARIDX1#727309 AS TVARCHARIDX1#705474, TVARCHARIDX2#727310 AS TVARCHARIDX2#705475, TVARCHARIDX3#727311 AS TVARCHARIDX3#705476, _LDBID_#727312 AS _LDBID_#705477]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727292L, TSMALLINT#727293, TINTEGER#727294, TBIGINT#727295L, TREAL#727296, TDOUBLE#727297, TFLOAT#727298, TDECIMAL#727299, TNUMERIC#727300, TDATE#727301, TTIMESTAMP#727302, TBOOL#727303, TCHAR#727304, TVARCHAR#727305, TCHARIDX1#727306, TCHARIDX2#727307, TCHARIDX3#727308, TVARCHARIDX1#727309, TVARCHARIDX2#727310, TVARCHARIDX3#727311, _LDBID_#727312] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TNUMERIC#705486]
                        :  :  +- Filter (((NOT (cast(TNUMERIC#705486 as decimal(10,4)) = cast(8674.5869 as decimal(10,4))) && NOT (cast(TNUMERIC#705486 as decimal(10,4)) = cast(9135.7007 as decimal(10,4)))) && NOT (cast(TNUMERIC#705486 as decimal(10,4)) = cast(2827.9165 as decimal(10,4)))) && NOT (cast(TNUMERIC#705486 as decimal(10,4)) = cast(4731.5215 as decimal(10,4))))
                        :  :     +- Project [TUNIQUE#727334L AS TUNIQUE#705478L, TSMALLINT#727335 AS TSMALLINT#705479, TINTEGER#727336 AS TINTEGER#705480, TBIGINT#727337L AS TBIGINT#705481L, TREAL#727338 AS TREAL#705482, TDOUBLE#727339 AS TDOUBLE#705483, TFLOAT#727340 AS TFLOAT#705484, TDECIMAL#727341 AS TDECIMAL#705485, TNUMERIC#727342 AS TNUMERIC#705486, TDATE#727343 AS TDATE#705487, TTIMESTAMP#727344 AS TTIMESTAMP#705488, TBOOL#727345 AS TBOOL#705489, TCHAR#727346 AS TCHAR#705490, TVARCHAR#727347 AS TVARCHAR#705491, TCHARIDX1#727348 AS TCHARIDX1#705492, TCHARIDX2#727349 AS TCHARIDX2#705493, TCHARIDX3#727350 AS TCHARIDX3#705494, TVARCHARIDX1#727351 AS TVARCHARIDX1#705495, TVARCHARIDX2#727352 AS TVARCHARIDX2#705496, TVARCHARIDX3#727353 AS TVARCHARIDX3#705497, _LDBID_#727354 AS _LDBID_#705498]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727334L, TSMALLINT#727335, TINTEGER#727336, TBIGINT#727337L, TREAL#727338, TDOUBLE#727339, TFLOAT#727340, TDECIMAL#727341, TNUMERIC#727342, TDATE#727343, TTIMESTAMP#727344, TBOOL#727345, TCHAR#727346, TVARCHAR#727347, TCHARIDX1#727348, TCHARIDX2#727349, TCHARIDX3#727350, TVARCHARIDX1#727351, TVARCHARIDX2#727352, TVARCHARIDX3#727353, _LDBID_#727354] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TDATE#705508]
                        :  :  +- Filter TDATE#705508 IN (7305,13147)
                        :  :     +- Project [TUNIQUE#727376L AS TUNIQUE#705499L, TSMALLINT#727377 AS TSMALLINT#705500, TINTEGER#727378 AS TINTEGER#705501, TBIGINT#727379L AS TBIGINT#705502L, TREAL#727380 AS TREAL#705503, TDOUBLE#727381 AS TDOUBLE#705504, TFLOAT#727382 AS TFLOAT#705505, TDECIMAL#727383 AS TDECIMAL#705506, TNUMERIC#727384 AS TNUMERIC#705507, TDATE#727385 AS TDATE#705508, TTIMESTAMP#727386 AS TTIMESTAMP#705509, TBOOL#727387 AS TBOOL#705510, TCHAR#727388 AS TCHAR#705511, TVARCHAR#727389 AS TVARCHAR#705512, TCHARIDX1#727390 AS TCHARIDX1#705513, TCHARIDX2#727391 AS TCHARIDX2#705514, TCHARIDX3#727392 AS TCHARIDX3#705515, TVARCHARIDX1#727393 AS TVARCHARIDX1#705516, TVARCHARIDX2#727394 AS TVARCHARIDX2#705517, TVARCHARIDX3#727395 AS TVARCHARIDX3#705518, _LDBID_#727396 AS _LDBID_#705519]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727376L, TSMALLINT#727377, TINTEGER#727378, TBIGINT#727379L, TREAL#727380, TDOUBLE#727381, TFLOAT#727382, TDECIMAL#727383, TNUMERIC#727384, TDATE#727385, TTIMESTAMP#727386, TBOOL#727387, TCHAR#727388, TVARCHAR#727389, TCHARIDX1#727390, TCHARIDX2#727391, TCHARIDX3#727392, TVARCHARIDX1#727393, TVARCHARIDX2#727394, TVARCHARIDX3#727395, _LDBID_#727396] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TTIMESTAMP#705530]
                        :  :  +- Filter NOT TTIMESTAMP#705530 IN (986270400000000,1041221532000000)
                        :  :     +- Project [TUNIQUE#727418L AS TUNIQUE#705520L, TSMALLINT#727419 AS TSMALLINT#705521, TINTEGER#727420 AS TINTEGER#705522, TBIGINT#727421L AS TBIGINT#705523L, TREAL#727422 AS TREAL#705524, TDOUBLE#727423 AS TDOUBLE#705525, TFLOAT#727424 AS TFLOAT#705526, TDECIMAL#727425 AS TDECIMAL#705527, TNUMERIC#727426 AS TNUMERIC#705528, TDATE#727427 AS TDATE#705529, TTIMESTAMP#727428 AS TTIMESTAMP#705530, TBOOL#727429 AS TBOOL#705531, TCHAR#727430 AS TCHAR#705532, TVARCHAR#727431 AS TVARCHAR#705533, TCHARIDX1#727432 AS TCHARIDX1#705534, TCHARIDX2#727433 AS TCHARIDX2#705535, TCHARIDX3#727434 AS TCHARIDX3#705536, TVARCHARIDX1#727435 AS TVARCHARIDX1#705537, TVARCHARIDX2#727436 AS TVARCHARIDX2#705538, TVARCHARIDX3#727437 AS TVARCHARIDX3#705539, _LDBID_#727438 AS _LDBID_#705540]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727418L, TSMALLINT#727419, TINTEGER#727420, TBIGINT#727421L, TREAL#727422, TDOUBLE#727423, TFLOAT#727424, TDECIMAL#727425, TNUMERIC#727426, TDATE#727427, TTIMESTAMP#727428, TBOOL#727429, TCHAR#727430, TVARCHAR#727431, TCHARIDX1#727432, TCHARIDX2#727433, TCHARIDX3#727434, TVARCHARIDX1#727435, TVARCHARIDX2#727436, TVARCHARIDX3#727437, _LDBID_#727438] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TBOOL#705552]
                        :  :  +- Filter (TBOOL#705552 = true)
                        :  :     +- Project [TUNIQUE#727460L AS TUNIQUE#705541L, TSMALLINT#727461 AS TSMALLINT#705542, TINTEGER#727462 AS TINTEGER#705543, TBIGINT#727463L AS TBIGINT#705544L, TREAL#727464 AS TREAL#705545, TDOUBLE#727465 AS TDOUBLE#705546, TFLOAT#727466 AS TFLOAT#705547, TDECIMAL#727467 AS TDECIMAL#705548, TNUMERIC#727468 AS TNUMERIC#705549, TDATE#727469 AS TDATE#705550, TTIMESTAMP#727470 AS TTIMESTAMP#705551, TBOOL#727471 AS TBOOL#705552, TCHAR#727472 AS TCHAR#705553, TVARCHAR#727473 AS TVARCHAR#705554, TCHARIDX1#727474 AS TCHARIDX1#705555, TCHARIDX2#727475 AS TCHARIDX2#705556, TCHARIDX3#727476 AS TCHARIDX3#705557, TVARCHARIDX1#727477 AS TVARCHARIDX1#705558, TVARCHARIDX2#727478 AS TVARCHARIDX2#705559, TVARCHARIDX3#727479 AS TVARCHARIDX3#705560, _LDBID_#727480 AS _LDBID_#705561]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727460L, TSMALLINT#727461, TINTEGER#727462, TBIGINT#727463L, TREAL#727464, TDOUBLE#727465, TFLOAT#727466, TDECIMAL#727467, TNUMERIC#727468, TDATE#727469, TTIMESTAMP#727470, TBOOL#727471, TCHAR#727472, TVARCHAR#727473, TCHARIDX1#727474, TCHARIDX2#727475, TCHARIDX3#727476, TVARCHARIDX1#727477, TVARCHARIDX2#727478, TVARCHARIDX3#727479, _LDBID_#727480] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  :- Project [TCHAR#705574]
                        :  :  +- Filter ((((TCHAR#705574 >= ) && TCHAR#705574 LIKE %a%) || ((TCHAR#705574 >= q) && TCHAR#705574 LIKE q%)) || ((TCHAR#705574 >= ) && TCHAR#705574 LIKE %z))
                        :  :     +- Project [TUNIQUE#727502L AS TUNIQUE#705562L, TSMALLINT#727503 AS TSMALLINT#705563, TINTEGER#727504 AS TINTEGER#705564, TBIGINT#727505L AS TBIGINT#705565L, TREAL#727506 AS TREAL#705566, TDOUBLE#727507 AS TDOUBLE#705567, TFLOAT#727508 AS TFLOAT#705568, TDECIMAL#727509 AS TDECIMAL#705569, TNUMERIC#727510 AS TNUMERIC#705570, TDATE#727511 AS TDATE#705571, TTIMESTAMP#727512 AS TTIMESTAMP#705572, TBOOL#727513 AS TBOOL#705573, TCHAR#727514 AS TCHAR#705574, TVARCHAR#727515 AS TVARCHAR#705575, TCHARIDX1#727516 AS TCHARIDX1#705576, TCHARIDX2#727517 AS TCHARIDX2#705577, TCHARIDX3#727518 AS TCHARIDX3#705578, TVARCHARIDX1#727519 AS TVARCHARIDX1#705579, TVARCHARIDX2#727520 AS TVARCHARIDX2#705580, TVARCHARIDX3#727521 AS TVARCHARIDX3#705581, _LDBID_#727522 AS _LDBID_#705582]
                        :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#727502L, TSMALLINT#727503, TINTEGER#727504, TBIGINT#727505L, TREAL#727506, TDOUBLE#727507, TFLOAT#727508, TDECIMAL#727509, TNUMERIC#727510, TDATE#727511, TTIMESTAMP#727512, TBOOL#727513, TCHAR#727514, TVARCHAR#727515, TCHARIDX1#727516, TCHARIDX2#727517, TCHARIDX3#727518, TVARCHARIDX1#727519, TVARCHARIDX2#727520, TVARCHARIDX3#727521, _LDBID_#727522] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        :  +- Project [TVARCHAR#705596]
                        :     +- Filter (((TVARCHAR#705596 >= ) && TVARCHAR#705596 LIKE _c_) || NOT ((TVARCHAR#705596 >= ) && TVARCHAR#705596 LIKE %d_))
                        :        +- Project [TUNIQUE#727544L AS TUNIQUE#705583L, TSMALLINT#727545 AS TSMALLINT#705584, TINTEGER#727546 AS TINTEGER#705585, TBIGINT#727547L AS TBIGINT#705586L, TREAL#727548 AS TREAL#705587, TDOUBLE#727549 AS TDOUBLE#705588, TFLOAT#727550 AS TFLOAT#705589, TDECIMAL#727551 AS TDECIMAL#705590, TNUMERIC#727552 AS TNUMERIC#705591, TDATE#727553 AS TDATE#705592, TTIMESTAMP#727554 AS TTIMESTAMP#705593, TBOOL#727555 AS TBOOL#705594, TCHAR#727556 AS TCHAR#705595, TVARCHAR#727557 AS TVARCHAR#705596, TCHARIDX1#727558 AS TCHARIDX1#705597, TCHARIDX2#727559 AS TCHARIDX2#705598, TCHARIDX3#727560 AS TCHARIDX3#705599, TVARCHARIDX1#727561 AS TVARCHARIDX1#705600, TVARCHARIDX2#727562 AS TVARCHARIDX2#705601, TVARCHARIDX3#727563 AS TVARCHARIDX3#705602, _LDBID_#727564 AS _LDBID_#705603]
                        :           +- RelationV2 PallasDataSourceEntance[TUNIQUE#727544L, TSMALLINT#727545, TINTEGER#727546, TBIGINT#727547L, TREAL#727548, TDOUBLE#727549, TFLOAT#727550, TDECIMAL#727551, TNUMERIC#727552, TDATE#727553, TTIMESTAMP#727554, TBOOL#727555, TCHAR#727556, TVARCHAR#727557, TCHARIDX1#727558, TCHARIDX2#727559, TCHARIDX3#727560, TVARCHARIDX1#727561, TVARCHARIDX2#727562, TVARCHARIDX3#727563, _LDBID_#727564] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                        +- Project [TUNIQUE#727040L AS TUNIQUE#705331L, TSMALLINT#727041 AS TSMALLINT#705332, TINTEGER#727042 AS TINTEGER#705333, TBIGINT#727043L AS TBIGINT#705334L, TREAL#727044 AS TREAL#705335, TDOUBLE#727045 AS TDOUBLE#705336, TFLOAT#727046 AS TFLOAT#705337, TDECIMAL#727047 AS TDECIMAL#705338, TNUMERIC#727048 AS TNUMERIC#705339, TDATE#727049 AS TDATE#705340, TTIMESTAMP#727050 AS TTIMESTAMP#705341, TBOOL#727051 AS TBOOL#705342, TCHAR#727052 AS TCHAR#705343, TVARCHAR#727053 AS TVARCHAR#705344, TCHARIDX1#727054 AS TCHARIDX1#705345, TCHARIDX2#727055 AS TCHARIDX2#705346, TCHARIDX3#727056 AS TCHARIDX3#705347, TVARCHARIDX1#727057 AS TVARCHARIDX1#705348, TVARCHARIDX2#727058 AS TVARCHARIDX2#705349, TVARCHARIDX3#727059 AS TVARCHARIDX3#705350, _LDBID_#727060 AS _LDBID_#705351]
                           +- RelationV2 PallasDataSourceEntance[TUNIQUE#727040L, TSMALLINT#727041, TINTEGER#727042, TBIGINT#727043L, TREAL#727044, TDOUBLE#727045, TFLOAT#727046, TDECIMAL#727047, TNUMERIC#727048, TDATE#727049, TTIMESTAMP#727050, TBOOL#727051, TCHAR#727052, TVARCHAR#727053, TCHARIDX1#727054, TCHARIDX2#727055, TCHARIDX3#727056, TVARCHARIDX1#727057, TVARCHARIDX2#727058, TVARCHARIDX3#727059, _LDBID_#727060] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])

SQL>        
SQL> --HAVING 条件穷举，涉及到的聚合函数有SUM，AVG，MAX，MIN，APPROX_COUNT_DISTINCT，APPROX_PERCENTILE，COVAR_POP，COVAR_SAMP，PERCENTILE_APPROX
   > 
   > ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，sum函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (SUM(TSMALLINT) BETWEEN 7000 AND 8000)
   >        AND (SUM(TINTEGER) BETWEEN 23688297 AND 73245628)
   >        OR (SUM(TBIGINT) BETWEEN 200000000000 AND 780000000000)
   >        OR (SUM(TREAL) BETWEEN 4000 AND 6000)
   >        OR (SUM(TDOUBLE) BETWEEN 6589 AND 9826)
   >        OR (SUM(TFLOAT) BETWEEN 2973 AND 6734)
   >        OR (SUM(TDECIMAL) BETWEEN 1873 AND 2673)
   >        OR (SUM(TNUMERIC) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10;
10 rows selected.
SQL>               
SQL> ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，avg函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (AVG(TSMALLINT) BETWEEN 7000 AND 8000)
   >        AND (AVG(TINTEGER) BETWEEN 23688297 AND 73245628)
   >        OR (AVG(TBIGINT) BETWEEN 200000000000 AND 780000000000)
   >        OR (AVG(TREAL) BETWEEN 4000 AND 6000)
   >        OR (AVG(TDOUBLE) BETWEEN 6589 AND 9826)
   >        OR (AVG(TFLOAT) BETWEEN 2973 AND 6734)
   >        OR (AVG(TDECIMAL) BETWEEN 1873 AND 2673)
   >        OR (AVG(TNUMERIC) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10;       
10 rows selected.
SQL>        
SQL> ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，max函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (MAX(TSMALLINT) BETWEEN 7000 AND 8000)
   >        AND (MAX(TINTEGER) BETWEEN 23688297 AND 73245628)
   >        OR (MAX(TBIGINT) BETWEEN 200000000000 AND 780000000000)
   >        OR (MAX(TREAL) BETWEEN 4000 AND 6000)
   >        OR (MAX(TDOUBLE) BETWEEN 6589 AND 9826)
   >        OR (MAX(TFLOAT) BETWEEN 2973 AND 6734)
   >        OR (MAX(TDECIMAL) BETWEEN 1873 AND 2673)
   >        OR (MAX(TNUMERIC) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10;   
10 rows selected.
SQL>        
SQL> 
SQL>               
SQL> --函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，min函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (MIN(TSMALLINT) BETWEEN 7000 AND 8000)
   >        AND (MIN(TINTEGER) BETWEEN 23688297 AND 73245628)
   >        OR (MIN(TBIGINT) BETWEEN 200000000000 AND 780000000000)
   >        OR (MIN(TREAL) BETWEEN 4000 AND 6000)
   >        OR (MIN(TDOUBLE) BETWEEN 6589 AND 9826)
   >        OR (MIN(TFLOAT) BETWEEN 2973 AND 6734)
   >        OR (MIN(TDECIMAL) BETWEEN 1873 AND 2673)
   >        OR (MIN(TNUMERIC) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10;     
10 rows selected.
SQL>        
SQL> ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，approx_count_distinct函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (APPROX_COUNT_DISTINCT(TSMALLINT) = 1)
   >        AND (APPROX_COUNT_DISTINCT(TINTEGER) = 1 )
   >        OR (APPROX_COUNT_DISTINCT(TBIGINT) BETWEEN 200000000000 AND 780000000000)
   >        OR (APPROX_COUNT_DISTINCT(TREAL) BETWEEN 4000 AND 6000)
   >        OR (APPROX_COUNT_DISTINCT(TDOUBLE) BETWEEN 6589 AND 9826)
   >        OR (APPROX_COUNT_DISTINCT(TFLOAT) BETWEEN 2973 AND 6734)
   >        OR (APPROX_COUNT_DISTINCT(TDECIMAL) BETWEEN 1873 AND 2673)
   >        OR (APPROX_COUNT_DISTINCT(TNUMERIC) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10; 
java.sql.SQLException: Worker execution: ldb worker caused error
SQL>        
SQL> ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，approx_percentile函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (APPROX_PERCENTILE(TSMALLINT,0.5,100) BETWEEN 7000 AND 8000)
   >        AND (APPROX_PERCENTILE(TINTEGER,0.5,100) BETWEEN 23688297 AND 73245628)
   >        OR (APPROX_PERCENTILE(TBIGINT,0.5,100) BETWEEN 200000000000 AND 780000000000)
   >        OR (APPROX_PERCENTILE(TREAL,0.5,100) BETWEEN 4000 AND 6000)
   >        OR (APPROX_PERCENTILE(TDOUBLE,0.5,100) BETWEEN 6589 AND 9826)
   >        OR (APPROX_PERCENTILE(TFLOAT,0.5,100) BETWEEN 2973 AND 6734)
   >        OR (APPROX_PERCENTILE(TDECIMAL,0.5,100) BETWEEN 1873 AND 2673)
   >        OR (APPROX_PERCENTILE(TNUMERIC,0.5,100) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10;        
10 rows selected.
SQL>        
SQL> ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，covar_samp函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (COVAR_SAMP(TSMALLINT,TINTEGER) = 0)
   >        OR (COVAR_SAMP(TINTEGER,TINTEGER) <> 0)
   >        OR (COVAR_SAMP(TBIGINT,TINTEGER) BETWEEN 200000000000 AND 780000000000)
   >        OR (COVAR_SAMP(TREAL,TINTEGER) BETWEEN 4000 AND 6000)
   >        OR (COVAR_SAMP(TDOUBLE,TINTEGER) BETWEEN 6589 AND 9826)
   >        OR (COVAR_SAMP(TFLOAT,TINTEGER) BETWEEN 2973 AND 6734)
   >        OR (COVAR_SAMP(TDECIMAL,TINTEGER) BETWEEN 1873 AND 2673)
   >        OR (COVAR_SAMP(TNUMERIC,TINTEGER) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10;
java.sql.SQLException: Worker execution: ldb worker caused error
SQL>               
SQL> ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，covar_pop函数作为having条件  
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >        (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >        GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >        HAVING (COVAR_POP(TSMALLINT,TINTEGER) BETWEEN 7000 AND 8000)
   >        OR (COVAR_POP(TINTEGER,TINTEGER) BETWEEN 23688297 AND 73245628)
   >        OR (COVAR_POP(TBIGINT,TINTEGER) BETWEEN 200000000000 AND 780000000000)
   >        OR (COVAR_POP(TREAL,TINTEGER) BETWEEN 4000 AND 6000)
   >        OR (COVAR_POP(TDOUBLE,TINTEGER) BETWEEN 6589 AND 9826)
   >        OR (COVAR_POP(TFLOAT,TINTEGER) BETWEEN 2973 AND 6734)
   >        OR (COVAR_POP(TDECIMAL,TINTEGER) BETWEEN 1873 AND 2673)
   >        OR (COVAR_POP(TNUMERIC,TINTEGER) BETWEEN 7834 AND 7834)
   >        ORDER BY TUNIQUE
   >        LIMIT 10;   
java.sql.SQLException: Worker execution: ldb worker caused error
SQL>        
SQL>        
SQL> ----函数加数值型字段加子查询作为过滤条件，smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar,unique作为group by条件，percentile_approx函数作为having条件 
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >       TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >       PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >       DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >       TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >       COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >       PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >       PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX FROM P1000 AS a WHERE
   >       (BOOLEAN(TSMALLINT<TREAL)=true)
   >       AND (CBRT(TSMALLINT)>=8)
   >       AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >       AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >       AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >       AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >       AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >       AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >       AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >       AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >       OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >       OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >       AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >       AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >       OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >       AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >       AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   >       GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   >       HAVING (PERCENTILE_APPROX(TSMALLINT,0.5,100) != 0)
   >       OR (PERCENTILE_APPROX(TINTEGER,0.5,100) BETWEEN 23688297 AND 73245628)
   >       OR (PERCENTILE_APPROX(TBIGINT,0.5,100) BETWEEN 200000000000 AND 780000000000)
   >       OR (PERCENTILE_APPROX(TREAL,0.5,100) BETWEEN 4000 AND 6000)
   >       OR (PERCENTILE_APPROX(TDOUBLE,0.5,100) BETWEEN 6589 AND 9826)
   >       OR (PERCENTILE_APPROX(TFLOAT,0.5,100) BETWEEN 2973 AND 6734)
   >       OR (PERCENTILE_APPROX(TDECIMAL,0.5,100) BETWEEN 1873 AND 2673)
   >       OR (PERCENTILE_APPROX(TNUMERIC,0.5,100) BETWEEN 7834 AND 7834)
   >       ORDER BY TUNIQUE
   >       LIMIT 10;  
java.sql.SQLException: Worker execution: ldb worker caused error
SQL>        
SQL>        
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段,数值型函数，字符型函数，时间型函数作为过滤条件 
   > ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar作为group by条件
   > ----聚合函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX,RANK() OVER(PARTITION BY TSMALLINT ORDER BY TUNIQUE) AS TRANK FROM P1000 WHERE 
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500)
   > 	   AND  (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30'))
   > 	   AND (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_')
   >        AND (TSMALLINT IN (8638,9837,1224,8317,9225,7464,4661,818,9317,5932,5047,2741)) 
   >        AND (TINTEGER >= 503040 OR TINTEGER <= 1223) 
   > 	   AND (TBIGINT BETWEEN 234567802455 AND 908667115321)
   >        AND (TREAL NOT IN (155656.656,274367.736)) 
   > 	   OR (TDOUBLE <=9852.9 AND TDOUBLE >=5236.45) 
   > 	   AND (TFLOAT IS NOT NULL  AND (TFLOAT BETWEEN 1092 AND 3284))
   > 	   AND ((TDECIMAL IS NULL OR TDECIMAL >=8378.5) 
   > 	   AND (TNUMERIC <> 7418.1886 AND TNUMERIC <> 8674.5869 AND TNUMERIC <> 9135.7007 AND TNUMERIC != 2827.9165 AND TNUMERIC != 4731.5215)) 
   > 	   AND TDATE IN (DATE '1990-01-01',DATE '2005-12-30') 
   > 	   OR ((TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12')) 
   > 	   AND (TBOOL = TRUE))
   > 	   AND (TCHAR LIKE '%a%' OR TCHAR LIKE 'q%' OR TCHAR LIKE '%z') 
   > 	   AND (TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_')
   > 	   GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   > 	   HAVING (SUM(TSMALLINT)>=7000 AND SUM(TSMALLINT)<=8000)
   > 	   AND (AVG(TDOUBLE) BETWEEN 6589 AND 9826)
   > 	   AND (MAX(TBIGINT) BETWEEN 200000000000 AND 780000000000)
   > 	   AND (MIN(TREAL) BETWEEN 4000 AND 6000)
   > 	   AND (APPROX_COUNT_DISTINCT(TNUMERIC,0.5,100) = 1)
   > 	   AND (APPROX_PERCENTILE(TFLOAT,0.5,100) BETWEEN 7000 AND 8000)
   > 	   OR (COVAR_POP(TSMALLINT,TINTEGER) = 0 )
   > 	   AND (COVAR_SAMP(TSMALLINT,TINTEGER) = 0 )
   > 	   AND (PERCENTILE_APPROX(TSMALLINT,0.5,100) != 0)
   > 	   ORDER BY TUNIQUE 
   > 	   LIMIT 10;
10 rows selected.
SQL> 
SQL> ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar类型字段,数值型函数，字符型函数，时间型函数作为过滤条件的子查询 
   > ----smallint,integer,bigint,real,double,float,decimal,numeric,date,timestamp,boolean,char,varchar作为group by条件
   > ----聚合函数作为having条件
SQL> SELECT DISTINCT TUNIQUE,TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,CHARACTER_LENGTH(TVARCHAR),TRIM(TVARCHAR),
   >        TRIM(BOTH 'D' FROM TVARCHAR),TRIM(TRAILING 'g' FROM TVARCHAR),SUBSTRING(TVARCHAR FROM 13 FOR 40),LPAD(TVARCHAR,55,TVARCHAR),MD5(TVARCHAR),
   >        PRINTF(TVARCHAR+'%d %s',3232,TVARCHAR),REPLACE(TVARCHAR,'i','LDB'),REVERSE(TVARCHAR),TRIM(RIGHT(TVARCHAR,4)),DATE_FORMAT(TTIMESTAMP,'yyyy-MM-dd HH24:mi:ss'),
   >        DATE_TRUNC(TTIMESTAMP,'YEAR'),DAY(TTIMESTAMP),FROM_UTC_TIMESTAMP(TTIMESTAMP,'ASia/Seoul'),MINUTE(TTIMESTAMP),MONTH(TTIMESTAMP),SECOND(TTIMESTAMP),
   >        TO_TIMESTAMP(TTIMESTAMP,'yyyy-mm-dd hh24:mi:ss'),YEAR(TTIMESTAMP),SUM(TSMALLINT) AS TSUM,AVG(TINTEGER) AS TAVG,MAX(TSMALLINT) AS TMAX,MIN(TBIGINT) AS TMIN,
   >        COUNT(TFLOAT) AS TCOUNT,APPROX_COUNT_DISTINCT(TDECIMAL) AS TAPPROX_COUNT_DISTINCT,APPROX_PERCENTILE(TNUMERIC,0.5,100) AS TAPPROX_PERCENTILE,
   >        PERCENTILE(TSMALLINT,0.5,100) AS TPERCENTILE,COVAR_POP(TREAL,TINTEGER) AS TCOVAR_POP,COVAR_SAMP(TFLOAT,TBIGINT) AS TCOVAR_SAMP,
   >        PERCENTILE_APPROX(TSMALLINT,0.5,100) AS TPERCENTILE_APPROX,RANK() OVER(PARTITION BY TSMALLINT ORDER BY TUNIQUE) AS TRANK FROM P1000 AS a WHERE 
   >        ((ABS(TSMALLINT)>=2500 AND ABS(TSMALLINT)<=4500) 
   >        OR (BOOLEAN(TSMALLINT<TREAL)=true)
   >        AND (CBRT(TSMALLINT)>=8)
   >        AND (BROUND(TSMALLINT,2) BETWEEN 600 AND 2000)
   >        AND (CHAR(TSMALLINT) IN ('x','v','n','D','K','k','c','A','a','b','B','C','d','e'))
   >        AND (LENGTH(CONV(TSMALLINT,10,2))>=8 OR LENGTH(CONV(TSMALLINT,10,2))<=5)
   >        AND (DEGREES(TSMALLINT) BETWEEN 42000 AND 400000)
   >        AND (FLOOR(TSMALLINT)<=600 AND FLOOR(TSMALLINT)>=1500)
   >        AND (CEIL(TSMALLINT) IN (5239,5242,8212,8114,5026,8102,8317,2404))
   >        AND (LENGTH(FORMAT_NUMBER(TSMALLINT,3))<=5)
   >        AND (GREATEST(TSMALLINT,TBIGINT,TINTEGER)>=TSMALLINT)
   >        OR (HEX(TSMALLINT)>2000 AND HEX(TSMALLINT)<2500)
   >        AND (HYPOT(TSMALLINT,TSMALLINT) BETWEEN 12000 AND 13000)
   >        AND (ISNOTNULL(TSMALLINT) IS NOT NULL)
   >        AND (LEAST(TSMALLINT)<=TSMALLINT)
   >        OR (LN(TSMALLINT) BETWEEN 5 AND 6)
   >        AND (LOG10(TSMALLINT) BETWEEN 2 AND 3)
   >        AND (LOG1P(TSMALLINT) NOT BETWEEN 6 AND 8)
   >        OR (LOG2(TSMALLINT) >=13.2)
   >        AND (MOD(TINTEGER,TSMALLINT)<50)
   >        AND (NEGATIVE(TSMALLINT)<=-9000)
   >        OR (NULLIF(TSMALLINT,TINTEGER)<=100)
   >        AND (PMOD(TINTEGER,TSMALLINT)<=200))
   >        AND (TSMALLINT>400 AND TSMALLINT<=3000 OR TSMALLINT BETWEEN 5000 AND 5500 OR TSMALLINT BETWEEN 8000 AND 8500)
   > 	   AND  (ADD_MONTHS(TDATE,4) BETWEEN '1999-01-01 00:00:00' AND '2020-12-30 00:00:00')
   >        AND (DATE_ADD(TDATE,20) >= '1990-01-01' AND DATE_ADD(TDATE,20) <= '1999-12-30')
   >        OR (DATE_FORMAT(TDATE,'YYYY') IN ('2000','2003','2047','2032','2033','2048'))
   >        AND (DATE_SUB(TDATE,13) NOT BETWEEN '1995-12-30' AND '2040-01-01')
   >        AND (DATEDIFF(DATE_ADD(TDATE,12),DATE_SUB(TDATE,6))>= 18)
   >        AND (DAY(TDATE) BETWEEN 10 AND 25)
   >        AND (DAYOFMONTH(TDATE) >= 10 AND DAYOFMONTH(TDATE) <=15)
   >        AND (DAYOFYEAR(TDATE) NOT BETWEEN 50 AND 300)
   >        AND (NEXT_DAY(TDATE,'TU') BETWEEN '2020-01-01' AND '2040-12-30')
   >        OR (LAST_DAY(TDATE) IN (DATE '2006-10-31',DATE '1988-12-31',DATE '2000-10-31',DATE '2003-08-31',DATE '2023-04-30',DATE '1981-08-20'))
   >        AND (MONTHS_BETWEEN(TDATE,ADD_MONTHS(TDATE,18)) = -18)
   >        AND (TO_DATE(TDATE,'yyyy-mm-dd') BETWEEN '1999-01-01' AND '2005-12-30')
   >        AND (TRUNC(TDATE,'YEAR') >='2003-01-01')
   >        OR (UNIX_TIMESTAMP(TDATE,'yyyy-mm-dd')>=1911111111)
   >        AND (WEEKOFYEAR(TDATE) BETWEEN 20 AND 30)
   >        AND (YEAR(TDATE) NOT IN (2047,2033,2008,2010,2023))
   >        AND ((TDATE BETWEEN '1999-01-01' AND '2005-12-30') OR (TDATE >= '2030-12-30'))
   > 	   AND (CHARACTER_LENGTH(TCHAR) = 50)
   >        AND (TRIM(TCHAR) LIKE '%J')
   >        AND (TRIM(BOTH 'D' FROM TCHAR) LIKE '%M%')
   >        OR (TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE 'N%' AND TRIM(TRAILING 'g' FROM TCHAR) NOT LIKE '%A%')
   >        AND (SUBSTRING(TCHAR FROM 13 FOR 40) LIKE '_z%')
   >        AND (LPAD(TCHAR,55,TVARCHAR) LIKE '%O')
   >        AND (LENGTH(MD5(TCHAR)) >=30)
   >        AND (PRINTF(TCHAR+'%d %s',3232,TVARCHAR) LIKE '%323%')
   >        OR (REPLACE(TCHAR,'i','LDB') LIKE '%LDB%')
   >        AND (LENGTH(REVERSE(TCHAR))=LENGTH(TCHAR))
   >        AND (TRIM(RIGHT(TCHAR,4)) LIKE '%A')
   >        AND (TCHAR LIKE '_P%' OR TCHAR LIKE '%V%' AND TCHAR LIKE '_A_')
   >        AND (TSMALLINT IN (8638,9837,1224,8317,9225,7464,4661,818,9317,5932,5047,2741)) 
   >        AND (TINTEGER >= 503040 OR TINTEGER <= 1223) 
   > 	   AND (TBIGINT BETWEEN 234567802455 AND 908667115321)
   >        AND (TREAL NOT IN (155656.656,274367.736)) 
   > 	   OR (TDOUBLE <=9852.9 AND TDOUBLE >=5236.45) 
   > 	   AND (TFLOAT IS NOT NULL  AND (TFLOAT BETWEEN 1092 AND 3284))
   > 	   AND ((TDECIMAL IS NULL OR TDECIMAL >=8378.5) 
   > 	   AND (TNUMERIC <> 7418.1886 AND TNUMERIC <> 8674.5869 AND TNUMERIC <> 9135.7007 AND TNUMERIC != 2827.9165 AND TNUMERIC != 4731.5215)) 
   > 	   AND TDATE IN (DATE '1990-01-01',DATE '2005-12-30') 
   > 	   OR ((TTIMESTAMP NOT IN (TIMESTAMP '2001-04-03 12:00:00',TIMESTAMP '2002-12-30 12:12:12')) 
   > 	   AND (TBOOL = TRUE))
   > 	   AND (TCHAR LIKE '%a%' OR TCHAR LIKE 'q%' OR TCHAR LIKE '%z') 
   > 	   AND (TVARCHAR LIKE '_c_' OR TVARCHAR NOT LIKE '%d_')
   > 	   OR a.TINTEGER IN (SELECT c.TINTEGER FROM P1000 AS c WHERE c.TINTEGER >= 503040 OR c.TINTEGER <= 1223)
   >        AND a.TBIGINT IN (SELECT d.TBIGINT FROM P1000 AS d WHERE d.TBIGINT BETWEEN 234567802455 AND 908667115321)    
   >        AND a.TREAL IN (SELECT e.TREAL FROM P1000 AS e WHERE e.TREAL NOT IN (155656.656,274367.736)) 
   >        OR a.TDOUBLE IN (SELECT f.TDOUBLE FROM P1000 AS f WHERE f.TDOUBLE <=9852 AND f.TDOUBLE >=5236.45)
   >        AND a.TFLOAT IN (SELECT g.TFLOAT FROM P1000 AS g WHERE  g.TFLOAT IS NOT NULL AND (g.TFLOAT BETWEEN 1092 AND 3284))
   >        AND (a.TDECIMAL IN (SELECT h.TDECIMAL FROM P1000 AS h WHERE h.TDECIMAL IS NULL OR h.TDECIMAL >=8378.5))
   > 	   GROUP BY TSMALLINT,TINTEGER,TBIGINT,TREAL,TDOUBLE,TFLOAT,TDECIMAL,TNUMERIC,TDATE,TTIMESTAMP,TBOOL,TCHAR,TVARCHAR,TUNIQUE 
   > 	   HAVING (SUM(TSMALLINT)>=7000 AND SUM(TSMALLINT)<=8000)
   > 	   AND (AVG(TDOUBLE) BETWEEN 6589 AND 9826)
   > 	   AND (MAX(TBIGINT) BETWEEN 200000000000 AND 780000000000)
   > 	   AND (MIN(TREAL) BETWEEN 4000 AND 6000)
   > 	   AND (APPROX_COUNT_DISTINCT(TNUMERIC,0.5,100) = 1)
   > 	   AND (APPROX_PERCENTILE(TFLOAT,0.5,100) BETWEEN 7000 AND 8000)
   > 	   OR (COVAR_POP(TSMALLINT,TINTEGER) = 0 )
   > 	   AND (COVAR_SAMP(TSMALLINT,TINTEGER) = 0 )
   > 	   AND (PERCENTILE_APPROX(TSMALLINT,0.5,100) != 0)
   > 	   ORDER BY TUNIQUE 
   > 	   LIMIT 10;
java.sql.SQLException: Worker execution: ldb worker caused error: Null-aware predicate sub-queries cannot be used in nested conditions: (((((((((((((((((((cast(abs(TSMALLINT#771971) as int) >= 2500) && (cast(abs(TSMALLINT#771971) as int) <= 4500)) || ((((((((((cast((cast(TSMALLINT#771971 as double) < TREAL#771974) as boolean) = true) && (CBRT(cast(TSMALLINT#771971 as double)) >= cast(8 as double))) && ((cast(bround(TSMALLINT#771971, 2) as int) >= 600) && (cast(bround(TSMALLINT#771971, 2) as int) <= 2000))) && cast(named_struct(col_0, chr(cast(TSMALLINT#771971 as bigint))) as struct<col_0:string>) IN (cast(named_struct(col_0, x) as struct<col_0:string>),cast(named_struct(col_0, v) as struct<col_0:string>),cast(named_struct(col_0, n) as struct<col_0:string>),cast(named_struct(col_0, D) as struct<col_0:string>),cast(named_struct(col_0, K) as struct<col_0:string>),cast(named_struct(col_0, k) as struct<col_0:string>),cast(named_struct(col_0, c) as struct<col_0:string>),cast(named_struct(col_0, A) as struct<col_0:string>),cast(named_struct(col_0, a) as struct<col_0:string>),cast(named_struct(col_0, b) as struct<col_0:string>),cast(named_struct(col_0, B) as struct<col_0:string>),cast(named_struct(col_0, C) as struct<col_0:string>),cast(named_struct(col_0, d) as struct<col_0:string>),cast(named_struct(col_0, e) as struct<col_0:string>))) && ((length(conv(cast(TSMALLINT#771971 as string), 10, 2)) >= 8) || (length(conv(cast(TSMALLINT#771971 as string), 10, 2)) <= 5))) && ((DEGREES(cast(TSMALLINT#771971 as double)) >= cast(42000 as double)) && (DEGREES(cast(TSMALLINT#771971 as double)) <= cast(400000 as double)))) && ((FLOOR(cast(TSMALLINT#771971 as double)) <= cast(600 as bigint)) && (FLOOR(cast(TSMALLINT#771971 as double)) >= cast(1500 as bigint)))) && cast(named_struct(col_0, CEIL(cast(TSMALLINT#771971 as double))) as struct<col_0:bigint>) IN (cast(named_struct(col_0, 5239) as struct<col_0:bigint>),cast(named_struct(col_0, 5242) as struct<col_0:bigint>),cast(named_struct(col_0, 8212) as struct<col_0:bigint>),cast(named_struct(col_0, 8114) as struct<col_0:bigint>),cast(named_struct(col_0, 5026) as struct<col_0:bigint>),cast(named_struct(col_0, 8102) as struct<col_0:bigint>),cast(named_struct(col_0, 8317) as struct<col_0:bigint>),cast(named_struct(col_0, 2404) as struct<col_0:bigint>))) && (length(format_number(TSMALLINT#771971, 3)) <= 5)) && (CASE WHEN (CASE WHEN (cast(TSMALLINT#771971 as bigint) > TBIGINT#771973L) THEN cast(TSMALLINT#771971 as bigint) ELSE TBIGINT#771973L END > cast(TINTEGER#771972 as bigint)) THEN CASE WHEN (cast(TSMALLINT#771971 as bigint) > TBIGINT#771973L) THEN cast(TSMALLINT#771971 as bigint) ELSE TBIGINT#771973L END ELSE cast(TINTEGER#771972 as bigint) END >= cast(TSMALLINT#771971 as bigint)))) || (((((cast(hex(cast(TSMALLINT#771971 as bigint)) as int) > 2000) && (cast(hex(cast(TSMALLINT#771971 as bigint)) as int) < 2500)) && ((HYPOT(cast(TSMALLINT#771971 as double), cast(TSMALLINT#771971 as double)) >= cast(12000 as double)) && (HYPOT(cast(TSMALLINT#771971 as double), cast(TSMALLINT#771971 as double)) <= cast(13000 as double)))) && isnotnull(isnotnull(TSMALLINT#771971))) && (TSMALLINT#771971 <= TSMALLINT#771971))) || ((((LOG(cast(TSMALLINT#771971 as double)) >= cast(5 as double)) && (LOG(cast(TSMALLINT#771971 as double)) <= cast(6 as double))) && ((LOG10(cast(TSMALLINT#771971 as double)) >= cast(2 as double)) && (LOG10(cast(TSMALLINT#771971 as double)) <= cast(3 as double)))) && NOT ((LOG1P(cast(TSMALLINT#771971 as double)) >= cast(6 as double)) && (LOG1P(cast(TSMALLINT#771971 as double)) <= cast(8 as double))))) || (((LOG2(cast(TSMALLINT#771971 as double)) >= cast(13.2 as double)) && ((TINTEGER#771972 % cast(TSMALLINT#771971 as int)) < 50)) && (cast(-TSMALLINT#771971 as int) <= -9000))) || ((cast(CASE WHEN (cast(TSMALLINT#771971 as int) = TINTEGER#771972) THEN null ELSE TSMALLINT#771971 END as int) <= 100) && (pmod(TINTEGER#771972, cast(TSMALLINT#771971 as int)) <= 200))) && ((((cast(TSMALLINT#771971 as int) > 400) && (cast(TSMALLINT#771971 as int) <= 3000)) || ((cast(TSMALLINT#771971 as int) >= 5000) && (cast(TSMALLINT#771971 as int) <= 5500))) || ((cast(TSMALLINT#771971 as int) >= 8000) && (cast(TSMALLINT#771971 as int) <= 8500)))) && ((cast(add_months(TDATE#771979, 4) as timestamp) >= 915120000000000) && (cast(add_months(TDATE#771979, 4) as timestamp) <= 1609257600000000))) && ((date_add(TDATE#771979, 20) >= 7305) && (date_add(TDATE#771979, 20) <= 10955))) || ((((((cast(named_struct(col_0, date_format(cast(TDATE#771979 as timestamp), yyyy, Some(Asia/Shanghai))) as struct<col_0:string>) IN (cast(named_struct(col_0, 2000) as struct<col_0:string>),cast(named_struct(col_0, 2003) as struct<col_0:string>),cast(named_struct(col_0, 2047) as struct<col_0:string>),cast(named_struct(col_0, 2032) as struct<col_0:string>),cast(named_struct(col_0, 2033) as struct<col_0:string>),cast(named_struct(col_0, 2048) as struct<col_0:string>)) && NOT ((date_sub(TDATE#771979, 13) >= 9494) && (date_sub(TDATE#771979, 13) <= 25567))) && (datediff(date_add(TDATE#771979, 12), date_sub(TDATE#771979, 6)) >= 18)) && ((dayofmonth(TDATE#771979) >= 10) && (dayofmonth(TDATE#771979) <= 25))) && ((dayofmonth(TDATE#771979) >= 10) && (dayofmonth(TDATE#771979) <= 15))) && NOT ((dayofyear(TDATE#771979) >= 50) && (dayofyear(TDATE#771979) <= 300))) && ((cast(next_day(TDATE#771979, TU) as timestamp) >= 1577808000000000) && (cast(next_day(TDATE#771979, TU) as timestamp) <= 2240409600000000)))) || (((cast(named_struct(col_0, last_day(TDATE#771979)) as struct<col_0:date>) IN (cast(named_struct(col_0, 13452) as struct<col_0:date>),cast(named_struct(col_0, 6939) as struct<col_0:date>),cast(named_struct(col_0, 11261) as struct<col_0:date>),cast(named_struct(col_0, 12295) as struct<col_0:date>),cast(named_struct(col_0, 19477) as struct<col_0:date>),cast(named_struct(col_0, 4249) as struct<col_0:date>)) && (months_between(cast(TDATE#771979 as timestamp), cast(add_months(TDATE#771979, 18) as timestamp), true, Some(Asia/Shanghai)) = cast(-18 as double))) && ((cast(cast(unix_timestamp(TDATE#771979, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) >= 10592) && (cast(cast(unix_timestamp(TDATE#771979, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) <= 13147))) && (trunc(TDATE#771979, YEAR) >= 12053))) || (((((((to_unix_timestamp(TDATE#771979, yyyy-MM-dd HH:mm:ss, Some(Asia/Shanghai)) >= cast(1911111111 as bigint)) && ((weekofyear(TDATE#771979) >= 20) && (weekofyear(TDATE#771979) <= 30))) && NOT cast(named_struct(col_0, year(TDATE#771979)) as struct<col_0:int>) IN (cast(named_struct(col_0, 2047) as struct<col_0:int>),cast(named_struct(col_0, 2033) as struct<col_0:int>),cast(named_struct(col_0, 2008) as struct<col_0:int>),cast(named_struct(col_0, 2010) as struct<col_0:int>),cast(named_struct(col_0, 2023) as struct<col_0:int>))) && (((TDATE#771979 >= 10592) && (TDATE#771979 <= 13147)) || (TDATE#771979 >= 22278))) && (length(TCHAR#771982) = 50)) && trim(TCHAR#771982, Some( )) LIKE %J) && trim(TCHAR#771982, Some(D)) LIKE %M%)) || (((((NOT rtrim(TCHAR#771982, Some(g)) LIKE N% && NOT rtrim(TCHAR#771982, Some(g)) LIKE %A%) && substring(TCHAR#771982, 13, 40) LIKE _z%) && lpad(TCHAR#771982, 55, TVARCHAR#771983) LIKE %O) && (length(md5(cast(TCHAR#771982 as binary))) >= 30)) && format_string(concat(TCHAR#771982, %d %s), 3232, TVARCHAR#771983) LIKE %323%)) || (((((((replace(TCHAR#771982, i, LDB) LIKE %LDB% && (length(reverse(TCHAR#771982)) = length(TCHAR#771982))) && trim(right(TCHAR#771982, 4), Some( )) LIKE %A) && (((TCHAR#771982 >= ) && TCHAR#771982 LIKE _P%) || (((TCHAR#771982 >= ) && TCHAR#771982 LIKE %V%) && ((TCHAR#771982 >= ) && TCHAR#771982 LIKE _A_)))) && cast(TSMALLINT#771971 as int) IN (cast(8638 as int),cast(9837 as int),cast(1224 as int),cast(8317 as int),cast(9225 as int),cast(7464 as int),cast(4661 as int),cast(818 as int),cast(9317 as int),cast(5932 as int),cast(5047 as int),cast(2741 as int))) && ((TINTEGER#771972 >= 503040) || (TINTEGER#771972 <= 1223))) && ((TBIGINT#771973L >= 234567802455) && (TBIGINT#771973L <= 908667115321))) && NOT cast(TREAL#771974 as double) IN (cast(155656.656 as double),cast(274367.736 as double)))) || (((((TDOUBLE#771975 <= cast(9852.9 as double)) && (TDOUBLE#771975 >= cast(5236.45 as double))) && (isnotnull(TFLOAT#771976) && ((TFLOAT#771976 >= cast(1092 as float)) && (TFLOAT#771976 <= cast(3284 as float))))) && ((isnull(TDECIMAL#771977) || (cast(TDECIMAL#771977 as decimal(10,2)) >= cast(8378.5 as decimal(10,2)))) && ((((NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(7418.1886 as decimal(10,4))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(8674.5869 as decimal(10,4)))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(9135.7007 as decimal(10,4)))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(2827.9165 as decimal(10,4)))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(4731.5215 as decimal(10,4)))))) && TDATE#771979 IN (7305,13147))) || (((NOT TTIMESTAMP#771980 IN (986270400000000,1041221532000000) && (TBOOL#771981 = true)) && ((((TCHAR#771982 >= ) && TCHAR#771982 LIKE %a%) || ((TCHAR#771982 >= q) && TCHAR#771982 LIKE q%)) || ((TCHAR#771982 >= ) && TCHAR#771982 LIKE %z))) && (((TVARCHAR#771983 >= ) && TVARCHAR#771983 LIKE _c_) || NOT ((TVARCHAR#771983 >= ) && TVARCHAR#771983 LIKE %d_)))) || ((TINTEGER#771972 IN (list#772117 []) && TBIGINT#771973L IN (list#772118 [])) && TREAL#771974 IN (list#772119 []))) || ((TDOUBLE#771975 IN (list#772120 []) && TFLOAT#771976 IN (list#772121 [])) && TDECIMAL#771977 IN (list#772122 [])));;
GlobalLimit (0 + 10)
+- LocalLimit (0 + 10)
   +- Sort [TUNIQUE#771970L ASC NULLS FIRST], true
      +- Distinct
         +- Project [TUNIQUE#771970L, TSMALLINT#771971, TINTEGER#771972, TBIGINT#771973L, TREAL#771974, TDOUBLE#771975, TFLOAT#771976, TDECIMAL#771977, TNUMERIC#771978, TDATE#771979, TTIMESTAMP#771980, TBOOL#771981, TCHAR#771982, TVARCHAR#771983, C15#774013, C16#774140, C17#774267, C18#774394, C19#774521, C20#774648, C21#774775, C22#774902, C23#775029, C24#775156, ... 22 more fields]
            +- Project [TUNIQUE#771970L, TSMALLINT#771971, TINTEGER#771972, TBIGINT#771973L, TREAL#771974, TDOUBLE#771975, TFLOAT#771976, TDECIMAL#771977, TNUMERIC#771978, TDATE#771979, TTIMESTAMP#771980, TBOOL#771981, TCHAR#771982, TVARCHAR#771983, C15#774013, C16#774140, C17#774267, C18#774394, C19#774521, C20#774648, C21#774775, C22#774902, C23#775029, C24#775156, ... 22 more fields]
               +- Window [rank(TUNIQUE#771970L) windowspecdefinition(TSMALLINT#771971, TUNIQUE#771970L ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS TRANK#777950], [TSMALLINT#771971], [TUNIQUE#771970L ASC NULLS FIRST]
                  +- Project [TUNIQUE#771970L, TSMALLINT#771971, TINTEGER#771972, TBIGINT#771973L, TREAL#771974, TDOUBLE#771975, TFLOAT#771976, TDECIMAL#771977, TNUMERIC#771978, TDATE#771979, TTIMESTAMP#771980, TBOOL#771981, TCHAR#771982, TVARCHAR#771983, C15#774013, C16#774140, C17#774267, C18#774394, C19#774521, C20#774648, C21#774775, C22#774902, C23#775029, C24#775156, ... 21 more fields]
                     +- Filter ((((((((sum(cast(TSMALLINT#771971 as bigint))#741808L >= cast(7000 as bigint)) && (sum(cast(TSMALLINT#771971 as bigint))#741809L <= cast(8000 as bigint))) && ((avg(TDOUBLE#771975)#741810 >= cast(6589 as double)) && (avg(TDOUBLE#771975)#741811 <= cast(9826 as double)))) && ((max(TBIGINT#771973L)#741812L >= 200000000000) && (max(TBIGINT#771973L)#741813L <= 780000000000))) && ((min(TREAL#771974)#741814 >= cast(4000 as double)) && (min(TREAL#771974)#741815 <= cast(6000 as double)))) && (approx_count_distinct(TNUMERIC#771978, 0.05, 0, 0)#741816L = cast(1 as bigint))) && ((percentile_approx(TFLOAT#771976, cast(0.5 as double), 10000, 0, 0)#741817 >= cast(7000 as float)) && (percentile_approx(TFLOAT#771976, cast(0.5 as double), 10000, 0, 0)#741818 <= cast(8000 as float)))) || (((covar_pop(cast(TSMALLINT#771971 as double), cast(TINTEGER#771972 as double))#741819 = cast(0 as double)) && (covar_samp(cast(TSMALLINT#771971 as double), cast(TINTEGER#771972 as double))#741820 = cast(0 as double))) && NOT (cast(percentile_approx(TSMALLINT#771971, cast(0.5 as double), 10000, 0, 0)#741821 as int) = 0)))
                        +- Aggregate [TSMALLINT#771971, TINTEGER#771972, TBIGINT#771973L, TREAL#771974, TDOUBLE#771975, TFLOAT#771976, TDECIMAL#771977, TNUMERIC#771978, TDATE#771979, TTIMESTAMP#771980, TBOOL#771981, TCHAR#771982, TVARCHAR#771983, TUNIQUE#771970L], [TUNIQUE#771970L, TSMALLINT#771971, TINTEGER#771972, TBIGINT#771973L, TREAL#771974, TDOUBLE#771975, TFLOAT#771976, TDECIMAL#771977, TNUMERIC#771978, TDATE#771979, TTIMESTAMP#771980, TBOOL#771981, TCHAR#771982, TVARCHAR#771983, length(TVARCHAR#771983) AS C15#774013, trim(TVARCHAR#771983, Some( )) AS C16#774140, trim(TVARCHAR#771983, Some(D)) AS C17#774267, rtrim(TVARCHAR#771983, Some(g)) AS C18#774394, substring(TVARCHAR#771983, 13, 40) AS C19#774521, lpad(TVARCHAR#771983, 55, TVARCHAR#771983) AS C20#774648, md5(cast(TVARCHAR#771983 as binary)) AS C21#774775, format_string(concat(TVARCHAR#771983, %d %s), 3232, TVARCHAR#771983) AS C22#774902, replace(TVARCHAR#771983, i, LDB) AS C23#775029, reverse(TVARCHAR#771983) AS C24#775156, ... 35 more fields]
                           +- Filter (((((((((((((((((((cast(abs(TSMALLINT#771971) as int) >= 2500) && (cast(abs(TSMALLINT#771971) as int) <= 4500)) || ((((((((((cast((cast(TSMALLINT#771971 as double) < TREAL#771974) as boolean) = true) && (CBRT(cast(TSMALLINT#771971 as double)) >= cast(8 as double))) && ((cast(bround(TSMALLINT#771971, 2) as int) >= 600) && (cast(bround(TSMALLINT#771971, 2) as int) <= 2000))) && cast(named_struct(col_0, chr(cast(TSMALLINT#771971 as bigint))) as struct<col_0:string>) IN (cast(named_struct(col_0, x) as struct<col_0:string>),cast(named_struct(col_0, v) as struct<col_0:string>),cast(named_struct(col_0, n) as struct<col_0:string>),cast(named_struct(col_0, D) as struct<col_0:string>),cast(named_struct(col_0, K) as struct<col_0:string>),cast(named_struct(col_0, k) as struct<col_0:string>),cast(named_struct(col_0, c) as struct<col_0:string>),cast(named_struct(col_0, A) as struct<col_0:string>),cast(named_struct(col_0, a) as struct<col_0:string>),cast(named_struct(col_0, b) as struct<col_0:string>),cast(named_struct(col_0, B) as struct<col_0:string>),cast(named_struct(col_0, C) as struct<col_0:string>),cast(named_struct(col_0, d) as struct<col_0:string>),cast(named_struct(col_0, e) as struct<col_0:string>))) && ((length(conv(cast(TSMALLINT#771971 as string), 10, 2)) >= 8) || (length(conv(cast(TSMALLINT#771971 as string), 10, 2)) <= 5))) && ((DEGREES(cast(TSMALLINT#771971 as double)) >= cast(42000 as double)) && (DEGREES(cast(TSMALLINT#771971 as double)) <= cast(400000 as double)))) && ((FLOOR(cast(TSMALLINT#771971 as double)) <= cast(600 as bigint)) && (FLOOR(cast(TSMALLINT#771971 as double)) >= cast(1500 as bigint)))) && cast(named_struct(col_0, CEIL(cast(TSMALLINT#771971 as double))) as struct<col_0:bigint>) IN (cast(named_struct(col_0, 5239) as struct<col_0:bigint>),cast(named_struct(col_0, 5242) as struct<col_0:bigint>),cast(named_struct(col_0, 8212) as struct<col_0:bigint>),cast(named_struct(col_0, 8114) as struct<col_0:bigint>),cast(named_struct(col_0, 5026) as struct<col_0:bigint>),cast(named_struct(col_0, 8102) as struct<col_0:bigint>),cast(named_struct(col_0, 8317) as struct<col_0:bigint>),cast(named_struct(col_0, 2404) as struct<col_0:bigint>))) && (length(format_number(TSMALLINT#771971, 3)) <= 5)) && (CASE WHEN (CASE WHEN (cast(TSMALLINT#771971 as bigint) > TBIGINT#771973L) THEN cast(TSMALLINT#771971 as bigint) ELSE TBIGINT#771973L END > cast(TINTEGER#771972 as bigint)) THEN CASE WHEN (cast(TSMALLINT#771971 as bigint) > TBIGINT#771973L) THEN cast(TSMALLINT#771971 as bigint) ELSE TBIGINT#771973L END ELSE cast(TINTEGER#771972 as bigint) END >= cast(TSMALLINT#771971 as bigint)))) || (((((cast(hex(cast(TSMALLINT#771971 as bigint)) as int) > 2000) && (cast(hex(cast(TSMALLINT#771971 as bigint)) as int) < 2500)) && ((HYPOT(cast(TSMALLINT#771971 as double), cast(TSMALLINT#771971 as double)) >= cast(12000 as double)) && (HYPOT(cast(TSMALLINT#771971 as double), cast(TSMALLINT#771971 as double)) <= cast(13000 as double)))) && isnotnull(isnotnull(TSMALLINT#771971))) && (TSMALLINT#771971 <= TSMALLINT#771971))) || ((((LOG(cast(TSMALLINT#771971 as double)) >= cast(5 as double)) && (LOG(cast(TSMALLINT#771971 as double)) <= cast(6 as double))) && ((LOG10(cast(TSMALLINT#771971 as double)) >= cast(2 as double)) && (LOG10(cast(TSMALLINT#771971 as double)) <= cast(3 as double)))) && NOT ((LOG1P(cast(TSMALLINT#771971 as double)) >= cast(6 as double)) && (LOG1P(cast(TSMALLINT#771971 as double)) <= cast(8 as double))))) || (((LOG2(cast(TSMALLINT#771971 as double)) >= cast(13.2 as double)) && ((TINTEGER#771972 % cast(TSMALLINT#771971 as int)) < 50)) && (cast(-TSMALLINT#771971 as int) <= -9000))) || ((cast(CASE WHEN (cast(TSMALLINT#771971 as int) = TINTEGER#771972) THEN null ELSE TSMALLINT#771971 END as int) <= 100) && (pmod(TINTEGER#771972, cast(TSMALLINT#771971 as int)) <= 200))) && ((((cast(TSMALLINT#771971 as int) > 400) && (cast(TSMALLINT#771971 as int) <= 3000)) || ((cast(TSMALLINT#771971 as int) >= 5000) && (cast(TSMALLINT#771971 as int) <= 5500))) || ((cast(TSMALLINT#771971 as int) >= 8000) && (cast(TSMALLINT#771971 as int) <= 8500)))) && ((cast(add_months(TDATE#771979, 4) as timestamp) >= 915120000000000) && (cast(add_months(TDATE#771979, 4) as timestamp) <= 1609257600000000))) && ((date_add(TDATE#771979, 20) >= 7305) && (date_add(TDATE#771979, 20) <= 10955))) || ((((((cast(named_struct(col_0, date_format(cast(TDATE#771979 as timestamp), yyyy, Some(Asia/Shanghai))) as struct<col_0:string>) IN (cast(named_struct(col_0, 2000) as struct<col_0:string>),cast(named_struct(col_0, 2003) as struct<col_0:string>),cast(named_struct(col_0, 2047) as struct<col_0:string>),cast(named_struct(col_0, 2032) as struct<col_0:string>),cast(named_struct(col_0, 2033) as struct<col_0:string>),cast(named_struct(col_0, 2048) as struct<col_0:string>)) && NOT ((date_sub(TDATE#771979, 13) >= 9494) && (date_sub(TDATE#771979, 13) <= 25567))) && (datediff(date_add(TDATE#771979, 12), date_sub(TDATE#771979, 6)) >= 18)) && ((dayofmonth(TDATE#771979) >= 10) && (dayofmonth(TDATE#771979) <= 25))) && ((dayofmonth(TDATE#771979) >= 10) && (dayofmonth(TDATE#771979) <= 15))) && NOT ((dayofyear(TDATE#771979) >= 50) && (dayofyear(TDATE#771979) <= 300))) && ((cast(next_day(TDATE#771979, TU) as timestamp) >= 1577808000000000) && (cast(next_day(TDATE#771979, TU) as timestamp) <= 2240409600000000)))) || (((cast(named_struct(col_0, last_day(TDATE#771979)) as struct<col_0:date>) IN (cast(named_struct(col_0, 13452) as struct<col_0:date>),cast(named_struct(col_0, 6939) as struct<col_0:date>),cast(named_struct(col_0, 11261) as struct<col_0:date>),cast(named_struct(col_0, 12295) as struct<col_0:date>),cast(named_struct(col_0, 19477) as struct<col_0:date>),cast(named_struct(col_0, 4249) as struct<col_0:date>)) && (months_between(cast(TDATE#771979 as timestamp), cast(add_months(TDATE#771979, 18) as timestamp), true, Some(Asia/Shanghai)) = cast(-18 as double))) && ((cast(cast(unix_timestamp(TDATE#771979, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) >= 10592) && (cast(cast(unix_timestamp(TDATE#771979, yyyy-MM-dd, Some(Asia/Shanghai)) as timestamp) as date) <= 13147))) && (trunc(TDATE#771979, YEAR) >= 12053))) || (((((((to_unix_timestamp(TDATE#771979, yyyy-MM-dd HH:mm:ss, Some(Asia/Shanghai)) >= cast(1911111111 as bigint)) && ((weekofyear(TDATE#771979) >= 20) && (weekofyear(TDATE#771979) <= 30))) && NOT cast(named_struct(col_0, year(TDATE#771979)) as struct<col_0:int>) IN (cast(named_struct(col_0, 2047) as struct<col_0:int>),cast(named_struct(col_0, 2033) as struct<col_0:int>),cast(named_struct(col_0, 2008) as struct<col_0:int>),cast(named_struct(col_0, 2010) as struct<col_0:int>),cast(named_struct(col_0, 2023) as struct<col_0:int>))) && (((TDATE#771979 >= 10592) && (TDATE#771979 <= 13147)) || (TDATE#771979 >= 22278))) && (length(TCHAR#771982) = 50)) && trim(TCHAR#771982, Some( )) LIKE %J) && trim(TCHAR#771982, Some(D)) LIKE %M%)) || (((((NOT rtrim(TCHAR#771982, Some(g)) LIKE N% && NOT rtrim(TCHAR#771982, Some(g)) LIKE %A%) && substring(TCHAR#771982, 13, 40) LIKE _z%) && lpad(TCHAR#771982, 55, TVARCHAR#771983) LIKE %O) && (length(md5(cast(TCHAR#771982 as binary))) >= 30)) && format_string(concat(TCHAR#771982, %d %s), 3232, TVARCHAR#771983) LIKE %323%)) || (((((((replace(TCHAR#771982, i, LDB) LIKE %LDB% && (length(reverse(TCHAR#771982)) = length(TCHAR#771982))) && trim(right(TCHAR#771982, 4), Some( )) LIKE %A) && (((TCHAR#771982 >= ) && TCHAR#771982 LIKE _P%) || (((TCHAR#771982 >= ) && TCHAR#771982 LIKE %V%) && ((TCHAR#771982 >= ) && TCHAR#771982 LIKE _A_)))) && cast(TSMALLINT#771971 as int) IN (cast(8638 as int),cast(9837 as int),cast(1224 as int),cast(8317 as int),cast(9225 as int),cast(7464 as int),cast(4661 as int),cast(818 as int),cast(9317 as int),cast(5932 as int),cast(5047 as int),cast(2741 as int))) && ((TINTEGER#771972 >= 503040) || (TINTEGER#771972 <= 1223))) && ((TBIGINT#771973L >= 234567802455) && (TBIGINT#771973L <= 908667115321))) && NOT cast(TREAL#771974 as double) IN (cast(155656.656 as double),cast(274367.736 as double)))) || (((((TDOUBLE#771975 <= cast(9852.9 as double)) && (TDOUBLE#771975 >= cast(5236.45 as double))) && (isnotnull(TFLOAT#771976) && ((TFLOAT#771976 >= cast(1092 as float)) && (TFLOAT#771976 <= cast(3284 as float))))) && ((isnull(TDECIMAL#771977) || (cast(TDECIMAL#771977 as decimal(10,2)) >= cast(8378.5 as decimal(10,2)))) && ((((NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(7418.1886 as decimal(10,4))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(8674.5869 as decimal(10,4)))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(9135.7007 as decimal(10,4)))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(2827.9165 as decimal(10,4)))) && NOT (cast(TNUMERIC#771978 as decimal(10,4)) = cast(4731.5215 as decimal(10,4)))))) && TDATE#771979 IN (7305,13147))) || (((NOT TTIMESTAMP#771980 IN (986270400000000,1041221532000000) && (TBOOL#771981 = true)) && ((((TCHAR#771982 >= ) && TCHAR#771982 LIKE %a%) || ((TCHAR#771982 >= q) && TCHAR#771982 LIKE q%)) || ((TCHAR#771982 >= ) && TCHAR#771982 LIKE %z))) && (((TVARCHAR#771983 >= ) && TVARCHAR#771983 LIKE _c_) || NOT ((TVARCHAR#771983 >= ) && TVARCHAR#771983 LIKE %d_)))) || ((TINTEGER#771972 IN (list#772117 []) && TBIGINT#771973L IN (list#772118 [])) && TREAL#771974 IN (list#772119 []))) || ((TDOUBLE#771975 IN (list#772120 []) && TFLOAT#771976 IN (list#772121 [])) && TDECIMAL#771977 IN (list#772122 [])))
                              :  :- Project [TINTEGER#771993]
                              :  :  +- Filter ((TINTEGER#771993 >= 503040) || (TINTEGER#771993 <= 1223))
                              :  :     +- Project [TUNIQUE#741212L AS TUNIQUE#771991L, TSMALLINT#741213 AS TSMALLINT#771992, TINTEGER#741214 AS TINTEGER#771993, TBIGINT#741215L AS TBIGINT#771994L, TREAL#741216 AS TREAL#771995, TDOUBLE#741217 AS TDOUBLE#771996, TFLOAT#741218 AS TFLOAT#771997, TDECIMAL#741219 AS TDECIMAL#771998, TNUMERIC#741220 AS TNUMERIC#771999, TDATE#741221 AS TDATE#772000, TTIMESTAMP#741222 AS TTIMESTAMP#772001, TBOOL#741223 AS TBOOL#772002, TCHAR#741224 AS TCHAR#772003, TVARCHAR#741225 AS TVARCHAR#772004, TCHARIDX1#741226 AS TCHARIDX1#772005, TCHARIDX2#741227 AS TCHARIDX2#772006, TCHARIDX3#741228 AS TCHARIDX3#772007, TVARCHARIDX1#741229 AS TVARCHARIDX1#772008, TVARCHARIDX2#741230 AS TVARCHARIDX2#772009, TVARCHARIDX3#741231 AS TVARCHARIDX3#772010, _LDBID_#741232 AS _LDBID_#772011]
                              :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#741212L, TSMALLINT#741213, TINTEGER#741214, TBIGINT#741215L, TREAL#741216, TDOUBLE#741217, TFLOAT#741218, TDECIMAL#741219, TNUMERIC#741220, TDATE#741221, TTIMESTAMP#741222, TBOOL#741223, TCHAR#741224, TVARCHAR#741225, TCHARIDX1#741226, TCHARIDX2#741227, TCHARIDX3#741228, TVARCHARIDX1#741229, TVARCHARIDX2#741230, TVARCHARIDX3#741231, _LDBID_#741232] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                              :  :- Project [TBIGINT#772015L]
                              :  :  +- Filter ((TBIGINT#772015L >= 234567802455) && (TBIGINT#772015L <= 908667115321))
                              :  :     +- Project [TUNIQUE#741254L AS TUNIQUE#772012L, TSMALLINT#741255 AS TSMALLINT#772013, TINTEGER#741256 AS TINTEGER#772014, TBIGINT#741257L AS TBIGINT#772015L, TREAL#741258 AS TREAL#772016, TDOUBLE#741259 AS TDOUBLE#772017, TFLOAT#741260 AS TFLOAT#772018, TDECIMAL#741261 AS TDECIMAL#772019, TNUMERIC#741262 AS TNUMERIC#772020, TDATE#741263 AS TDATE#772021, TTIMESTAMP#741264 AS TTIMESTAMP#772022, TBOOL#741265 AS TBOOL#772023, TCHAR#741266 AS TCHAR#772024, TVARCHAR#741267 AS TVARCHAR#772025, TCHARIDX1#741268 AS TCHARIDX1#772026, TCHARIDX2#741269 AS TCHARIDX2#772027, TCHARIDX3#741270 AS TCHARIDX3#772028, TVARCHARIDX1#741271 AS TVARCHARIDX1#772029, TVARCHARIDX2#741272 AS TVARCHARIDX2#772030, TVARCHARIDX3#741273 AS TVARCHARIDX3#772031, _LDBID_#741274 AS _LDBID_#772032]
                              :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#741254L, TSMALLINT#741255, TINTEGER#741256, TBIGINT#741257L, TREAL#741258, TDOUBLE#741259, TFLOAT#741260, TDECIMAL#741261, TNUMERIC#741262, TDATE#741263, TTIMESTAMP#741264, TBOOL#741265, TCHAR#741266, TVARCHAR#741267, TCHARIDX1#741268, TCHARIDX2#741269, TCHARIDX3#741270, TVARCHARIDX1#741271, TVARCHARIDX2#741272, TVARCHARIDX3#741273, _LDBID_#741274] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                              :  :- Project [TREAL#772037]
                              :  :  +- Filter NOT cast(TREAL#772037 as double) IN (cast(155656.656 as double),cast(274367.736 as double))
                              :  :     +- Project [TUNIQUE#741296L AS TUNIQUE#772033L, TSMALLINT#741297 AS TSMALLINT#772034, TINTEGER#741298 AS TINTEGER#772035, TBIGINT#741299L AS TBIGINT#772036L, TREAL#741300 AS TREAL#772037, TDOUBLE#741301 AS TDOUBLE#772038, TFLOAT#741302 AS TFLOAT#772039, TDECIMAL#741303 AS TDECIMAL#772040, TNUMERIC#741304 AS TNUMERIC#772041, TDATE#741305 AS TDATE#772042, TTIMESTAMP#741306 AS TTIMESTAMP#772043, TBOOL#741307 AS TBOOL#772044, TCHAR#741308 AS TCHAR#772045, TVARCHAR#741309 AS TVARCHAR#772046, TCHARIDX1#741310 AS TCHARIDX1#772047, TCHARIDX2#741311 AS TCHARIDX2#772048, TCHARIDX3#741312 AS TCHARIDX3#772049, TVARCHARIDX1#741313 AS TVARCHARIDX1#772050, TVARCHARIDX2#741314 AS TVARCHARIDX2#772051, TVARCHARIDX3#741315 AS TVARCHARIDX3#772052, _LDBID_#741316 AS _LDBID_#772053]
                              :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#741296L, TSMALLINT#741297, TINTEGER#741298, TBIGINT#741299L, TREAL#741300, TDOUBLE#741301, TFLOAT#741302, TDECIMAL#741303, TNUMERIC#741304, TDATE#741305, TTIMESTAMP#741306, TBOOL#741307, TCHAR#741308, TVARCHAR#741309, TCHARIDX1#741310, TCHARIDX2#741311, TCHARIDX3#741312, TVARCHARIDX1#741313, TVARCHARIDX2#741314, TVARCHARIDX3#741315, _LDBID_#741316] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                              :  :- Project [TDOUBLE#772059]
                              :  :  +- Filter ((TDOUBLE#772059 <= cast(9852 as double)) && (TDOUBLE#772059 >= cast(5236.45 as double)))
                              :  :     +- Project [TUNIQUE#741338L AS TUNIQUE#772054L, TSMALLINT#741339 AS TSMALLINT#772055, TINTEGER#741340 AS TINTEGER#772056, TBIGINT#741341L AS TBIGINT#772057L, TREAL#741342 AS TREAL#772058, TDOUBLE#741343 AS TDOUBLE#772059, TFLOAT#741344 AS TFLOAT#772060, TDECIMAL#741345 AS TDECIMAL#772061, TNUMERIC#741346 AS TNUMERIC#772062, TDATE#741347 AS TDATE#772063, TTIMESTAMP#741348 AS TTIMESTAMP#772064, TBOOL#741349 AS TBOOL#772065, TCHAR#741350 AS TCHAR#772066, TVARCHAR#741351 AS TVARCHAR#772067, TCHARIDX1#741352 AS TCHARIDX1#772068, TCHARIDX2#741353 AS TCHARIDX2#772069, TCHARIDX3#741354 AS TCHARIDX3#772070, TVARCHARIDX1#741355 AS TVARCHARIDX1#772071, TVARCHARIDX2#741356 AS TVARCHARIDX2#772072, TVARCHARIDX3#741357 AS TVARCHARIDX3#772073, _LDBID_#741358 AS _LDBID_#772074]
                              :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#741338L, TSMALLINT#741339, TINTEGER#741340, TBIGINT#741341L, TREAL#741342, TDOUBLE#741343, TFLOAT#741344, TDECIMAL#741345, TNUMERIC#741346, TDATE#741347, TTIMESTAMP#741348, TBOOL#741349, TCHAR#741350, TVARCHAR#741351, TCHARIDX1#741352, TCHARIDX2#741353, TCHARIDX3#741354, TVARCHARIDX1#741355, TVARCHARIDX2#741356, TVARCHARIDX3#741357, _LDBID_#741358] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                              :  :- Project [TFLOAT#772081]
                              :  :  +- Filter (isnotnull(TFLOAT#772081) && ((TFLOAT#772081 >= cast(1092 as float)) && (TFLOAT#772081 <= cast(3284 as float))))
                              :  :     +- Project [TUNIQUE#741380L AS TUNIQUE#772075L, TSMALLINT#741381 AS TSMALLINT#772076, TINTEGER#741382 AS TINTEGER#772077, TBIGINT#741383L AS TBIGINT#772078L, TREAL#741384 AS TREAL#772079, TDOUBLE#741385 AS TDOUBLE#772080, TFLOAT#741386 AS TFLOAT#772081, TDECIMAL#741387 AS TDECIMAL#772082, TNUMERIC#741388 AS TNUMERIC#772083, TDATE#741389 AS TDATE#772084, TTIMESTAMP#741390 AS TTIMESTAMP#772085, TBOOL#741391 AS TBOOL#772086, TCHAR#741392 AS TCHAR#772087, TVARCHAR#741393 AS TVARCHAR#772088, TCHARIDX1#741394 AS TCHARIDX1#772089, TCHARIDX2#741395 AS TCHARIDX2#772090, TCHARIDX3#741396 AS TCHARIDX3#772091, TVARCHARIDX1#741397 AS TVARCHARIDX1#772092, TVARCHARIDX2#741398 AS TVARCHARIDX2#772093, TVARCHARIDX3#741399 AS TVARCHARIDX3#772094, _LDBID_#741400 AS _LDBID_#772095]
                              :  :        +- RelationV2 PallasDataSourceEntance[TUNIQUE#741380L, TSMALLINT#741381, TINTEGER#741382, TBIGINT#741383L, TREAL#741384, TDOUBLE#741385, TFLOAT#741386, TDECIMAL#741387, TNUMERIC#741388, TDATE#741389, TTIMESTAMP#741390, TBOOL#741391, TCHAR#741392, TVARCHAR#741393, TCHARIDX1#741394, TCHARIDX2#741395, TCHARIDX3#741396, TVARCHARIDX1#741397, TVARCHARIDX2#741398, TVARCHARIDX3#741399, _LDBID_#741400] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                              :  +- Project [TDECIMAL#772103]
                              :     +- Filter (isnull(TDECIMAL#772103) || (cast(TDECIMAL#772103 as decimal(10,2)) >= cast(8378.5 as decimal(10,2))))
                              :        +- Project [TUNIQUE#741422L AS TUNIQUE#772096L, TSMALLINT#741423 AS TSMALLINT#772097, TINTEGER#741424 AS TINTEGER#772098, TBIGINT#741425L AS TBIGINT#772099L, TREAL#741426 AS TREAL#772100, TDOUBLE#741427 AS TDOUBLE#772101, TFLOAT#741428 AS TFLOAT#772102, TDECIMAL#741429 AS TDECIMAL#772103, TNUMERIC#741430 AS TNUMERIC#772104, TDATE#741431 AS TDATE#772105, TTIMESTAMP#741432 AS TTIMESTAMP#772106, TBOOL#741433 AS TBOOL#772107, TCHAR#741434 AS TCHAR#772108, TVARCHAR#741435 AS TVARCHAR#772109, TCHARIDX1#741436 AS TCHARIDX1#772110, TCHARIDX2#741437 AS TCHARIDX2#772111, TCHARIDX3#741438 AS TCHARIDX3#772112, TVARCHARIDX1#741439 AS TVARCHARIDX1#772113, TVARCHARIDX2#741440 AS TVARCHARIDX2#772114, TVARCHARIDX3#741441 AS TVARCHARIDX3#772115, _LDBID_#741442 AS _LDBID_#772116]
                              :           +- RelationV2 PallasDataSourceEntance[TUNIQUE#741422L, TSMALLINT#741423, TINTEGER#741424, TBIGINT#741425L, TREAL#741426, TDOUBLE#741427, TFLOAT#741428, TDECIMAL#741429, TNUMERIC#741430, TDATE#741431, TTIMESTAMP#741432, TBOOL#741433, TCHAR#741434, TVARCHAR#741435, TCHARIDX1#741436, TCHARIDX2#741437, TCHARIDX3#741438, TVARCHARIDX1#741439, TVARCHARIDX2#741440, TVARCHARIDX3#741441, _LDBID_#741442] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])
                              +- Project [TUNIQUE#741170L AS TUNIQUE#771970L, TSMALLINT#741171 AS TSMALLINT#771971, TINTEGER#741172 AS TINTEGER#771972, TBIGINT#741173L AS TBIGINT#771973L, TREAL#741174 AS TREAL#771974, TDOUBLE#741175 AS TDOUBLE#771975, TFLOAT#741176 AS TFLOAT#771976, TDECIMAL#741177 AS TDECIMAL#771977, TNUMERIC#741178 AS TNUMERIC#771978, TDATE#741179 AS TDATE#771979, TTIMESTAMP#741180 AS TTIMESTAMP#771980, TBOOL#741181 AS TBOOL#771981, TCHAR#741182 AS TCHAR#771982, TVARCHAR#741183 AS TVARCHAR#771983, TCHARIDX1#741184 AS TCHARIDX1#771984, TCHARIDX2#741185 AS TCHARIDX2#771985, TCHARIDX3#741186 AS TCHARIDX3#771986, TVARCHARIDX1#741187 AS TVARCHARIDX1#771987, TVARCHARIDX2#741188 AS TVARCHARIDX2#771988, TVARCHARIDX3#741189 AS TVARCHARIDX3#771989, _LDBID_#741190 AS _LDBID_#771990]
                                 +- RelationV2 PallasDataSourceEntance[TUNIQUE#741170L, TSMALLINT#741171, TINTEGER#741172, TBIGINT#741173L, TREAL#741174, TDOUBLE#741175, TFLOAT#741176, TDECIMAL#741177, TNUMERIC#741178, TDATE#741179, TTIMESTAMP#741180, TBOOL#741181, TCHAR#741182, TVARCHAR#741183, TCHARIDX1#741184, TCHARIDX2#741185, TCHARIDX3#741186, TVARCHARIDX1#741187, TVARCHARIDX2#741188, TVARCHARIDX3#741189, _LDBID_#741190] (Options: [storage=row,tableinfo=2814ab25-04b3-4559-97e7-138558e62122-])

SQL> exit
Disconnected.
