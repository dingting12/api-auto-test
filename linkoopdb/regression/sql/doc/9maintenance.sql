--Description: doc 9 chapter maintenance
--Date：2020-07-13
--Author：满意

-- 9.1

CREATE RESOURCE GROUP TEST101 GLOBAL PERCENT 30;
CREATE RESOURCE GROUP TEST102 GLOBAL PERCENT 55, GLOBAL MIN PERCENT 10;
CREATE RESOURCE GROUP TEST103 GLOBAL PERCENT 55, GLOBAL MIN PERCENT 10, GLOBAL MAX
PERCENT 90;
CREATE RESOURCE GROUP TEST104 GLOBAL PERCENT 50, GLOBAL MIN PERCENT 15, MANAGER MEMORY
1g, EXECUTOR MEMORY 1g, EXECUTOR CPU 1;
CREATE RESOURCE GROUP TEST105 GLOBAL PERCENT 50, GLOBAL MIN PERCENT 15, GLOBAL MAX
PERCENT 100, MANAGER MEMORY 1g, EXECUTOR MEMORY 1g, EXECUTOR CPU 1;
CREATE RESOURCE GROUP TEST106 MANAGER MEMORY 1g, EXECUTOR MEMORY 1g, EXECUTOR CPU 1,
EXECUTOR NUMBER 1
CREATE RESOURCE GROUP MULTI_HDP_TEST01 MANAGER MEMORY 1g, EXECUTOR MEMORY 1g, EXECUTOR
CPU 1, EXECUTOR NUMBER 1, CONF 'hadoop02', QUEUE 'default', USER 'hadoop1', KEYTAB
'xxxxxx';
CREATE RESOURCE GROUP MULTI_HDP_TEST02 MANAGER MEMORY 1g, EXECUTOR MEMORY 1g, EXECUTOR
CPU 1, EXECUTOR NUMBER 1, CONF 'hadoop03', QUEUE 'default', USER 'hadoop2';

DROP RESOURCE GROUP TEST101;


ALTER RESOURCE GROUP TEST101 SET GLOBAL PERCENT 60, GLOBAL MIN PERCENT 5, GLOBAL MAX
PERCENT 0, MANAGER MEMORY 0, EXECUTOR MEMORY 0, EXECUTOR CPU 0, EXECUTOR NUMBER 0;

CREATE USER TEST_GROUP PASSWORD '123456' GLOBAL_SPACE 10T TEMP_SPACE 5T RESOURCE GROUP
'DEFAULT';


CREATE USER TEST_GROUP PASSWORD '123456' GLOBAL_SPACE 10T TEMP_SPACE 5T;


ALTER USER TEST_GROUP SET RESOURCE GROUP TEST1;

CREATE USER USER_TEST PASSWORD '123456' GLOBAL_SPACE 10T TEMP_SPACE 5T

CREATE USER USER_TEST PASSWORD '123456' GLOBAL_SPACE UNLIMITED TEMP_SPACE UNLIMITED

ALTER USER USER_TEST SET GLOBAL_SPACE 10T TEMP_SPACE 5T;

SET SESSION JOB PRIORITY LOW

SET SESSION JOB PRIORITY HIGH

SET SESSION JOB PRIORITY EMERGENCY

SET SESSION JOB PRIORITY MEDIUM

DROP SCHEMA S1 IF EXISTS CASCADE;

SELECT * FROM INFORMATION_SCHEMA.SYSTEM_USERS;

SELECT * FROM INFORMATION_SCHEMA.TABLE_PRIVILEGES;



CREATE USER USER1 PASSWORD '123456';
ALTER USER USER1 SET PASSWORD '123456';
ALTER USER USER1 SET INITIAL SCHEMA PUBLIC;
SET PASSWORD '123456';
DROP USER USER1;

SET INITIAL SCHEMA PUBLIC;


CREATE ROLE R1;
DROP ROLE R1;


CREATE USER USER1 PASSWORD '123456';
CREATE USER USER2 PASSWORD '123456';
--给user赋权
GRANT ALL ON TABLE1 TO USER1;
GRANT SELECT ON TABLE1 TO USER1;
GRANT SELECT, UPDATE ON TABLE1 TO USER1, USER2;
GRANT SELECT(COLUMNA, COLUMNB), UPDATE(COLUMNA, COLUMNB) ON TABLE1 TO USER1;
--赋予使用其他用户的存储过程的权利
GRANT ALL ON PROCEDURE USER1.proc TO USER2;
--赋予使用其他用户的函数的权利
GRANT ALL ON FUNCTION USER1.function TO USER2;
--给role赋权
GRANT ALL ON TABLE1 TO ROLE1;
GRANT SELECT ON TABLE1 TO ROLE1;
GRANT SELECT, UPDATE ON TABLE1 TO ROLE1, ROLE2;
GRANT SELECT(COLUMNA, COLUMNB), UPDATE(COLUMNA, COLUMNB) ON TABLE1 TO ROLE1;
--将role的权限赋给user
GRANT ROLE1 TO USER1;


REVOKE ALL ON TABLE1 FROM USER1 RESTRICT;
REVOKE SELECT ON TABLE1 FROM USER1 RESTRICT;
REVOKE SELECT, UPDATE ON TABLE1 FROM USER1, USER2 RESTRICT;
REVOKE SELECT(COLUMNA, COLUMNB), UPDATE(COLUMNA, COLUMNB) ON TABLE1 FROM USER1
RESTRICT;

--收回role的权限
REVOKE ALL ON TABLE1 FROM ROLE1 RESTRICT;
REVOKE SELECT ON TABLE1 FROM ROLE1 RESTRICT;
REVOKE SELECT, UPDATE ON TABLE1 FROM ROLE1, ROLE2 RESTRICT;
REVOKE SELECT(COLUMNA, COLUMNB), UPDATE(COLUMNA, COLUMNB) ON TABLE1 FROM ROLE1
RESTRICT;

--9.3.1. 从HDFS文件加载
drop table TEST1 if exists ;
drop table TEST2 if exists ;
drop table TEST3 if exists ;
drop table TEST4 if exists ;

CREATE EXTERNAL TABLE TEST1 (ID INT, NAME VARCHAR(10)) LOCATION
('hdfs://host:port/TEST1.csv') FORMAT 'csv' (DELIMITER ',');

CREATE EXTERNAL TABLE TEST2 (ID INT, NAME VARCHAR(10)) LOCATION
('hdfs://host:port/csv_test') FORMAT 'csv' (DELIMITER ',');

CREATE EXTERNAL TABLE TEST3 (ID INT, NAME VARCHAR(10)) LOCATION
('hdfs://host:port/csv_test,hdfs://host:port/TEST1.csv') FORMAT 'csv'
(DELIMITER ',');


CREATE TABLE TEST4 (ID INT, NAME VARCHAR(10));

INSERT INTO TEST4 SELECT * FROM TEST1;

select * from TEST4 order by id;

delete from TEST4;

INSERT INTO TEST4 SELECT * FROM TEST2;

select * from TEST4 order by id;

delete from TEST4;

INSERT INTO TEST4 SELECT * FROM TEST3;

select * from TEST4 order by id;


--9.3.2. 从HIVE表加载
drop table TEST1 if exists ;
drop table TEST2 if exists ;

CREATE EXTERNAL TABLE TEST1 (
ID INT,
NAME VARCHAR(20) ) FORMAT 'HIVE' PROPERTIES ('table':'HIVE_TABLE_NAME');

CREATE TABLE TEST2 (
ID INT, 
NAME VARCHAR(10)
);

INSERT INTO TEST2 SELECT * FROM TEST1;

--9.3.3. 从其他数据库加载
CREATE EXTERNAL TABLE TEST1 ( ID INT, NAME VARCHAR(20) ) FORMAT 'JDBC'
PROPERTIES
('table':'ORACLE_EXTERNAL_TABLE_NAME','driver':'oracle.jdbc.driver.OracleD
river','url':'jdbc:oracle:thin:@localhost:1521:orcl','user':'ORACLE_USER',
'password':'ORACLE_USER_PASSWORD');

CREATE TABLE TEST2 (ID INT, NAME VARCHAR(10));

INSERT INTO TEST2 SELECT * FROM TEST1;


CREATE DATABASE LINK ORACLE_LINK CONNECT TO 'linkoopdb' IDENTIFIED BY
'123456' USING 'jdbc:oracle:thin:@localhost:1521:orcl' properties
('maxActive':'5');
ALTER TABLE ORACLE_LINK.TEST1 SET PROPERTIES ('part1':'0<ID<10000',
'part2':'10000<=ID');

CREATE TABLE TEST2 (ID INT, NAME VARCHAR(10));
最后，将外部表的数据插入到内部表中。
INSERT INTO TEST2 SELECT * FROM ORACLE_LINK.TEST1;

--从子查询加载
CREATE TABLE TEST1 (C1 VARCHAR(20),C2 INT,C3 DATE);
INSERT INTO TEST1 SELECT ENAME,SAL,HIREDATE FROM EMP WHERE DEPTNO IN
(SELECT DEPTNO FROM DEPT)



--9.3.5. 从多台服务器批量加载普通文件