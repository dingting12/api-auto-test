<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">192.168.1.73</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">linkoopdb host</stringProp>
          </elementProp>
          <elementProp name="a" elementType="Argument">
            <stringProp name="Argument.name">a</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">dba user</stringProp>
          </elementProp>
          <elementProp name="a_password" elementType="Argument">
            <stringProp name="Argument.name">a_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">dba user password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">T_USER1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user1</stringProp>
          </elementProp>
          <elementProp name="u1_password" elementType="Argument">
            <stringProp name="Argument.name">u1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user1 password</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">T_USER2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user2</stringProp>
          </elementProp>
          <elementProp name="u2_password" elementType="Argument">
            <stringProp name="Argument.name">u2_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user2 password</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">T_USER3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3_password" elementType="Argument">
            <stringProp name="Argument.name">u3_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s1" elementType="Argument">
            <stringProp name="Argument.name">s1</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s2" elementType="Argument">
            <stringProp name="Argument.name">s2</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s3" elementType="Argument">
            <stringProp name="Argument.name">s3</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s4" elementType="Argument">
            <stringProp name="Argument.name">s4</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V1" elementType="Argument">
            <stringProp name="Argument.name">V1</stringProp>
            <stringProp name="Argument.value">VIEW_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V2" elementType="Argument">
            <stringProp name="Argument.name">V2</stringProp>
            <stringProp name="Argument.value">VIEW_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V3" elementType="Argument">
            <stringProp name="Argument.name">V3</stringProp>
            <stringProp name="Argument.value">VIEW_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V4" elementType="Argument">
            <stringProp name="Argument.name">V4</stringProp>
            <stringProp name="Argument.value">VIEW_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V5" elementType="Argument">
            <stringProp name="Argument.name">V5</stringProp>
            <stringProp name="Argument.value">VIEW_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v1" elementType="Argument">
            <stringProp name="Argument.name">v1</stringProp>
            <stringProp name="Argument.value">view_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v2" elementType="Argument">
            <stringProp name="Argument.name">v2</stringProp>
            <stringProp name="Argument.value">view_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v3" elementType="Argument">
            <stringProp name="Argument.name">v3</stringProp>
            <stringProp name="Argument.value">view_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v4" elementType="Argument">
            <stringProp name="Argument.name">v4</stringProp>
            <stringProp name="Argument.value">view_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v5" elementType="Argument">
            <stringProp name="Argument.name">v5</stringProp>
            <stringProp name="Argument.value">view_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy1" elementType="Argument">
            <stringProp name="Argument.name">sy1</stringProp>
            <stringProp name="Argument.value">SYNONYM_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy2" elementType="Argument">
            <stringProp name="Argument.name">sy2</stringProp>
            <stringProp name="Argument.value">SYNONYM_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy3" elementType="Argument">
            <stringProp name="Argument.name">sy3</stringProp>
            <stringProp name="Argument.value">SYNONYM_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy4" elementType="Argument">
            <stringProp name="Argument.name">sy4</stringProp>
            <stringProp name="Argument.value">SYNONYM_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy5" elementType="Argument">
            <stringProp name="Argument.name">sy5</stringProp>
            <stringProp name="Argument.value">SYNONYM_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="synonym_view" elementType="Argument">
            <stringProp name="Argument.name">synonym_view</stringProp>
            <stringProp name="Argument.value">SYNONYM_VIEW</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_OLAP_1" elementType="Argument">
            <stringProp name="Argument.name">TEST_OLAP_1</stringProp>
            <stringProp name="Argument.value">TEST_OLAP_1</stringProp>
            <stringProp name="Argument.desc">TestOLAP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_OLAP_2" elementType="Argument">
            <stringProp name="Argument.name">TEST_OLAP_2</stringProp>
            <stringProp name="Argument.value">TEST_OLAP_2</stringProp>
            <stringProp name="Argument.desc">TestOLAP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Data_Type_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Data_Type_1</stringProp>
            <stringProp name="Argument.value">Test_Data_Type_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">TestDataTypes</stringProp>
          </elementProp>
          <elementProp name="Test_Data_Type_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Data_Type_2</stringProp>
            <stringProp name="Argument.value">Test_Data_Type_2</stringProp>
            <stringProp name="Argument.desc">TestDataTypes</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Data_Type_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Data_Type_3</stringProp>
            <stringProp name="Argument.value">Test_Data_Type_3</stringProp>
            <stringProp name="Argument.desc">TestDataTypes</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Data_Type_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Data_Type_4</stringProp>
            <stringProp name="Argument.value">Test_Data_Type_4</stringProp>
            <stringProp name="Argument.desc">TestDataTypes</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Query_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Query_1</stringProp>
            <stringProp name="Argument.value">Test_Basic_Query_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">TestBasicQuery </stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Query_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Query_2</stringProp>
            <stringProp name="Argument.value">Test_Basic_Query_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">TestBasicQuery </stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Query_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Query_3</stringProp>
            <stringProp name="Argument.value">Test_Basic_Query_3</stringProp>
            <stringProp name="Argument.desc">TestBasicQuery </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Query_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Query_4</stringProp>
            <stringProp name="Argument.value">Test_Basic_Query_4</stringProp>
            <stringProp name="Argument.desc">TestBasicQuery </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Query_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Query_5</stringProp>
            <stringProp name="Argument.value">Test_Basic_Query_5</stringProp>
            <stringProp name="Argument.desc">TestBasicQuery </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Privileges_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Privileges_1</stringProp>
            <stringProp name="Argument.value">Test_Basic_Privileges_1</stringProp>
            <stringProp name="Argument.desc">TestBasicPrivileges </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Privileges_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Privileges_2</stringProp>
            <stringProp name="Argument.value">Test_Basic_Privileges_2</stringProp>
            <stringProp name="Argument.desc">TestBasicPrivileges </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Privileges_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Privileges_3</stringProp>
            <stringProp name="Argument.value">Test_Basic_Privileges_3</stringProp>
            <stringProp name="Argument.desc">TestBasicPrivileges </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Data_Management_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Data_Management_1</stringProp>
            <stringProp name="Argument.value">Test_Basic_Data_Management_1</stringProp>
            <stringProp name="Argument.desc">TestBasicDataManagement </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Information_Schema_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Information_Schema_1</stringProp>
            <stringProp name="Argument.value">Test_Basic_Information_Schema_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">TestBasicInformationSchema</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Information_Schema_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Information_Schema_2</stringProp>
            <stringProp name="Argument.value">Test_Basic_Information_Schema_2</stringProp>
            <stringProp name="Argument.desc">TestBasicInformationSchema</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Schema_Manipulation_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Schema_Manipulation_1</stringProp>
            <stringProp name="Argument.value">TEST_BASIC_SCHEMA_MANIPULATION_1</stringProp>
            <stringProp name="Argument.desc">TestBasicSchemaManipulation</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Basic_Schema_Manipulation_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Basic_Schema_Manipulation_2</stringProp>
            <stringProp name="Argument.value">TEST_BASIC_SCHEMA_MANIPULATION_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">TestBasicSchemaManipulation</stringProp>
          </elementProp>
          <elementProp name="Test_Extended_Schema_Manipulation_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Extended_Schema_Manipulation_1</stringProp>
            <stringProp name="Argument.value">TEST_EXTENDED_SCHEMA_MANIPULATION_1</stringProp>
            <stringProp name="Argument.desc">TestExtendedSchemaManipulation</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_1</stringProp>
            <stringProp name="Argument.value">Test_Join_1</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_2</stringProp>
            <stringProp name="Argument.value">Test_Join_2</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_3</stringProp>
            <stringProp name="Argument.value">Test_Join_3</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_4</stringProp>
            <stringProp name="Argument.value">Test_Join_4</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_5</stringProp>
            <stringProp name="Argument.value">Test_Join_5</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_6" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_6</stringProp>
            <stringProp name="Argument.value">Test_Join_6</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_7" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_7</stringProp>
            <stringProp name="Argument.value">Test_Join_7</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_8" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_8</stringProp>
            <stringProp name="Argument.value">Test_Join_8</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_9" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_9</stringProp>
            <stringProp name="Argument.value">Test_Join_9</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_10" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_10</stringProp>
            <stringProp name="Argument.value">Test_Join_10</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_11" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_11</stringProp>
            <stringProp name="Argument.value">Test_Join_11</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Join_12" elementType="Argument">
            <stringProp name="Argument.name">Test_Join_12</stringProp>
            <stringProp name="Argument.value">Test_Join_12</stringProp>
            <stringProp name="Argument.desc">TestJoin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Set_Functions_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Set_Functions_1</stringProp>
            <stringProp name="Argument.value">Test_Set_Functions_1</stringProp>
            <stringProp name="Argument.desc">TestSetFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Set_Functions_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Set_Functions_2</stringProp>
            <stringProp name="Argument.value">Test_Set_Functions_2</stringProp>
            <stringProp name="Argument.desc">TestSetFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Set_Functions_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Set_Functions_3</stringProp>
            <stringProp name="Argument.value">Test_Set_Functions_3</stringProp>
            <stringProp name="Argument.desc">TestSetFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Single_Row_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Single_Row_1</stringProp>
            <stringProp name="Argument.value">Test_Single_Row_1</stringProp>
            <stringProp name="Argument.desc">TestSingleRow</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Single_Row_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Single_Row_2</stringProp>
            <stringProp name="Argument.value">Test_Single_Row_2</stringProp>
            <stringProp name="Argument.desc">TestSingleRow</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Single_Row_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Single_Row_3</stringProp>
            <stringProp name="Argument.value">Test_Single_Row_3</stringProp>
            <stringProp name="Argument.desc">TestSingleRow</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_1" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_1</stringProp>
            <stringProp name="Argument.value">Test_PSM_1</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_2" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_2</stringProp>
            <stringProp name="Argument.value">Test_PSM_2</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_3" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_3</stringProp>
            <stringProp name="Argument.value">Test_PSM_3</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_4" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_4</stringProp>
            <stringProp name="Argument.value">Test_PSM_4</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_5" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_5</stringProp>
            <stringProp name="Argument.value">Test_PSM_5</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_6" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_6</stringProp>
            <stringProp name="Argument.value">Test_PSM_6</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_7" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_7</stringProp>
            <stringProp name="Argument.value">Test_PSM_7</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_8" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_8</stringProp>
            <stringProp name="Argument.value">Test_PSM_8</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_9" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_9</stringProp>
            <stringProp name="Argument.value">Test_PSM_9</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_10" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_10</stringProp>
            <stringProp name="Argument.value">Test_PSM_10</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_11" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_11</stringProp>
            <stringProp name="Argument.value">Test_PSM_11</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_PSM_12" elementType="Argument">
            <stringProp name="Argument.name">Test_PSM_12</stringProp>
            <stringProp name="Argument.value">Test_PSM_12</stringProp>
            <stringProp name="Argument.desc">TestPSM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonyms_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonyms_1</stringProp>
            <stringProp name="Argument.value">Test_Synonyms_1</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonyms_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonyms_2</stringProp>
            <stringProp name="Argument.value">Test_Synonyms_2</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonyms_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonyms_3</stringProp>
            <stringProp name="Argument.value">Test_Synonyms_3</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonyms_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonyms_4</stringProp>
            <stringProp name="Argument.value">Test_Synonyms_4</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonyms_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonyms_5</stringProp>
            <stringProp name="Argument.value">Test_Synonyms_5</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_View_1" elementType="Argument">
            <stringProp name="Argument.name">Test_View_1</stringProp>
            <stringProp name="Argument.value">Test_View_1</stringProp>
            <stringProp name="Argument.desc">TestView</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_View_2" elementType="Argument">
            <stringProp name="Argument.name">Test_View_2</stringProp>
            <stringProp name="Argument.value">Test_View_2</stringProp>
            <stringProp name="Argument.desc">TestView</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_View_3" elementType="Argument">
            <stringProp name="Argument.name">Test_View_3</stringProp>
            <stringProp name="Argument.value">Test_View_3</stringProp>
            <stringProp name="Argument.desc">TestView</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_View_4" elementType="Argument">
            <stringProp name="Argument.name">Test_View_4</stringProp>
            <stringProp name="Argument.value">Test_View_4</stringProp>
            <stringProp name="Argument.desc">TestView</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_View_5" elementType="Argument">
            <stringProp name="Argument.name">Test_View_5</stringProp>
            <stringProp name="Argument.value">Test_View_5</stringProp>
            <stringProp name="Argument.desc">TestView</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_View_6" elementType="Argument">
            <stringProp name="Argument.name">Test_View_6</stringProp>
            <stringProp name="Argument.value">Test_View_6</stringProp>
            <stringProp name="Argument.desc">TestView</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_View_7" elementType="Argument">
            <stringProp name="Argument.name">Test_View_7</stringProp>
            <stringProp name="Argument.value">Test_View_7</stringProp>
            <stringProp name="Argument.desc">TestView</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_SQLFunction_1" elementType="Argument">
            <stringProp name="Argument.name">Test_SQLFunction_1</stringProp>
            <stringProp name="Argument.value">Test_SQLFunction_1</stringProp>
            <stringProp name="Argument.desc">TestSQLFunction </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_SQLFunction_2" elementType="Argument">
            <stringProp name="Argument.name">Test_SQLFunction_2</stringProp>
            <stringProp name="Argument.value">Test_SQLFunction_2</stringProp>
            <stringProp name="Argument.desc">TestSQLFunction </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_SQLFunction_3" elementType="Argument">
            <stringProp name="Argument.name">Test_SQLFunction_3</stringProp>
            <stringProp name="Argument.value">Test_SQLFunction_3</stringProp>
            <stringProp name="Argument.desc">TestSQLFunction </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Window_Functions_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Window_Functions_1</stringProp>
            <stringProp name="Argument.value">Test_Window_Functions_1</stringProp>
            <stringProp name="Argument.desc">TestWindowFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Window_Functions_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Window_Functions_2</stringProp>
            <stringProp name="Argument.value">Test_Window_Functions_2</stringProp>
            <stringProp name="Argument.desc">TestWindowFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Window_Functions_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Window_Functions_3</stringProp>
            <stringProp name="Argument.value">Test_Window_Functions_3</stringProp>
            <stringProp name="Argument.desc">TestWindowFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Window_Functions_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Window_Functions_4</stringProp>
            <stringProp name="Argument.value">Test_Window_Functions_4</stringProp>
            <stringProp name="Argument.desc">TestWindowFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Window_Functions_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Window_Functions_5</stringProp>
            <stringProp name="Argument.value">Test_Window_Functions_5</stringProp>
            <stringProp name="Argument.desc">TestWindowFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Window_Functions_6" elementType="Argument">
            <stringProp name="Argument.name">Test_Window_Functions_6</stringProp>
            <stringProp name="Argument.value">Test_Window_Functions_6</stringProp>
            <stringProp name="Argument.desc">TestWindowFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Window_Functions_7" elementType="Argument">
            <stringProp name="Argument.name">Test_Window_Functions_7</stringProp>
            <stringProp name="Argument.value">Test_Window_Functions_7</stringProp>
            <stringProp name="Argument.desc">TestWindowFunctions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Resource_Statistics_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Resource_Statistics_1</stringProp>
            <stringProp name="Argument.value">TEST_RESOURCE_STATISTICS_1</stringProp>
            <stringProp name="Argument.desc">TestResourceStatistics</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Resource_Statistics_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Resource_Statistics_2</stringProp>
            <stringProp name="Argument.value">TEST_RESOURCE_STATISTICS_2</stringProp>
            <stringProp name="Argument.desc">TestResourceStatistics</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Resource_Statistics_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Resource_Statistics_3</stringProp>
            <stringProp name="Argument.value">TEST_RESOURCE_STATISTICS_3</stringProp>
            <stringProp name="Argument.desc">TestResourceStatistics</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Resource_Statistics_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Resource_Statistics_4</stringProp>
            <stringProp name="Argument.value">TEST_RESOURCE_STATISTICS_4</stringProp>
            <stringProp name="Argument.desc">TestResourceStatistics</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Resource_Statistics_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Resource_Statistics_5</stringProp>
            <stringProp name="Argument.value">TEST_RESOURCE_STATISTICS_5</stringProp>
            <stringProp name="Argument.desc">TestResourceStatistics</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Resource_Statistics_6" elementType="Argument">
            <stringProp name="Argument.name">Test_Resource_Statistics_6</stringProp>
            <stringProp name="Argument.value">TEST_RESOURCE_STATISTICS_6</stringProp>
            <stringProp name="Argument.desc">TestResourceStatistics</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Cast_Case_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Cast_Case_1</stringProp>
            <stringProp name="Argument.value">Test_Cast_Case_1</stringProp>
            <stringProp name="Argument.desc">TestCastCase</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Cast_Case_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Cast_Case_2</stringProp>
            <stringProp name="Argument.value">Test_Cast_Case_2</stringProp>
            <stringProp name="Argument.desc">TestCastCase</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Cast_Case_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Cast_Case_3</stringProp>
            <stringProp name="Argument.value">Test_Cast_Case_3</stringProp>
            <stringProp name="Argument.desc">TestCastCase</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Cast_Case_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Cast_Case_4</stringProp>
            <stringProp name="Argument.value">Test_Cast_Case_4</stringProp>
            <stringProp name="Argument.desc">TestCastCase</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Cast_Case_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Cast_Case_5</stringProp>
            <stringProp name="Argument.value">Test_Cast_Case_5</stringProp>
            <stringProp name="Argument.desc">TestCastCase</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Cast_Case_6" elementType="Argument">
            <stringProp name="Argument.name">Test_Cast_Case_6</stringProp>
            <stringProp name="Argument.value">Test_Cast_Case_6</stringProp>
            <stringProp name="Argument.desc">TestCastCase</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_1" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_1</stringProp>
            <stringProp name="Argument.value">Test_External_Table_1</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_2" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_2</stringProp>
            <stringProp name="Argument.value">Test_External_Table_2</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_3" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_3</stringProp>
            <stringProp name="Argument.value">Test_External_Table_3</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_4" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_4</stringProp>
            <stringProp name="Argument.value">Test_External_Table_4</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_5" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_5</stringProp>
            <stringProp name="Argument.value">Test_External_Table_5</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_6" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_6</stringProp>
            <stringProp name="Argument.value">Test_External_Table_6</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_7" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_7</stringProp>
            <stringProp name="Argument.value">Test_External_Table_7</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_External_Table_8" elementType="Argument">
            <stringProp name="Argument.name">Test_External_Table_8</stringProp>
            <stringProp name="Argument.value">test_external_table_8</stringProp>
            <stringProp name="Argument.desc">TestExternalTable</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_1" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_1</stringProp>
            <stringProp name="Argument.value">Test_DBLink_1</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_2" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_2</stringProp>
            <stringProp name="Argument.value">TEST_DBLINK_2</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_3" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_3</stringProp>
            <stringProp name="Argument.value">Test_DBLink_3</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_4" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_4</stringProp>
            <stringProp name="Argument.value">Test_DBLink_4</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_5" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_5</stringProp>
            <stringProp name="Argument.value">Test_DBLink_5</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_6" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_6</stringProp>
            <stringProp name="Argument.value">Test_DBLink_6</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_7" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_7</stringProp>
            <stringProp name="Argument.value">Test_DBLink_7</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_8" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_8</stringProp>
            <stringProp name="Argument.value">TEST_DBLINK_8</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_9" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_9</stringProp>
            <stringProp name="Argument.value">Test_DBLink_9</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_10" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_10</stringProp>
            <stringProp name="Argument.value">Test_DBLink_10</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_11" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_11</stringProp>
            <stringProp name="Argument.value">Test_DBLink_11</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_12" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_12</stringProp>
            <stringProp name="Argument.value">test_dblink_12</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_13" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_13</stringProp>
            <stringProp name="Argument.value">test_dblink_13</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_14" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_14</stringProp>
            <stringProp name="Argument.value">test_dblink_14</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_15" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_15</stringProp>
            <stringProp name="Argument.value">test_dblink_15</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_16" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_16</stringProp>
            <stringProp name="Argument.value">test_dblink_16</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_DBLink_17" elementType="Argument">
            <stringProp name="Argument.name">Test_DBLink_17</stringProp>
            <stringProp name="Argument.value">test_dblink_17</stringProp>
            <stringProp name="Argument.desc">TestDatabaseLink</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_1</stringProp>
            <stringProp name="Argument.value">Test_Others_1</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_2</stringProp>
            <stringProp name="Argument.value">Test_Others_2</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_3</stringProp>
            <stringProp name="Argument.value">Test_Others_3</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_4</stringProp>
            <stringProp name="Argument.value">Test_Others_4</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_5</stringProp>
            <stringProp name="Argument.value">Test_Others_5</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_6" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_6</stringProp>
            <stringProp name="Argument.value">TEST_OTHERS_6</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_7" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_7</stringProp>
            <stringProp name="Argument.value">TEST_OTHERS_7</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_8" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_8</stringProp>
            <stringProp name="Argument.value">Test_Others_8</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_9" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_9</stringProp>
            <stringProp name="Argument.value">Test_Others_9</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Others_10" elementType="Argument">
            <stringProp name="Argument.name">Test_Others_10</stringProp>
            <stringProp name="Argument.value">Test_Others_10</stringProp>
            <stringProp name="Argument.desc">TestOthers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonym_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonym_1</stringProp>
            <stringProp name="Argument.value">Test_Synonym_1</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonym_2" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonym_2</stringProp>
            <stringProp name="Argument.value">Test_Synonym_2</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Synonym_3" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonym_3</stringProp>
            <stringProp name="Argument.value">Test_Synonym_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
          </elementProp>
          <elementProp name="Test_Synonym_4" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonym_4</stringProp>
            <stringProp name="Argument.value">Test_Synonym_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
          </elementProp>
          <elementProp name="Test_Synonym_5" elementType="Argument">
            <stringProp name="Argument.name">Test_Synonym_5</stringProp>
            <stringProp name="Argument.value">Test_Synonym_5</stringProp>
            <stringProp name="Argument.desc">TestSynonyms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="resource_group_1" elementType="Argument">
            <stringProp name="Argument.name">resource_group_1</stringProp>
            <stringProp name="Argument.value">TEST1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">resource group</stringProp>
          </elementProp>
          <elementProp name="resource_group_2" elementType="Argument">
            <stringProp name="Argument.name">resource_group_2</stringProp>
            <stringProp name="Argument.value">TEST2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">resource group</stringProp>
          </elementProp>
          <elementProp name="oracle_link" elementType="Argument">
            <stringProp name="Argument.name">oracle_link</stringProp>
            <stringProp name="Argument.value">ORACLE_LINK</stringProp>
            <stringProp name="Argument.desc">oracle DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oracle_user" elementType="Argument">
            <stringProp name="Argument.name">oracle_user</stringProp>
            <stringProp name="Argument.value">testlink1</stringProp>
            <stringProp name="Argument.desc">oracle DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oracle_password" elementType="Argument">
            <stringProp name="Argument.name">oracle_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">oracle DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oracle_dblink_url" elementType="Argument">
            <stringProp name="Argument.name">oracle_dblink_url</stringProp>
            <stringProp name="Argument.value">jdbc:oracle:thin:@192.168.1.73:1521:xe</stringProp>
            <stringProp name="Argument.desc">oracle DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sqlserver_link" elementType="Argument">
            <stringProp name="Argument.name">sqlserver_link</stringProp>
            <stringProp name="Argument.value">SQLSERVER_LINK</stringProp>
            <stringProp name="Argument.desc">sqlserver DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sqlserver_user" elementType="Argument">
            <stringProp name="Argument.name">sqlserver_user</stringProp>
            <stringProp name="Argument.value">sa</stringProp>
            <stringProp name="Argument.desc">sqlserver DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sqlserver_password" elementType="Argument">
            <stringProp name="Argument.name">sqlserver_password</stringProp>
            <stringProp name="Argument.value">LinkoopDB123</stringProp>
            <stringProp name="Argument.desc">sqlserver DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sqlserver_dblink_url" elementType="Argument">
            <stringProp name="Argument.name">sqlserver_dblink_url</stringProp>
            <stringProp name="Argument.value">jdbc:sqlserver://192.168.1.73;Database=insen</stringProp>
            <stringProp name="Argument.desc">sqlserver DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sqlserver_dblink_url_upperLower" elementType="Argument">
            <stringProp name="Argument.name">sqlserver_dblink_url_upperLower</stringProp>
            <stringProp name="Argument.value">jdbc:sqlserver://192.168.1.73;Database=sen</stringProp>
            <stringProp name="Argument.desc">sqlserver DB Link caseSensitive</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sqlserver_dblink_schema" elementType="Argument">
            <stringProp name="Argument.name">sqlserver_dblink_schema</stringProp>
            <stringProp name="Argument.value">dbo</stringProp>
            <stringProp name="Argument.desc">sqlserver DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_link" elementType="Argument">
            <stringProp name="Argument.name">mysql_link</stringProp>
            <stringProp name="Argument.value">MYSQL_LINK</stringProp>
            <stringProp name="Argument.desc">mysql DB link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_user" elementType="Argument">
            <stringProp name="Argument.name">mysql_user</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.desc">mysql DB link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_password" elementType="Argument">
            <stringProp name="Argument.name">mysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">mysql DB link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_dblink_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_dblink_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3307/ldb_test</stringProp>
            <stringProp name="Argument.desc">mysql DB link              </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_dblink_url_upperLower" elementType="Argument">
            <stringProp name="Argument.name">mysql_dblink_url_upperLower</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3306/ldb_test</stringProp>
            <stringProp name="Argument.desc">mysql DB link caseSensitive</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postgres_link" elementType="Argument">
            <stringProp name="Argument.name">postgres_link</stringProp>
            <stringProp name="Argument.value">POSTGRES_LINK</stringProp>
            <stringProp name="Argument.desc">postgres DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postgres_link_lower" elementType="Argument">
            <stringProp name="Argument.name">postgres_link_lower</stringProp>
            <stringProp name="Argument.value">postgres_link</stringProp>
            <stringProp name="Argument.desc">postgres DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postgres_user" elementType="Argument">
            <stringProp name="Argument.name">postgres_user</stringProp>
            <stringProp name="Argument.value">postgres</stringProp>
            <stringProp name="Argument.desc">postgres DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postgres_password" elementType="Argument">
            <stringProp name="Argument.name">postgres_password</stringProp>
            <stringProp name="Argument.value">linkoopdb</stringProp>
            <stringProp name="Argument.desc">postgres DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postgres_dblink_url" elementType="Argument">
            <stringProp name="Argument.name">postgres_dblink_url</stringProp>
            <stringProp name="Argument.value">jdbc:postgresql://192.168.1.73:5432/postgres</stringProp>
            <stringProp name="Argument.desc">postgres DB Link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_link" elementType="Argument">
            <stringProp name="Argument.name">hive_link</stringProp>
            <stringProp name="Argument.value">HIVE_LINK</stringProp>
            <stringProp name="Argument.desc">hive db link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hbase" elementType="Argument">
            <stringProp name="Argument.name">hbase</stringProp>
            <stringProp name="Argument.value">hbase_test</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="csv_url_1" elementType="Argument">
            <stringProp name="Argument.name">csv_url_1</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/inventory.csv</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="csv_url_2" elementType="Argument">
            <stringProp name="Argument.name">csv_url_2</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/inventory1.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="csv_dir" elementType="Argument">
            <stringProp name="Argument.name">csv_dir</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/csv_test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="parquet_url_1" elementType="Argument">
            <stringProp name="Argument.name">parquet_url_1</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/item.parquet</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="parquet_url_2" elementType="Argument">
            <stringProp name="Argument.name">parquet_url_2</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/item1.parquet</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="parquet_dir" elementType="Argument">
            <stringProp name="Argument.name">parquet_dir</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/parquet_test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="hive_test_1" elementType="Argument">
            <stringProp name="Argument.name">hive_test_1</stringProp>
            <stringProp name="Argument.value">linkoopdb_external_test</stringProp>
            <stringProp name="Argument.desc">external table   textfile</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_test_2" elementType="Argument">
            <stringProp name="Argument.name">hive_test_2</stringProp>
            <stringProp name="Argument.value">linkoopdb_external_test2</stringProp>
            <stringProp name="Argument.desc">external table   orc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oracle_driver" elementType="Argument">
            <stringProp name="Argument.name">oracle_driver</stringProp>
            <stringProp name="Argument.value">oracle.jdbc.driver.OracleDriver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="mysql_driver" elementType="Argument">
            <stringProp name="Argument.name">mysql_driver</stringProp>
            <stringProp name="Argument.value">com.mysql.jdbc.Driver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="sqlserver_driver" elementType="Argument">
            <stringProp name="Argument.name">sqlserver_driver</stringProp>
            <stringProp name="Argument.value">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="postgres_driver" elementType="Argument">
            <stringProp name="Argument.name">postgres_driver</stringProp>
            <stringProp name="Argument.value">org.postgresql.Driver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">external table</stringProp>
          </elementProp>
          <elementProp name="naive_bayes_1" elementType="Argument">
            <stringProp name="Argument.name">naive_bayes_1</stringProp>
            <stringProp name="Argument.value">nb_training_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="naive_bayes_2" elementType="Argument">
            <stringProp name="Argument.name">naive_bayes_2</stringProp>
            <stringProp name="Argument.value">nb_data_to_predict</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="naive_bayes_model_1" elementType="Argument">
            <stringProp name="Argument.name">naive_bayes_model_1</stringProp>
            <stringProp name="Argument.value">nb_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="naive_bayes_model_2" elementType="Argument">
            <stringProp name="Argument.name">naive_bayes_model_2</stringProp>
            <stringProp name="Argument.value">nb_model_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="decision_tree_1" elementType="Argument">
            <stringProp name="Argument.name">decision_tree_1</stringProp>
            <stringProp name="Argument.value">dt_training_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="decision_tree_2" elementType="Argument">
            <stringProp name="Argument.name">decision_tree_2</stringProp>
            <stringProp name="Argument.value">dt_data_to_predict</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="decision_tree_model_1" elementType="Argument">
            <stringProp name="Argument.name">decision_tree_model_1</stringProp>
            <stringProp name="Argument.value">dt_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="decision_tree_model_2" elementType="Argument">
            <stringProp name="Argument.name">decision_tree_model_2</stringProp>
            <stringProp name="Argument.value">dt_model_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="als_1" elementType="Argument">
            <stringProp name="Argument.name">als_1</stringProp>
            <stringProp name="Argument.value">als_1</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="als_model_1" elementType="Argument">
            <stringProp name="Argument.name">als_model_1</stringProp>
            <stringProp name="Argument.value">als_model_1</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="als_model_2" elementType="Argument">
            <stringProp name="Argument.name">als_model_2</stringProp>
            <stringProp name="Argument.value">als_model_2</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fpgrowth_1" elementType="Argument">
            <stringProp name="Argument.name">fpgrowth_1</stringProp>
            <stringProp name="Argument.value">fpgrowth_train_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="fpgrowth_2" elementType="Argument">
            <stringProp name="Argument.name">fpgrowth_2</stringProp>
            <stringProp name="Argument.value">fpgrowth_predict_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="fpgrowth_model_1" elementType="Argument">
            <stringProp name="Argument.name">fpgrowth_model_1</stringProp>
            <stringProp name="Argument.value">fpgrowth_model_1</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fpgrowth_model_2" elementType="Argument">
            <stringProp name="Argument.name">fpgrowth_model_2</stringProp>
            <stringProp name="Argument.value">fpgrowth_model_2</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kmeans_1" elementType="Argument">
            <stringProp name="Argument.name">kmeans_1</stringProp>
            <stringProp name="Argument.value">kmeans_train_data </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="kmeans_2" elementType="Argument">
            <stringProp name="Argument.name">kmeans_2</stringProp>
            <stringProp name="Argument.value">kmeans_predict_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="kmeans_model_1" elementType="Argument">
            <stringProp name="Argument.name">kmeans_model_1</stringProp>
            <stringProp name="Argument.value">kmeans_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="kmeans_model_2" elementType="Argument">
            <stringProp name="Argument.name">kmeans_model_2</stringProp>
            <stringProp name="Argument.value">kmeans_model_2</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="graph_1" elementType="Argument">
            <stringProp name="Argument.name">graph_1</stringProp>
            <stringProp name="Argument.value">graph_1</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="graph_2" elementType="Argument">
            <stringProp name="Argument.name">graph_2</stringProp>
            <stringProp name="Argument.value">graph_2</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="logistic_1" elementType="Argument">
            <stringProp name="Argument.name">logistic_1</stringProp>
            <stringProp name="Argument.value">logisticregression_training_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="logistic_2" elementType="Argument">
            <stringProp name="Argument.name">logistic_2</stringProp>
            <stringProp name="Argument.value">logisticregression_predict_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="logistic_model_1" elementType="Argument">
            <stringProp name="Argument.name">logistic_model_1</stringProp>
            <stringProp name="Argument.value">logisticregression_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="logistic_model_2" elementType="Argument">
            <stringProp name="Argument.name">logistic_model_2</stringProp>
            <stringProp name="Argument.value">logisticregression_model_2</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="linearsvc_1" elementType="Argument">
            <stringProp name="Argument.name">linearsvc_1</stringProp>
            <stringProp name="Argument.value">linearsvc_train_data </stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="linearsvc_2" elementType="Argument">
            <stringProp name="Argument.name">linearsvc_2</stringProp>
            <stringProp name="Argument.value">linearsvc_predict_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="linearsvc_model" elementType="Argument">
            <stringProp name="Argument.name">linearsvc_model</stringProp>
            <stringProp name="Argument.value">linearsvc_model</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="onevsrest_1" elementType="Argument">
            <stringProp name="Argument.name">onevsrest_1</stringProp>
            <stringProp name="Argument.value">onevsrest_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="onevsrest_model" elementType="Argument">
            <stringProp name="Argument.name">onevsrest_model</stringProp>
            <stringProp name="Argument.value">onevsrest_model</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="multilayer_perceptron_classifier_1" elementType="Argument">
            <stringProp name="Argument.name">multilayer_perceptron_classifier_1</stringProp>
            <stringProp name="Argument.value">multilayer_perceptron_classifier_train_data </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="multilayer_perceptron_classifier_2" elementType="Argument">
            <stringProp name="Argument.name">multilayer_perceptron_classifier_2</stringProp>
            <stringProp name="Argument.value">multilayer_perceptron_classifier_predict_data </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="multilayer_model" elementType="Argument">
            <stringProp name="Argument.name">multilayer_model</stringProp>
            <stringProp name="Argument.value">multilayer_model</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="decision_tree_regression_1" elementType="Argument">
            <stringProp name="Argument.name">decision_tree_regression_1</stringProp>
            <stringProp name="Argument.value">decision_tree_regression_train_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="decision_tree_regression_2" elementType="Argument">
            <stringProp name="Argument.name">decision_tree_regression_2</stringProp>
            <stringProp name="Argument.value">decision_tree_regression_predict_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="decision_tree_regression_model" elementType="Argument">
            <stringProp name="Argument.name">decision_tree_regression_model</stringProp>
            <stringProp name="Argument.value">decision_tree_regression_model</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="random_forest_classifier_1" elementType="Argument">
            <stringProp name="Argument.name">random_forest_classifier_1</stringProp>
            <stringProp name="Argument.value">random_forest_classifier_train_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="random_forest_classifier_2" elementType="Argument">
            <stringProp name="Argument.name">random_forest_classifier_2</stringProp>
            <stringProp name="Argument.value">random_forest_classifier_predict_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="random_forest_classifier_model" elementType="Argument">
            <stringProp name="Argument.name">random_forest_classifier_model</stringProp>
            <stringProp name="Argument.value">random_forest_classifier_model</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
          </elementProp>
          <elementProp name="gbtclassifier_train_1" elementType="Argument">
            <stringProp name="Argument.name">gbtclassifier_train_1</stringProp>
            <stringProp name="Argument.value">gbtclassifier_train_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gbtclassifier_predict_2" elementType="Argument">
            <stringProp name="Argument.name">gbtclassifier_predict_2</stringProp>
            <stringProp name="Argument.value">gbtclassifier_predict_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gbtclassifier_model" elementType="Argument">
            <stringProp name="Argument.name">gbtclassifier_model</stringProp>
            <stringProp name="Argument.value">gbtclassifier_model</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="linear_regression_1" elementType="Argument">
            <stringProp name="Argument.name">linear_regression_1</stringProp>
            <stringProp name="Argument.value">linear_regression_train_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="linear_regression_2" elementType="Argument">
            <stringProp name="Argument.name">linear_regression_2</stringProp>
            <stringProp name="Argument.value">linear_regression_predict_data</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="linear_regression_model" elementType="Argument">
            <stringProp name="Argument.name">linear_regression_model</stringProp>
            <stringProp name="Argument.value">linear_regression_model</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_AI_1" elementType="Argument">
            <stringProp name="Argument.name">TEST_AI_1</stringProp>
            <stringProp name="Argument.value">TEST_AI_1</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_AI_2" elementType="Argument">
            <stringProp name="Argument.name">TEST_AI_2</stringProp>
            <stringProp name="Argument.value">TEST_AI_2</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_AI_3" elementType="Argument">
            <stringProp name="Argument.name">TEST_AI_3</stringProp>
            <stringProp name="Argument.value">TEST_AI_3</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_AI_4" elementType="Argument">
            <stringProp name="Argument.name">TEST_AI_4</stringProp>
            <stringProp name="Argument.value">TEST_AI_4</stringProp>
            <stringProp name="Argument.desc">AI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Test_Feature_Engineering_1" elementType="Argument">
            <stringProp name="Argument.name">Test_Feature_Engineering_1</stringProp>
            <stringProp name="Argument.value">Test_Feature_Engineering_1</stringProp>
            <stringProp name="Argument.desc">FeatureEngineering</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="feature_hasher_1" elementType="Argument">
            <stringProp name="Argument.name">feature_hasher_1</stringProp>
            <stringProp name="Argument.value">feature_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureEngineering</stringProp>
          </elementProp>
          <elementProp name="feature_hasher_2" elementType="Argument">
            <stringProp name="Argument.name">feature_hasher_2</stringProp>
            <stringProp name="Argument.value">featurehashing_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureEngineering</stringProp>
          </elementProp>
          <elementProp name="vector_slicer_1" elementType="Argument">
            <stringProp name="Argument.name">vector_slicer_1</stringProp>
            <stringProp name="Argument.value">vector_slicer_data</stringProp>
            <stringProp name="Argument.desc">FeatureEngineering</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tokenizer_model_1" elementType="Argument">
            <stringProp name="Argument.name">tokenizer_model_1</stringProp>
            <stringProp name="Argument.value">tokenizer_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
          </elementProp>
          <elementProp name="hashingtf_model_1" elementType="Argument">
            <stringProp name="Argument.name">hashingtf_model_1</stringProp>
            <stringProp name="Argument.value">hashingtf_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
          </elementProp>
          <elementProp name="idf_1" elementType="Argument">
            <stringProp name="Argument.name">idf_1</stringProp>
            <stringProp name="Argument.value">idf_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
          </elementProp>
          <elementProp name="idf_model_1" elementType="Argument">
            <stringProp name="Argument.name">idf_model_1</stringProp>
            <stringProp name="Argument.value">idf_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
          </elementProp>
          <elementProp name="word2vec_1" elementType="Argument">
            <stringProp name="Argument.name">word2vec_1</stringProp>
            <stringProp name="Argument.value">word2vec_data</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="word2vec_model_1" elementType="Argument">
            <stringProp name="Argument.name">word2vec_model_1</stringProp>
            <stringProp name="Argument.value">word2vec_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
          </elementProp>
          <elementProp name="countvectorizer_1" elementType="Argument">
            <stringProp name="Argument.name">countvectorizer_1</stringProp>
            <stringProp name="Argument.value">countvectorizer_data</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="countvectorizer_model_1" elementType="Argument">
            <stringProp name="Argument.name">countvectorizer_model_1</stringProp>
            <stringProp name="Argument.value">countvectorizer_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
          </elementProp>
          <elementProp name="featurehasher_1" elementType="Argument">
            <stringProp name="Argument.name">featurehasher_1</stringProp>
            <stringProp name="Argument.value">featurehasher_data </stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="featurehasher_model_1" elementType="Argument">
            <stringProp name="Argument.name">featurehasher_model_1</stringProp>
            <stringProp name="Argument.value">featurehasher_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Extracting</stringProp>
          </elementProp>
          <elementProp name="rformula_1" elementType="Argument">
            <stringProp name="Argument.name">rformula_1</stringProp>
            <stringProp name="Argument.value">rformula_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Selecting</stringProp>
          </elementProp>
          <elementProp name="rformula_model_1" elementType="Argument">
            <stringProp name="Argument.name">rformula_model_1</stringProp>
            <stringProp name="Argument.value">rformula_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Selecting</stringProp>
          </elementProp>
          <elementProp name="chisqselector_1" elementType="Argument">
            <stringProp name="Argument.name">chisqselector_1</stringProp>
            <stringProp name="Argument.value">chisqselector_data</stringProp>
            <stringProp name="Argument.desc">Feature Selecting</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="chisqselector_model_1" elementType="Argument">
            <stringProp name="Argument.name">chisqselector_model_1</stringProp>
            <stringProp name="Argument.value">chisqselector_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Selecting</stringProp>
          </elementProp>
          <elementProp name="vectorslicer_1" elementType="Argument">
            <stringProp name="Argument.name">vectorslicer_1</stringProp>
            <stringProp name="Argument.value">vectorslicer_data</stringProp>
            <stringProp name="Argument.desc">Feature Selecting</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="vectorslicer_model_1" elementType="Argument">
            <stringProp name="Argument.name">vectorslicer_model_1</stringProp>
            <stringProp name="Argument.value">vectorslicer_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Feature Selecting</stringProp>
          </elementProp>
          <elementProp name="minmax_1" elementType="Argument">
            <stringProp name="Argument.name">minmax_1</stringProp>
            <stringProp name="Argument.value">minmax_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="minmax_model_1" elementType="Argument">
            <stringProp name="Argument.name">minmax_model_1</stringProp>
            <stringProp name="Argument.value">minmax_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="maxabs_model_1" elementType="Argument">
            <stringProp name="Argument.name">maxabs_model_1</stringProp>
            <stringProp name="Argument.value">maxabs_model_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="stringindexer_1" elementType="Argument">
            <stringProp name="Argument.name">stringindexer_1</stringProp>
            <stringProp name="Argument.value">stringindexer_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="string_indexer_model_1" elementType="Argument">
            <stringProp name="Argument.name">string_indexer_model_1</stringProp>
            <stringProp name="Argument.value">string_indexer_model_1</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="index_to_string_model_1" elementType="Argument">
            <stringProp name="Argument.name">index_to_string_model_1</stringProp>
            <stringProp name="Argument.value">index_to_string_model_1</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="onehotencoder_1" elementType="Argument">
            <stringProp name="Argument.name">onehotencoder_1</stringProp>
            <stringProp name="Argument.value">onehotencoder_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="onehotencoder_estimator_model_1" elementType="Argument">
            <stringProp name="Argument.name">onehotencoder_estimator_model_1</stringProp>
            <stringProp name="Argument.value">onehotencoder_estimator_model_1</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="normalizer_1" elementType="Argument">
            <stringProp name="Argument.name">normalizer_1</stringProp>
            <stringProp name="Argument.value">normalizer_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="normalizer_model_1" elementType="Argument">
            <stringProp name="Argument.name">normalizer_model_1</stringProp>
            <stringProp name="Argument.value">normalizer_model_1</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="standard_scaler_1" elementType="Argument">
            <stringProp name="Argument.name">standard_scaler_1</stringProp>
            <stringProp name="Argument.value">standard_scaler_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="standard_scaler_model" elementType="Argument">
            <stringProp name="Argument.name">standard_scaler_model</stringProp>
            <stringProp name="Argument.value">standard_scaler_model</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="user_defined_type" elementType="Argument">
            <stringProp name="Argument.name">user_defined_type</stringProp>
            <stringProp name="Argument.value">MASK_TYPE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">data type another name</stringProp>
          </elementProp>
          <elementProp name="structure_type_1" elementType="Argument">
            <stringProp name="Argument.name">structure_type_1</stringProp>
            <stringProp name="Argument.value">STRUCTURE_TYPE_1</stringProp>
            <stringProp name="Argument.desc">structure type </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="structure_type_2" elementType="Argument">
            <stringProp name="Argument.name">structure_type_2</stringProp>
            <stringProp name="Argument.value">STRUCTURE_TYPE_2</stringProp>
            <stringProp name="Argument.desc">structure type </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="structure_type_3" elementType="Argument">
            <stringProp name="Argument.name">structure_type_3</stringProp>
            <stringProp name="Argument.value">STRUCTURE_TYPE_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">structure type </stringProp>
          </elementProp>
          <elementProp name="imputer_1" elementType="Argument">
            <stringProp name="Argument.name">imputer_1</stringProp>
            <stringProp name="Argument.value">imputer_data</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
          <elementProp name="imputer_model_1" elementType="Argument">
            <stringProp name="Argument.name">imputer_model_1</stringProp>
            <stringProp name="Argument.value">imputer_model</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">FeatureTransformers</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="admin" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${a}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${u1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${u1}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CORE: null与基本完整性约束 " enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CORE: null与基本完整性约束 " enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="241 F381 Extended schema manipulation " enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="242 F381-01 ALTER TABLE statement: ALTER COLUMN clause " enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="query">drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 CREATE TABLE ${Test_Extended_Schema_Manipulation_1} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE ${Test_Extended_Schema_Manipulation_1} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c1 int;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c1 int;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-001" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C1&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1618932450">INTEGER</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c2 smallint;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c2 smallint;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-002" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C2&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="176095624">SMALLINT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c3 bigint;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c3 bigint;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-003" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C3&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1959128815">BIGINT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c4 real;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c4 real;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-004" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C4&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1770063567">DOUBLE PRECISION</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c5 float;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c5 float;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-005" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C5&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1770063567">DOUBLE PRECISION</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c6 numeric(10,4);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c6 numeric(10,4);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-006" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C6&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1282431251">NUMERIC</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c7 date;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c7 date;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-007" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C7&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2090926">DATE</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c8 timestamp;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c8 timestamp;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-008" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C8&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1453246218">TIMESTAMP</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} add column c9 varchar(8000);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add column c9 varchar(8000);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 TC-009" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_type from information_schema.columns where table_name = &apos;${Test_Extended_Schema_Manipulation_1}&apos; and column_name = &apos;C9&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1344909767">CHARACTER VARYING</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 alter table ${Test_Extended_Schema_Manipulation_1} drop column c1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} drop column c1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-01 drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="query">drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="243 F381-02 244 F381-03 ADD/DROP CONSTRAINT known issue" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="query">drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;
drop table ${Test_Extended_Schema_Manipulation_2} if exists cascade;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 CREATE TABLE ${Test_Extended_Schema_Manipulation_1} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE ${Test_Extended_Schema_Manipulation_1} (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 INSERT INTO ${Test_Extended_Schema_Manipulation_1} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30), (7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30), (7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30), (7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO ${Test_Extended_Schema_Manipulation_1} VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30),
(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30),
(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30),
(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 CREATE TABLE ${Test_Extended_Schema_Manipulation_2} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20)); " enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE TABLE ${Test_Extended_Schema_Manipulation_2} (DEPTNO INT,DNAME VARCHAR(20),LOC VARCHAR(20));  </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 INSERT INTO ${Test_Extended_Schema_Manipulation_2} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;),  (20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;),   (30,&apos;SALES&apos;,&apos;CHICAGO&apos;),   (40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;); " enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO ${Test_Extended_Schema_Manipulation_2} VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;), 
(20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;),  
(30,&apos;SALES&apos;,&apos;CHICAGO&apos;),  
(40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;); </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 alter table ${Test_Extended_Schema_Manipulation_1} alter sal set not null;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} alter sal set not null;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-001E" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(sal) values (null);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 alter table ${Test_Extended_Schema_Manipulation_1} alter sal set null;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} alter sal set null;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-002" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add constraint pk_1 primary key (empno);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-003E" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add constraint pk_2 primary key (deptno);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="728404912">primary key already exist in statement [alter table ${Test_Extended_Schema_Manipulation_1} add constraint pk_2 primary key (deptno)]</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-004" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(empno) values (1);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-005E" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(empno) values (1);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="243 F381-03 TC-001" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_1} DROP CONSTRAINT pk_1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 insert into ${Test_Extended_Schema_Manipulation_1}(empno) values (1);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(empno) values (1);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-006" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add constraint ck_1 check(job=&apos;工人&apos;or job=&apos;教师&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-007" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(job) values (&apos;工人&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-008" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(job) values (&apos;教师&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-009E" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(job) values (&apos;default_test&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="243 F381-03 TC-002" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_1} DROP CONSTRAINT ck_1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[241] insert into ${Test_Extended_Schema_Manipulation_1}(job) values (&apos;default_test&apos;);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(job) values (&apos;default_test&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-010" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} alter column sal generated by default as identity (start with 9);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-011" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(sal) values (default);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 select * from ${Test_Extended_Schema_Manipulation_1};" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from ${Test_Extended_Schema_Manipulation_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[241] ALTER TABLE ${Test_Extended_Schema_Manipulation_1} DROP CONSTRAINT def_1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_1} DROP CONSTRAINT def_1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-012" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(sal) values (666);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 select * from ${Test_Extended_Schema_Manipulation_1};" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from ${Test_Extended_Schema_Manipulation_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-013" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_1} ADD CONSTRAINT unique_1 unique (ename,sal);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-014" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(sal) values (111);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-015E" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(sal) values (111);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-016" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(ename) values (&apos;唯一值&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-017E" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(ename) values (&apos;唯一值&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="243 F381-03 TC-003" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_1} DROP CONSTRAINT unique_1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-018" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(comm) values (111);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-019" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Extended_Schema_Manipulation_1}(sal) values (111);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-020" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_2} ADD CONSTRAINT unique_2 unique (deptno);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-021" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Extended_Schema_Manipulation_1} add constraint fk_1 foreign key (deptno) references ${Test_Extended_Schema_Manipulation_2} (deptno);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-022" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO ${Test_Extended_Schema_Manipulation_1} VALUES (7369,&apos;test&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-14&apos;,800,NULL,20);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-023E" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO ${Test_Extended_Schema_Manipulation_1} VALUES (7369,&apos;test&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,66);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="243 F381-03 TC-004" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_1} DROP CONSTRAINT fk_1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="243 F381-03 TC-005" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">ALTER TABLE ${Test_Extended_Schema_Manipulation_2} DROP CONSTRAINT unique_2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 TC-024" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">INSERT INTO ${Test_Extended_Schema_Manipulation_1} VALUES (7369,&apos;test&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-19&apos;,800,NULL,65),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,66);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2524">OK</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="242 F381-02 drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="query">drop table ${Test_Extended_Schema_Manipulation_1} if exists cascade;
drop table ${Test_Extended_Schema_Manipulation_2} if exists cascade;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="599 E141-07  default value" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  drop table ${Test_Others_2} if exists cascade;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table ${Test_Others_2} if exists cascade;
drop table ${Test_Others_3} if exists cascade;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  create table ${Test_Others_2}" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table ${Test_Others_2} (
tsmallint smallint default 1,
tint int default 2,
tbigint bigint default 3,
treal real default 4.2,
tfloat float default 5.2,
tdouble double default 6.2,
tdecimal decimal(10,2) default 7.2,
tnumeric numeric(10,2) default 8.2,
tdate date default current_date,
ttimestamp timestamp default current_timestamp,
tchar char(200) default &apos;char&apos;,
tvarchar varchar(200) default &apos;varchar&apos;,
tbinary binary(100) default &apos;0x10110110&apos;,
tvarbinary varbinary(100) default &apos;0x10110110&apos;,
tblob BLOB default &apos;BLOB&apos;,
tclob CLOB default &apos;CLOB&apos;,
tbit bit default 1,
tcharacter character varying(100) default &apos;character varying&apos;,
tcharv char varying(100) default &apos;char varying&apos;,
tlongvarchar longvarchar default &apos;longvarchar&apos;,
tcharacterl character large object(100) default &apos;character large object&apos;,
tcharl char large object(100) default &apos;char large object&apos;,
tbinaryv binary varying(100) default &apos;0x10110110&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where COLUMN_NAME = &apos;TINT&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where COLUMN_NAME = &apos;TINT&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  insert into ${Test_Others_2}" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Others_2} values (111,111,111,111.22,111.22,111.22,111.22,111.22,current_date,current_timestamp, &apos;qqq&apos;,&apos;qqq&apos;, &apos;0x1234567890&apos;, &apos;0x1234567890&apos;, &apos;blob&apos;, &apos;clob&apos;,1, &apos;qqq&apos;, &apos;qqq&apos;, &apos;qqq&apos;, &apos;qqq&apos;, &apos;qqq&apos;,&apos;0x1234567890&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07 TC-001" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select tsmallint from ${Test_Others_2};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="48657">111</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  create table ${Test_Others_3}" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create table ${Test_Others_3} (
id int default 111,
tdate date default &apos;2018-01-02&apos;,
ttimestamp timestamp default &apos;2018-01-02 10:11:12&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  insert into ${Test_Others_3}(id) values (222);" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">insert into ${Test_Others_3}(id) values (222);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07 TC-002" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select id from ${Test_Others_3};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49650">222</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c1 smallint default 1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c1 smallint default 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C1&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C1&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c2 int default 2;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c2 int default 2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C2&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C2&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c3 bigint default 3;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c3 bigint default 3;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C3&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C3&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c4 real default 4.1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c4 real default 4.1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C4&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C4&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c5 float default 5.1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c5 float default 5.1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C5&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C5&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c6 double default 6.1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c6 double default 6.1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C6&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C6&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c7 decimal default 7.1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c7 decimal default 7.1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C7&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C7&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c8 numeric default 8.1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c8 numeric default 8.1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C8&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C8&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c9 date default &apos;2018-08-08&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c9 date default &apos;2018-08-08&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C9&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C9&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c10 timestamp default &apos;2018-08-08 10:11:12&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c10 timestamp default &apos;2018-08-08 10:11:12&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C10&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C10&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c11 char(100) default &apos;char&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c11 char(100) default &apos;char&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C11&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C11&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c12 varchar(100) default &apos;varchar&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c12 varchar(100) default &apos;varchar&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C12&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C12&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c13 binary(100) default &apos;0x10110110&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c13 binary(100) default &apos;0x10110110&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C13&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C13&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c14 varbinary(100) default &apos;0x10110110&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c14 varbinary(100) default &apos;0x10110110&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C14&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C14&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c15 clob default &apos;clob&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c15 clob default &apos;clob&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C15&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C15&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c16 bit default 1;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c16 bit default 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C16&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C16&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c17 character varying(100) default &apos;character varying&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c17 character varying(100) default &apos;character varying&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C17&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C17&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c18 char varying(100) default &apos;char varying&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c18 char varying(100) default &apos;char varying&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07 select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C18&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C18&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07 alter table ${Test_Others_3} add column c19 longvarchar default &apos;longvarchar&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c19 longvarchar default &apos;longvarchar&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C19&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C19&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c20 character large object(100) default &apos;character large object&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c20 character large object(100) default &apos;character large object&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C20&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C20&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c21 character large object(100) default &apos;character large object&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c21 character large object(100) default &apos;character large object&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C21&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C21&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c22 char large object(100) default &apos;char large object&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c22 char large object(100) default &apos;char large object&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C22&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C22&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  alter table ${Test_Others_3} add column c23 binary varying(100) default &apos;0x10110110&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">alter table ${Test_Others_3} add column c23 binary varying(100) default &apos;0x10110110&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C23&apos;;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from information_schema.CONSTRAINT_COLUMN_USAGE where column_name = &apos;C23&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="599 E141-07  drop table ${Test_Others_2} if exists cascade;" enabled="true">
                <stringProp name="dataSource">${a}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop table ${Test_Others_2} if exists cascade;
drop table ${Test_Others_3} if exists cascade;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
