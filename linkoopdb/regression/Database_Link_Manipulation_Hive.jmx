<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host, 192.168.1.71)}</stringProp>
            <stringProp name="Argument.desc">node</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a" elementType="Argument">
            <stringProp name="Argument.name">a</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.desc">dba user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a_password" elementType="Argument">
            <stringProp name="Argument.name">a_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">dba user password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">u_sqlserverlink_1</stringProp>
            <stringProp name="Argument.desc">ordinary user1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u1_password" elementType="Argument">
            <stringProp name="Argument.name">u1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary user1 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">T_USER2</stringProp>
            <stringProp name="Argument.desc">ordinary user2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u2_password" elementType="Argument">
            <stringProp name="Argument.name">u2_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary user2 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">T_USER3</stringProp>
            <stringProp name="Argument.desc">ordinary user3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3_password" elementType="Argument">
            <stringProp name="Argument.name">u3_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary user3 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="basic_data_manipulation_u1" elementType="Argument">
            <stringProp name="Argument.name">basic_data_manipulation_u1</stringProp>
            <stringProp name="Argument.value">basic_data_manipulation_u1</stringProp>
            <stringProp name="Argument.desc">ordinary basic_data_manipulation_u1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="basic_data_manipulation_u1_password" elementType="Argument">
            <stringProp name="Argument.name">basic_data_manipulation_u1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">ordinary basic_data_manipulation_u1 password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="user" elementType="Argument">
            <stringProp name="Argument.name">user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysqluser" elementType="Argument">
            <stringProp name="Argument.name">mysqluser</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_dblink_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_dblink_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3306/wytest</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_driver" elementType="Argument">
            <stringProp name="Argument.name">mysql_driver</stringProp>
            <stringProp name="Argument.value">com.mysql.jdbc.Driver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_ddl_user1" elementType="Argument">
            <stringProp name="Argument.name">t_ddl_user1</stringProp>
            <stringProp name="Argument.value">T_DDL_USER1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_ddl_user1_password" elementType="Argument">
            <stringProp name="Argument.name">t_ddl_user1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user1" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user1</stringProp>
            <stringProp name="Argument.value">u_authorization_user1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user1_password" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user2" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user2</stringProp>
            <stringProp name="Argument.value">u_authorization_user2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u_authorization_user2_password" elementType="Argument">
            <stringProp name="Argument.name">u_authorization_user2_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="parquet_url_1" elementType="Argument">
            <stringProp name="Argument.name">parquet_url_1</stringProp>
            <stringProp name="Argument.value">hdfs://node1:8020/node4/linkoopdb/testdb/externalTable/item.parquet</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sc_enginepallas" elementType="Argument">
            <stringProp name="Argument.name">sc_enginepallas</stringProp>
            <stringProp name="Argument.value">${__P(engine,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mainurl" elementType="Argument">
            <stringProp name="Argument.name">mainurl</stringProp>
            <stringProp name="Argument.value">${__P(mainurl,jdbc:linkoopdb:tcp://192.168.1.71:9105/ldb)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="metaurl" elementType="Argument">
            <stringProp name="Argument.name">metaurl</stringProp>
            <stringProp name="Argument.value">${__P(metaurl,jdbc:linkoopdb:tcp://192.168.1.71:9108/ldb)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_jdbc_db_link_test_user" elementType="Argument">
            <stringProp name="Argument.name">hive_jdbc_db_link_test_user</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_jdbc_db_link_pwd" elementType="Argument">
            <stringProp name="Argument.name">hive_jdbc_db_link_pwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_jdbc_db_link_url" elementType="Argument">
            <stringProp name="Argument.name">hive_jdbc_db_link_url</stringProp>
            <stringProp name="Argument.value">jdbc:hive2://192.168.1.111:10000/default</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_jdbc_db_link_db_config" elementType="Argument">
            <stringProp name="Argument.name">hive_jdbc_db_link_db_config</stringProp>
            <stringProp name="Argument.value">node2_ldb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_jdbc_db_link_name" elementType="Argument">
            <stringProp name="Argument.name">hive_jdbc_db_link_name</stringProp>
            <stringProp name="Argument.value">hive_jdbc_db_link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hive_spark_db_link_name" elementType="Argument">
            <stringProp name="Argument.name">hive_spark_db_link_name</stringProp>
            <stringProp name="Argument.value">hive_spark_db_link</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="ldbdist所需变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ldbdist://192.168.1.70:54321/single/singles.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single/singles.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single/singles.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files/files1.csv,ldbdist://192.168.1.70:54321/files/files2.csv,ldbdist://192.168.1.70:54321/files/files3.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files/files1.csv,ldbdist://192.168.1.70:54321/files/files2.csv,ldbdist://192.168.1.70:54321/files/files3.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files/files1.csv,ldbdist://192.168.1.70:54321/files/files2.csv,ldbdist://192.168.1.70:54321/files/files3.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/single" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/file" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/file</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/file&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/file" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/file</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/file&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files/files[1-3].csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files/files[1-3].csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files/files[1-3].csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/files/files[1-3].csv,ldbdist://192.168.1.70:54321/single" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/files/files[1-3].csv,ldbdist://192.168.1.70:54321/single</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/files/files[1-3].csv,ldbdist://192.168.1.70:54321/single&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/notexist.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/notexist.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/notexist.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/notexist" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/notexist</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/notexist&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang_test/yichang1.csv" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang_test/yichang1.csv</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang_test/yichang1.csv&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/yichang" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/yichang</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/yichang&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/files" elementType="Argument">
            <stringProp name="Argument.name">ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/files</stringProp>
            <stringProp name="Argument.value">&apos;ldbdist://192.168.1.70:54321/single,ldbdist://192.168.1.70:54321/files&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="stream所需变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="stream_u1" elementType="Argument">
            <stringProp name="Argument.name">stream_u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stream_u3" elementType="Argument">
            <stringProp name="Argument.name">stream_u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="admin" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${a}</stringProp>
        <stringProp name="dbUrl">${mainurl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${u1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="dbUrl">${mainurl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="u_authorization_user1" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">u_authorization_user1</stringProp>
        <stringProp name="dbUrl">${url}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">u_authorization_user1</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${basic_data_manipulation_u1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${basic_data_manipulation_u1}</stringProp>
        <stringProp name="dbUrl">${url}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${basic_data_manipulation_u1}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="${t_ddl_user1}" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${t_ddl_user1}</stringProp>
        <stringProp name="dbUrl">${url}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${t_ddl_user1}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${a}</stringProp>
        <stringProp name="dbUrl">${url}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${user}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql node4" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:mysql://${node}:3306/jmeter_istreamsql</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${mysqluser}</stringProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${b}</stringProp>
        <stringProp name="dbUrl">${mysql_dblink_url}</stringProp>
        <stringProp name="driver">${mysql_driver}</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${mysqluser}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="a1" enabled="true">
        <stringProp name="TestPlan.comments">JDBC连接</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">a1</stringProp>
        <stringProp name="dbUrl">${url}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">admin</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="a2" enabled="true">
        <stringProp name="TestPlan.comments">JDBC连接</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">a2</stringProp>
        <stringProp name="dbUrl">${url}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">admin</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="node3_hive" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">node3_hive</stringProp>
        <stringProp name="dbUrl">jdbc:hive2://192.168.1.72:10000/default</stringProp>
        <stringProp name="driver">org.apache.hive.jdbc.HiveDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">hive</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">hive</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="node2_ldb" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">node2_ldb</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://192.168.1.71/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="node5_ldb" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">node5_ldb</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://192.168.1.74:9107/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
        <stringProp name="initQuery"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="dblink hive" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="dblink hive" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP SCHEMA" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP SCHEMA TEST_HIVELINK IF EXISTS CASCADE;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message">0 updates</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE SCHEMA" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE SCHEMA TEST_HIVELINK ${sc_enginepallas};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message">0 updates</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SET SCHEMA" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">SET SCHEMA TEST_HIVELINK;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message">0 updates</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LDB EXT: Database Link " enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LDB EXT:hive db link" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="hive db link UPPER" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="584 LDBX021-18 CREATE hive database link" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;
drop database link hive_link_wr if exists cascade;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hiveC-a001" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1273210434">object name already exists:</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 reload database link l_hivelink_wy_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">reload database link l_hivelink_wy_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create database " enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link hive_link_wr connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;hive_database_wr&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hiveC-a002" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT count(*) FROM hive_link_wr.hive_table_wr;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="51">3</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link hive_link_wr if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;
drop database link hive_link_wr if exists cascade;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="584 LDBX021-18 GRANT hive database link" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hiveC-b001" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop user u_hivelink_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hiveC-b002" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant change_authorization to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant change_authorization to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hiveC-b003E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2524">OK</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">12</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user ${a} password &apos;${a_password}&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant create_schema to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant create_schema to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user ${a} password &apos;${a_password}&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hiveC-b004" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop user u_hivelink_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="584 LDBX021-18 CREATE TABLE " enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop table l_hivelink_wy_1.Test_DBLink_7 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_7 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create table l_hivelink_wy_1.Test_DBLink_7 ( tchar char(20), tvarchar varchar(20), tint INT, tdecimal decimal(5,3), tfloat float(2), tdate date, ttimestamp timestamp);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table l_hivelink_wy_1.Test_DBLink_7 (
tchar char(20),
tvarchar varchar(20),
tint INT,
tdecimal decimal(5,3),
tfloat float(2),
tdate date,
ttimestamp timestamp
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 insert into l_hivelink_wy_1.Test_DBLink_7 values (&apos;tchar&apos;,&apos;tvarchar&apos;,20,12.345,45.678,date &apos;2018-03-09&apos;,timestamp &apos;2018-03-29 20:21:22&apos;);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">insert into l_hivelink_wy_1.Test_DBLink_7 values (&apos;tchar&apos;,&apos;tvarchar&apos;,20,12.345,45.678,date &apos;2018-03-09&apos;,timestamp &apos;2018-03-29 20:21:22&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hiveC-c001" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select tint from l_hivelink_wy_1.Test_DBLink_7 order by tINT;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1598">20</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop table l_hivelink_wy_1.Test_DBLink_7 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_7 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="584 LDBX021-18 CREATE VIEW " enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop view l_hivelink_wy_1.v_hivelink_wy_3 if exists;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view l_hivelink_wy_1.v_hivelink_wy_3 if exists;



</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop view l_hivelink_wy_1.v_hivelink_wy_2 if exists;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">
drop view l_hivelink_wy_1.v_hivelink_wy_2 if exists;



</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop view l_hivelink_wy_1.v_hivelink_wy_1 if exists;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view l_hivelink_wy_1.v_hivelink_wy_1 if exists;




</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create table l_hivelink_wy_1.Test_DBLink_11 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table l_hivelink_wy_1.Test_DBLink_11 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 select * from l_hivelink_wy_1.Test_DBLink_11 order by empno;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from l_hivelink_wy_1.Test_DBLink_11 order by empno;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create view l_hivelink_wy_1.v_hivelink_wy_1(deptno,avgsal,sumSAL,maxSAL,minSAL) as select deptno,avg(SAL),sum(SAL),max(SAL),min(SAL) from l_hivelink_wy_1.Test_DBLink_11 group by deptno;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create view l_hivelink_wy_1.v_hivelink_wy_1(deptno,avgsal,sumSAL,maxSAL,minSAL) as select deptno,avg(SAL),sum(SAL),max(SAL),min(SAL) from l_hivelink_wy_1.Test_DBLink_11 group by deptno;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create view l_hivelink_wy_1.v_hivelink_wy_2 as select * from l_hivelink_wy_1.Test_DBLink_11;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create view l_hivelink_wy_1.v_hivelink_wy_2 as select * from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create view l_hivelink_wy_1.v_hivelink_wy_3 as select * from l_hivelink_wy_1.Test_DBLink_11 where sal &gt; 1000 and sal &lt; 3000;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create view l_hivelink_wy_1.v_hivelink_wy_3 as select * from l_hivelink_wy_1.Test_DBLink_11 where sal &gt; 1000 and sal &lt; 3000;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-d001" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.v_hivelink_wy_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="51">3</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-d002" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.v_hivelink_wy_1 where deptno &gt; 20;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49">1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-d003" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.v_hivelink_wy_2;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="56">8</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-d004" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.v_hivelink_wy_2 where deptno &gt; 20;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="51">3</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-d005" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.v_hivelink_wy_3;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="54">6</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-d006" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.v_hivelink_wy_3 where deptno &gt; 20;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="51">3</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop view l_hivelink_wy_1.v_hivelink_wy_3 if exists;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view l_hivelink_wy_1.v_hivelink_wy_3 if exists;



</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop view l_hivelink_wy_1.v_hivelink_wy_2 if exists;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view l_hivelink_wy_1.v_hivelink_wy_2 if exists;



</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop view l_hivelink_wy_1.v_hivelink_wy_1 if exists;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view l_hivelink_wy_1.v_hivelink_wy_1 if exists;




</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="584 LDBX021-18 GRANT TABLE/VIEW " enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a001E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop user u_hivelink_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create table l_hivelink_wy_1.Test_DBLink_11 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table l_hivelink_wy_1.Test_DBLink_11 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30), (7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30),
(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a002E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant change_authorization to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant change_authorization to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a003E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">select * from l_hivelink_wy_1.view1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a004E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;${hive_user}&apos; identified by &apos;${hive_password}&apos; using &apos;${hive_dblink_url}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2524">OK</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">6</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a005E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7777,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-19&apos;,800,NULL,20);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2090285059">user lacks privilege or object not found</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a006E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="374327447">user lacks privilege or object not found:</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a007E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="374327447">user lacks privilege or object not found:</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a008E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 6666;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="374327447">user lacks privilege or object not found:</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a009E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 7777 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="374327447">user lacks privilege or object not found:</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a010E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a011E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user ${a} password &apos;${a_password}&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant select on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant select on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a012E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7777,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-19&apos;,800,NULL,20);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a013" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="53">5</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a014" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="50">2</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">300</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a015E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 6666;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a016E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 7777 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a017E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a018E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="374327447">user lacks privilege or object not found:</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user ${a} password &apos;${a_password}&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 REVOKE select on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">REVOKE select on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant UPDATE,select on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant UPDATE,select on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a019E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7777,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-19&apos;,800,NULL,20);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="374327447">user lacks privilege or object not found:</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a020" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="53">5</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a021" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="50">2</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a022E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 6666;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a023E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 7777 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a024E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a025E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user ${a} password &apos;${a_password}&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 REVOKE update,select on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">REVOKE update,select on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant INSERT on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant INSERT on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7777,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-19&apos;,800,NULL,20);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7777,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-19&apos;,800,NULL,20);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a026E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a027E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a028E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 6666;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a029E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 7777 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a030E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a031E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user ${a} password &apos;${a_password}&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 REVOKE INSERT on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">REVOKE INSERT on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant DELETE,select on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant DELETE,select on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a032E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11(ename) VALUES (&apos;SMITH&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a033" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="54">6</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a034" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="51">3</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a035E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 6666;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-a036E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 7777 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1280750999">user lacks privilege or object not found: </stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-a037E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-a038E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a039" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 REVOKE delete,select on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">REVOKE delete,select on l_hivelink_wy_1.Test_DBLink_11 FROM u_hivelink_1 RESTRICT;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 grant all on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">grant all on l_hivelink_wy_1.Test_DBLink_11 to u_hivelink_1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user u_hivelink_1 password &apos;123456&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user u_hivelink_1 password &apos;123456&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7777,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7777,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a040" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49">1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a041" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49">1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a042E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 6666;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a043E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">update l_hivelink_wy_1.Test_DBLink_11 set sal = 7777 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a044E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7521;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a045E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 connect user ${a} password &apos;${a_password}&apos;;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-a046E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop user u_hivelink_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">
drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="584 LDBX021-18 Delete/Update " enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 create table l_hivelink_wy_1.Test_DBLink_11 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create table l_hivelink_wy_1.Test_DBLink_11 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30);" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_11 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-001" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="56">8</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-002E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">UPDATE l_hivelink_wy_1.Test_DBLink_11 SET sal=123;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-003E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">UPDATE l_hivelink_wy_1.Test_DBLink_11 SET sal=456 WHERE empno &gt; 7654;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-004E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11 where empno &gt; 7654;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 TC-hive-005E" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">delete from l_hivelink_wy_1.Test_DBLink_11;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">true</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="584 LDBX021-18 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                    <stringProp name="dataSource">${a}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_11 if exists cascade;
drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="560 hive  limit push down" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; properties(&apos;database&apos;:&apos;default&apos;);" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; properties(&apos;database&apos;:&apos;default&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 create table l_hivelink_wy_1.Test_DBLink_1 ( tsmallint smallint, tint int, tbigint bigint, treal real, tfloat float, tdecimal decimal(4,2), tnumeric numeric(4,2), tdate date, tdatetime timestamp, tchar char(200), tvarchar varchar(200), tbinary binary(100), tvarbinary varbinary(100), --tblob BLOB );" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table l_hivelink_wy_1.Test_DBLink_1 (
tsmallint smallint,
tint int,
tbigint bigint,
treal real,
tfloat float,
tdecimal decimal(4,2),
--tnumeric numeric(4,2),
tdate date,
ttimestamp timestamp,
tchar char(200),
tvarchar varchar(200)
--tbinary binary(100)
--tvarbinary varbinary(100)
);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[560] insert into l_hivelink_wy_1.Test_DBLink_1 values (1,1,1,1,1,1,1,&apos;2018-01-01&apos;,&apos;2018-02-02 10:11:12&apos;,&apos;qq&apos;,&apos;ss&apos;,&apos;0x1234567890&apos;,&apos;0x3654879871&apos;);" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into l_hivelink_wy_1.Test_DBLink_1 values (1,1,1,1,1,1,&apos;2018-01-01&apos;,&apos;2018-02-02 10:11:12&apos;,&apos;qq&apos;,&apos;ss&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 TC-hiveP-001" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select count(*) from l_hivelink_wy_1.Test_DBLink_1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49">1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 TC-hiveP-002" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">explain all plan for select * from l_hivelink_wy_1.Test_DBLink_1 limit 0;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-416005176">GlobalLimit 0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 TC-hiveP-003" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">explain all plan for select * from l_hivelink_wy_1.Test_DBLink_1 limit 1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-416005175">GlobalLimit 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 TC-hiveP-004" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">explain all plan for select * from l_hivelink_wy_1.Test_DBLink_1 limit 10;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-11258489">GlobalLimit 10</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="560 LDBX021-16 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="340 hive 中文 UPPER" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 drop table Test_HiveDBLink_10 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table Test_HiveDBLink_10 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 create table l_hivelink_wy_1.Test_DBLink_1 (c1 VARCHAR(20));" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table l_hivelink_wy_1.Test_DBLink_1 (c1 VARCHAR(20));</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 INSERT INTO l_hivelink_wy_1.Test_DBLink_1 VALUES (&apos;测试&apos;);" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_1 VALUES (&apos;测试&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 TC-hiveUP-001" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from l_hivelink_wy_1.Test_DBLink_1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="903146">测试</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 create table Test_HiveDBLink_10 (c1 varchar(20));" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table Test_HiveDBLink_10 (c1 varchar(20));</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 insert into Test_HiveDBLink_10 values (&apos;你你你&apos;);" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into Test_HiveDBLink_10 values (&apos;你你你&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 INSERT INTO l_hivelink_wy_1.Test_DBLink_1 select * from Test_HiveDBLink_10;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">INSERT INTO l_hivelink_wy_1.Test_DBLink_1 select * from Test_HiveDBLink_10;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 TC-hiveUP-002" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select * from l_hivelink_wy_1.Test_DBLink_1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="903146">测试</stringProp>
                      <stringProp name="20177760">你你你</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table l_hivelink_wy_1.Test_DBLink_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="340 LDBX021 drop table Test_HiveDBLink_10 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table Test_HiveDBLink_10 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="533 schema caseSensitive" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="533 F021 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="533 F021 create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create database link l_hivelink_wy_1 connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="533 F021 TC-schemaF-001" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select IS_CASE_SENSITIVE from INFORMATION_SCHEMA.SYSTEM_SCHEMAS where TABLE_SCHEM = &apos;L_HIVELINK_WY_1&apos;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="97196323">false</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="533 F021 drop database link l_hivelink_wy_1 if exists cascade;" enabled="true">
                  <stringProp name="dataSource">${a}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop database link l_hivelink_wy_1 if exists cascade;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2566 LDBX021-29 Hive database link support hive jdbc mode" enabled="false">
                <stringProp name="TestPlan.comments">Hive database link通过hive jdbc连接方式，dblink创建表、表的插入、查询 truncate ；创建视图，视图查询</stringProp>
              </GenericController>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-01-JDBC-Database Link test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SD-S1-Drop database link if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link ${hive_jdbc_db_link_name} if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S1-01-hive_jdbc_db_link-create database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE DATABASE LINK ${hive_jdbc_db_link_name} CONNECT TO &apos;${hive_jdbc_db_link_test_user}&apos; IDENTIFIED by &apos;${hive_jdbc_db_link_pwd}&apos; using &apos;${hive_jdbc_db_link_url}&apos; PROPERTIES(&apos;schema&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message">0 updates</stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S1-02-hive_jdbc_db_link-reload database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">RELOAD DATABASE LINK ${hive_jdbc_db_link_name};</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message">0 updates</stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S1-03-hive_jdbc_db_link-drop database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link ${hive_jdbc_db_link_name} if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message">0 updates</stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S1-04-hive_jdbc_db_link-alter database link" enabled="false">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create database link hive_jdbc_db_link connect to &apos;hive&apos; identified by &apos;hive&apos; using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message">0 updates</stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-S1-Create database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE DATABASE LINK ${hive_jdbc_db_link_name} CONNECT TO &apos;${hive_jdbc_db_link_test_user}&apos; IDENTIFIED by &apos;${hive_jdbc_db_link_pwd}&apos; using &apos;${hive_jdbc_db_link_url}&apos; PROPERTIES(&apos;schema&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-02-JDBC-Database Link Table test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S2-01-hive_jdbc_db_link-check [create table] syntax" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_jdbc_db_link_name}.Test_DBLink_Table(
    id int,
    t_int int,
    t_tinyint  tinyint,  
    t_smallint smallint,
    t_bigint bigint,
    t_float float,
    t_double double,
    t_decimal decimal(8,4)
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S2-02-hive_jdbc_db_link-check [insert into table] syntax" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_jdbc_db_link_name}.Test_DBLink_Table VALUES 
(1,-2147483648,-128,-32768,-9223372036854775808,-3.4E38,-1.79E308,100.88),
(2,2147483647,127,32767,9223372036854775807,3.4E38,1.79E308,10.88),
(3,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
(4,12,-18,368,44,-3.45,1.7965,939.056);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="202574046">4 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S2-03-hive_jdbc_db_link-check [select from table] syntax" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from ${hive_jdbc_db_link_name}.Test_DBLink_Table;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="判断表Test_DBLink_Numeric_Type的数据是否是4行" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());
String actual_table_count = Result.get(0).get(&quot;C1&quot;).toString();

String expected_table_count = &quot;4&quot;;

if(actual_table_count.equals(expected_table_count)){
	Failure = false;
}else{
	Failure = true;
	FailureMessage = &quot;期望查询到数据行数：4，实际查询到数据行数：&quot; + actual_table_count;
}
</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-03-JDBC-Database Link View test scenarios" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view ${hive_jdbc_db_link_name}.Test_DBLink_View if exists;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_Table" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_jdbc_db_link_name}.Test_DBLink_Table(
    id int,
    name varchar(10),
    sex varchar(2)
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare data in table Test_DBLink_Table" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">insert into ${hive_jdbc_db_link_name}.Test_DBLink_Table values
(1,&apos;Tom&apos;,&apos;f&apos;),
(2,&apos;Jerry&apos;,&apos;f&apos;),
(3,&apos;Lily&apos;,&apos;m&apos;),
(4,&apos;Kathy&apos;,&apos;f&apos;),
(5,&apos;Chris&apos;,&apos;f&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1604880417">5 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S3-01-hive_jdbc_db_link-create view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  view ${hive_jdbc_db_link_name}.Test_DBLink_View as select * from ${hive_jdbc_db_link_name}.Test_DBLink_Table where ${hive_jdbc_db_link_name}.Test_DBLink_Table.id &lt;3;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S3-02-hive_jdbc_db_link-select count(*) from view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) as total_count from ${hive_jdbc_db_link_name}.Test_DBLink_View;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证视图返回的数据行数是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());


Fialure = false;
expect_count = 2;
//log.info(Integer.toString(Result.get(0).get(&quot;TOTAL_COUNT&quot;)));

if(Result.get(0).get(&quot;TOTAL_COUNT&quot;) != expect_count){
	Failure = true;
	FailureMessage += &quot;期望数据：&quot;+expect_count+&quot;，实际数据：&quot;+ Result.get(0).get(&quot;TOTAL_COUNT&quot;);
	
}
</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S3-03-hive_jdbc_db_link-drop view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view ${hive_jdbc_db_link_name}.Test_DBLink_View;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-04-JDBC-Database Link Numeric Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Numeric_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Numeric_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-hive_jdbc_db_link-create table Test_DBLink_Numeric_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_jdbc_db_link_name}.Test_DBLink_Numeric_Type(
    id int,
    t_int int,
    t_tinyint  tinyint,  
    t_smallint smallint,
    t_bigint bigint,
    t_float float,
    t_double double,
    t_decimal decimal(8,4)
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-hive_jdbc_db_link-prepare test data in table Test_DBLink_Numeric_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_jdbc_db_link_name}.Test_DBLink_Numeric_Type VALUES 
(1,-2147483648,-128,-32768,-9223372036854775808,-3.4E38,-1.79E308,100.88),
(2,2147483647,127,32767,9223372036854775807,3.4E38,1.79E308,10.88),
(3,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
(4,12,-18,368,44,-3.45,1.7965,939.056);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="202574046">4 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S4-01-hive_jdbc_db_link-check [Numeric Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_jdbc_db_link_name}.Test_DBLink_Numeric_Type order by ${hive_jdbc_db_link_name}.Test_DBLink_Numeric_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中INT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Integer.toString(Result.get(0).get(&quot;T_INT&quot;));
actual_results[1] = Integer.toString(Result.get(1).get(&quot;T_INT&quot;));
actual_results[2] = Result.get(2).get(&quot;T_INT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_INT&quot;);
actual_results[3] = Integer.toString(Result.get(3).get(&quot;T_INT&quot;));
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-2147483648&quot;;
expected_results[1] = &quot;2147483647&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;12&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中TINYINT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_TINYINT&quot;).toString();

actual_results[1] = Result.get(1).get(&quot;T_TINYINT&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_TINYINT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_TINYINT&quot;);
actual_results[3] = Result.get(3).get(&quot;T_TINYINT&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-128&quot;;
expected_results[1] = &quot;127&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;-18&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中SMALLINT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_SMALLINT&quot;).toString();

actual_results[1] = Result.get(1).get(&quot;T_SMALLINT&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_SMALLINT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_SMALLINT&quot;);
actual_results[3] = Result.get(3).get(&quot;T_SMALLINT&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-32768&quot;;
expected_results[1] = &quot;32767&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;368&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中BIGINT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_BIGINT&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_BIGINT&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_BIGINT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_BIGINT&quot;);
actual_results[3] = Result.get(3).get(&quot;T_BIGINT&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-9223372036854775808&quot;;
expected_results[1] = &quot;9223372036854775807&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;44&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中DOUBLE类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_DOUBLE&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_DOUBLE&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_DOUBLE&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_DOUBLE&quot;);
actual_results[3] = Result.get(3).get(&quot;T_DOUBLE&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-1.79E308&quot;;
expected_results[1] = &quot;1.79E308&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;1.7965&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中DECIMAL类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_DECIMAL&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_DECIMAL&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_DECIMAL&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_DECIMAL&quot;);
actual_results[3] = Result.get(3).get(&quot;T_DECIMAL&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;100.8800&quot;;
expected_results[1] = &quot;10.8800&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;939.0560&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-S4-02-drop table Test_DBLink_Numeric_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Numeric_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-05-JDBC-Database Link String Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_String_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_String_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_String_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_jdbc_db_link_name}.Test_DBLink_String_Type(
    id int, 
    t_char char(6), 
    t_varchar varchar(10), 
    t_string string
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare test data in table Test_DBLink_String_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_jdbc_db_link_name}.Test_DBLink_String_Type VALUES 
(1,&apos;aaa&apos;,&apos;bbccc&apos;,&apos;ddddddd&apos;),
(2,&apos;&apos;,&apos;&apos;,&apos;&apos;),
(3,NULL,NULL,NULL),
(4,&apos;aaaabbbb&apos;,&apos;ccccccccdddd&apos;,&apos;dddddddeeeeeeeeeeee&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="202574046">4 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S5-01-hive_jdbc_db_link-check [String Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_jdbc_db_link_name}.Test_DBLink_String_Type order by ${hive_jdbc_db_link_name}.Test_DBLink_String_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_String_Type中CHAR类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(1).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_CHAR&quot;);
actual_results[1] = Result.get(1).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_CHAR&quot;);
actual_results[2] = Result.get(2).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_CHAR&quot;);
actual_results[3] = Result.get(3).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_CHAR&quot;);
log.info(actual_results[2]);

String[] expected_results = new String[count];
expected_results[0] = &quot;aaa   &quot;;
expected_results[1] = &quot;      &quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;aaaabb&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_String_Type中VARCHAR类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_VARCHAR&quot;);
actual_results[1] = Result.get(1).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_VARCHAR&quot;);
actual_results[2] = Result.get(2).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_VARCHAR&quot;);
actual_results[3] = Result.get(3).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_VARCHAR&quot;);
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;bbccc&quot;;
expected_results[1] = &quot;&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;ccccccccdd&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_String_Type中STRING类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_STRING&quot;);
actual_results[1] = Result.get(1).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_STRING&quot;);
actual_results[2] = Result.get(2).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_STRING&quot;);
actual_results[3] = Result.get(3).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_STRING&quot;);
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;ddddddd&quot;;
expected_results[1] = &quot;&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;dddddddeeeeeeeeeeee&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_String_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_String_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-06-JDBC-Database Link Datetime Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Datetime_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Datetime_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_Datetime_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_jdbc_db_link_name}.Test_DBLink_Datetime_Type(
    id int, 
    t_date date, 
    t_timestamp timestamp
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare test data in table Test_DBLink_Datetime_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_jdbc_db_link_name}.Test_DBLink_Datetime_Type VALUES 
(1,&apos;&apos;,&apos;&apos;),
(2,NULL,NULL),
(3,&apos;1984-9-7&apos;,&apos;2019-11-13 19:38:18&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2010028509">3 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S6-01-hive_jdbc_db_link-check [Datetime Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_jdbc_db_link_name}.Test_DBLink_Datetime_Type order by ${hive_jdbc_db_link_name}.Test_DBLink_Datetime_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Datetime_Type中DATE类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 3;



String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_DATE&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_DATE&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_DATE&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_DATE&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_DATE&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_DATE&quot;).toString();
//log.info(Result.get(2).get(&quot;T_DATE&quot;));

String[] expected_results = new String[count];
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;1984-9-7&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Datetime_Type中TIMESTAMP类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 3;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_TIMESTAMP&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_TIMESTAMP&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_TIMESTAMP&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_TIMESTAMP&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_TIMESTAMP&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_TIMESTAMP&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;2019-11-13 19:38:18.0&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_String_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_String_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-07-JDBC-Database Link Misc Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Misc_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Misc_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_Misc_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_jdbc_db_link_name}.Test_DBLink_Misc_Type(
    id int, 
    t_boolean boolean
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare test data in table Test_DBLink_Misc_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_jdbc_db_link_name}.Test_DBLink_Misc_Type VALUES 
(1,&apos;&apos;),
(2,NULL),
(3,true),
(4,false),
(5,0),
(6,1),
(7,2),
(8,&apos;test&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1562690786">8 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S7-01-hive_jdbc_db_link-check [Misc Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_jdbc_db_link_name}.Test_DBLink_Misc_Type order by ${hive_jdbc_db_link_name}.Test_DBLink_Misc_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Misc_Type中BOOLEAN类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 8;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[3] = Result.get(3).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[4] = Result.get(4).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(4).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[5] = Result.get(5).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(5).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[6] = Result.get(6).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(6).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[7] = Result.get(7).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(7).get(&quot;T_BOOLEAN&quot;).toString();
//log.info(Result.get(2).get(&quot;T_DATE&quot;));

String[] expected_results = new String[count];
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;true&quot;;
expected_results[3] = &quot;false&quot;;
expected_results[4] = &quot;false&quot;;
expected_results[5] = &quot;true&quot;;
expected_results[6] = &quot;true&quot;;
expected_results[7] = &quot;null&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="[目前无法验证]验证表Test_DBLink_Misc_Type中BINARY类型数据是否正确" enabled="false">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 3;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_BINARY&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_BINARY&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_BINARY&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_BINARY&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_BINARY&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_BINARY&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;2019-11-13 19:38:18.0&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_Misc_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_jdbc_db_link_name}.Test_DBLink_Misc_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-08-SPARK-Database Link test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SD-S8-Drop database link if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link ${hive_spark_db_link_name} if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S8-01-hive_jdbc_db_link-create database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE DATABASE LINK ${hive_spark_db_link_name} CONNECT TO &apos;hive&apos; IDENTIFIED by &apos;hive&apos; using &apos;hive&apos; PROPERTIES(&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message">0 updates</stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S8-02-hive_jdbc_db_link-reload database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">RELOAD DATABASE LINK ${hive_spark_db_link_name};</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message">0 updates</stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S8-03-hive_jdbc_db_link-drop database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link ${hive_spark_db_link_name} if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings"/>
                      <stringProp name="Assertion.custom_message">0 updates</stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-S8-Create database link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE DATABASE LINK ${hive_spark_db_link_name} CONNECT TO &apos;hive&apos; IDENTIFIED by &apos;hive&apos; using &apos;hive&apos; PROPERTIES(&apos;database&apos;:&apos;default&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-09-SPARK-Database Link Table test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S9-01-hive_jdbc_db_link-check [create table] syntax" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_spark_db_link_name}.Test_DBLink_Table(
    id int,
    t_int int,
    t_tinyint  tinyint,  
    t_smallint smallint,
    t_bigint bigint,
    t_float float,
    t_double double,
    t_decimal decimal(8,4)
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S9-02-hive_jdbc_db_link-check [insert into table] syntax" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_spark_db_link_name}.Test_DBLink_Table VALUES 
(1,-2147483648,-128,-32768,-9223372036854775808,-3.4E38,-1.79E308,100.88),
(2,2147483647,127,32767,9223372036854775807,3.4E38,1.79E308,10.88),
(3,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
(4,12,-18,368,44,-3.45,1.7965,939.056);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="202574046">4 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S9-03-hive_jdbc_db_link-check [select from table] syntax" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) from ${hive_spark_db_link_name}.Test_DBLink_Table;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="判断表Test_DBLink_Numeric_Type的数据是否是4行" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());
String actual_table_count = Result.get(0).get(&quot;C1&quot;).toString();

String expected_table_count = &quot;4&quot;;

if(actual_table_count.equals(expected_table_count)){
	Failure = false;
}else{
	Failure = true;
	FailureMessage = &quot;期望查询到数据行数：4，实际查询到数据行数：&quot; + actual_table_count;
}
</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-10-SPARK-Database Link View test scenarios" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view ${hive_spark_db_link_name}.Test_DBLink_View  if exists;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_Table" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_spark_db_link_name}.Test_DBLink_Table(
    id int,
    name varchar(10),
    sex varchar(2)
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare data in table Test_DBLink_Table" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">insert into ${hive_spark_db_link_name}.Test_DBLink_Table values
(1,&apos;Tom&apos;,&apos;f&apos;),
(2,&apos;Jerry&apos;,&apos;f&apos;),
(3,&apos;Lily&apos;,&apos;m&apos;),
(4,&apos;Kathy&apos;,&apos;f&apos;),
(5,&apos;Chris&apos;,&apos;f&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1604880417">5 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S10-01-hive_jdbc_db_link-create view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  view ${hive_spark_db_link_name}.Test_DBLink_View as select * from ${hive_spark_db_link_name}.Test_DBLink_Table where ${hive_spark_db_link_name}.Test_DBLink_Table.id &lt;3;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S10-02-hive_jdbc_db_link-select count(*) from view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select count(*) as total_count from ${hive_spark_db_link_name}.Test_DBLink_View;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证视图返回的数据行数是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());


Fialure = false;
expect_count = 2;
//log.info(Integer.toString(Result.get(0).get(&quot;TOTAL_COUNT&quot;)));

if(Result.get(0).get(&quot;TOTAL_COUNT&quot;) != expect_count){
	Failure = true;
	FailureMessage += &quot;期望数据：&quot;+expect_count+&quot;，实际数据：&quot;+ Result.get(0).get(&quot;TOTAL_COUNT&quot;);
	
}
</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S10-03-hive_jdbc_db_link-drop view Test_DBLink_View" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop view ${hive_spark_db_link_name}.Test_DBLink_View;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_Table if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Table if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-11-SPARK-Database Link Numeric Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Numeric_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Numeric_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-hive_jdbc_db_link-create table Test_DBLink_Numeric_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_spark_db_link_name}.Test_DBLink_Numeric_Type(
    id int,
    t_int int,
    t_tinyint  tinyint,  
    t_smallint smallint,
    t_bigint bigint,
    t_float float,
    t_double double,
    t_decimal decimal(8,4)
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-hive_jdbc_db_link-prepare test data in table Test_DBLink_Numeric_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_spark_db_link_name}.Test_DBLink_Numeric_Type VALUES 
(1,-2147483648,-128,-32768,-9223372036854775808,-3.4E38,-1.79E308,100.88),
(2,2147483647,127,32767,9223372036854775807,3.4E38,1.79E308,10.88),
(3,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
(4,12,-18,368,44,-3.45,1.7965,939.056);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="202574046">4 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S11-01-hive_jdbc_db_link-check [Numeric Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_spark_db_link_name}.Test_DBLink_Numeric_Type order by ${hive_spark_db_link_name}.Test_DBLink_Numeric_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中INT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Integer.toString(Result.get(0).get(&quot;T_INT&quot;));
actual_results[1] = Integer.toString(Result.get(1).get(&quot;T_INT&quot;));
actual_results[2] = Result.get(2).get(&quot;T_INT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_INT&quot;);
actual_results[3] = Integer.toString(Result.get(3).get(&quot;T_INT&quot;));
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-2147483648&quot;;
expected_results[1] = &quot;2147483647&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;12&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中TINYINT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_TINYINT&quot;).toString();

actual_results[1] = Result.get(1).get(&quot;T_TINYINT&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_TINYINT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_TINYINT&quot;);
actual_results[3] = Result.get(3).get(&quot;T_TINYINT&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-128&quot;;
expected_results[1] = &quot;127&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;-18&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中SMALLINT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_SMALLINT&quot;).toString();

actual_results[1] = Result.get(1).get(&quot;T_SMALLINT&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_SMALLINT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_SMALLINT&quot;);
actual_results[3] = Result.get(3).get(&quot;T_SMALLINT&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-32768&quot;;
expected_results[1] = &quot;32767&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;368&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中BIGINT类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_BIGINT&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_BIGINT&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_BIGINT&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_BIGINT&quot;);
actual_results[3] = Result.get(3).get(&quot;T_BIGINT&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-9223372036854775808&quot;;
expected_results[1] = &quot;9223372036854775807&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;44&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中DOUBLE类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_DOUBLE&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_DOUBLE&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_DOUBLE&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_DOUBLE&quot;);
actual_results[3] = Result.get(3).get(&quot;T_DOUBLE&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;-1.79E308&quot;;
expected_results[1] = &quot;1.79E308&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;1.7965&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Numeric_Type中DECIMAL类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_DECIMAL&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_DECIMAL&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_DECIMAL&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_DECIMAL&quot;);
actual_results[3] = Result.get(3).get(&quot;T_DECIMAL&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;100.8800&quot;;
expected_results[1] = &quot;10.8800&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;939.0560&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：&quot;+expected_results[i]+&quot;，实际数据：&quot;+ actual_results[i];
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-S11-02-drop table Test_DBLink_Numeric_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Numeric_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-12-SPARK-Database Link String Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_String_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_String_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_String_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_spark_db_link_name}.Test_DBLink_String_Type(
    id int, 
    t_char char(6), 
    t_varchar varchar(10), 
    t_string string
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare test data in table Test_DBLink_String_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_spark_db_link_name}.Test_DBLink_String_Type VALUES 
(1,&apos;aaa&apos;,&apos;bbccc&apos;,&apos;ddddddd&apos;),
(2,&apos;&apos;,&apos;&apos;,&apos;&apos;),
(3,NULL,NULL,NULL),
(4,&apos;aaaabbbb&apos;,&apos;ccccccccdddd&apos;,&apos;dddddddeeeeeeeeeeee&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="202574046">4 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S12-01-hive_jdbc_db_link-check [String Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_spark_db_link_name}.Test_DBLink_String_Type order by ${hive_spark_db_link_name}.Test_DBLink_String_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_String_Type中CHAR类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(1).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_CHAR&quot;);
actual_results[1] = Result.get(1).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_CHAR&quot;);
actual_results[2] = Result.get(2).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_CHAR&quot;);
actual_results[3] = Result.get(3).get(&quot;T_CHAR&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_CHAR&quot;);
log.info(actual_results[2]);

String[] expected_results = new String[count];
expected_results[0] = &quot;aaa   &quot;;
expected_results[1] = &quot;      &quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;aaaabb&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_String_Type中VARCHAR类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_VARCHAR&quot;);
actual_results[1] = Result.get(1).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_VARCHAR&quot;);
actual_results[2] = Result.get(2).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_VARCHAR&quot;);
actual_results[3] = Result.get(3).get(&quot;T_VARCHAR&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_VARCHAR&quot;);
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;bbccc&quot;;
expected_results[1] = &quot;&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;ccccccccdd&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_String_Type中STRING类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 4;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_STRING&quot;);
actual_results[1] = Result.get(1).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_STRING&quot;);
actual_results[2] = Result.get(2).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_STRING&quot;);
actual_results[3] = Result.get(3).get(&quot;T_STRING&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_STRING&quot;);
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;ddddddd&quot;;
expected_results[1] = &quot;&quot;;
expected_results[2] = &quot;null&quot;;
expected_results[3] = &quot;dddddddeeeeeeeeeeee&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_String_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_String_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-13-SPARK-Database Link Datetime Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Datetime_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Datetime_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_Datetime_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_spark_db_link_name}.Test_DBLink_Datetime_Type(
    id int, 
    t_date date, 
    t_timestamp timestamp
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare test data in table Test_DBLink_Datetime_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_spark_db_link_name}.Test_DBLink_Datetime_Type VALUES 
(1,&apos;&apos;,&apos;&apos;),
(2,NULL,NULL),
(3,&apos;1984-9-7&apos;,&apos;2019-11-13 19:38:18&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2010028509">3 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S13-01-hive_jdbc_db_link-check [Datetime Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_spark_db_link_name}.Test_DBLink_Datetime_Type order by ${hive_spark_db_link_name}.Test_DBLink_Datetime_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Datetime_Type中DATE类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 3;



String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_DATE&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_DATE&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_DATE&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_DATE&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_DATE&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_DATE&quot;).toString();
//log.info(Result.get(2).get(&quot;T_DATE&quot;));

String[] expected_results = new String[count];
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;1984-9-7&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Datetime_Type中TIMESTAMP类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 3;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_TIMESTAMP&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_TIMESTAMP&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_TIMESTAMP&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_TIMESTAMP&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_TIMESTAMP&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_TIMESTAMP&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;2019-11-13 19:38:18.0&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_String_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_String_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Scenarios-14-SPARK-Database Link Misc Type test cases" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-drop table Test_DBLink_Misc_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Misc_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-create table Test_DBLink_Misc_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">create  table ${hive_spark_db_link_name}.Test_DBLink_Misc_Type(
    id int, 
    t_boolean boolean
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 SU-prepare test data in table Test_DBLink_Misc_Type" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO ${hive_spark_db_link_name}.Test_DBLink_Misc_Type VALUES 
(1,&apos;&apos;),
(2,NULL),
(3,true),
(4,false),
(5,0),
(6,1),
(7,2),
(8,&apos;test&apos;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1562690786">8 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TC-S14-01-hive_jdbc_db_link-check [Misc Types] create by db link" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">select * from ${hive_spark_db_link_name}.Test_DBLink_Misc_Type order by ${hive_spark_db_link_name}.Test_DBLink_Misc_Type.id asc;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable">SQL_RESULT</stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as Object</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="验证表Test_DBLink_Misc_Type中BOOLEAN类型数据是否正确" enabled="true">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 8;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[3] = Result.get(3).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(3).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[4] = Result.get(4).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(4).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[5] = Result.get(5).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(5).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[6] = Result.get(6).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(6).get(&quot;T_BOOLEAN&quot;).toString();
actual_results[7] = Result.get(7).get(&quot;T_BOOLEAN&quot;) == null? &quot;null&quot; : Result.get(7).get(&quot;T_BOOLEAN&quot;).toString();
//log.info(Result.get(2).get(&quot;T_DATE&quot;));

String[] expected_results = new String[count];
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;true&quot;;
expected_results[3] = &quot;false&quot;;
expected_results[4] = &quot;false&quot;;
expected_results[5] = &quot;true&quot;;
expected_results[6] = &quot;true&quot;;
expected_results[7] = &quot;null&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="[目前无法验证]验证表Test_DBLink_Misc_Type中BINARY类型数据是否正确" enabled="false">
                      <stringProp name="BeanShellAssertion.query">Result=vars.getObject(&quot;SQL_RESULT&quot;);
log.info(Result.toString());

int count = 3;

String[] actual_results = new String[count];
actual_results[0] = Result.get(0).get(&quot;T_BINARY&quot;) == null? &quot;null&quot; : Result.get(0).get(&quot;T_BINARY&quot;).toString();
actual_results[1] = Result.get(1).get(&quot;T_BINARY&quot;) == null? &quot;null&quot; : Result.get(1).get(&quot;T_BINARY&quot;).toString();
actual_results[2] = Result.get(2).get(&quot;T_BINARY&quot;) == null? &quot;null&quot; : Result.get(2).get(&quot;T_BINARY&quot;).toString();
//log.info(actual_results[2]);

String[] expected_results = new String[count]; 
expected_results[0] = &quot;null&quot;;
expected_results[1] = &quot;null&quot;;
expected_results[2] = &quot;2019-11-13 19:38:18.0&quot;;

Fialure = false;

for(int i=0;i&lt;count;i++){
	if(!expected_results[i].equals(actual_results[i])){
		Failure = true;
		FailureMessage += &quot;\r\n第&quot;+(i+1).toString()+&quot;行的期望数据：[&quot;+expected_results[i]+&quot;]，实际数据：[&quot;+ actual_results[i] + &quot;]&quot;;
	}
}

</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 TD-drop table Test_DBLink_Misc_Type if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop table ${hive_spark_db_link_name}.Test_DBLink_Misc_Type if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TearDown" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 S1-Drop jdbc database link if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link ${hive_jdbc_db_link_name} if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="LDBX021-29 S1-Drop spark database link if exists" enabled="true">
                    <stringProp name="dataSource">${hive_jdbc_db_link_db_config}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop database link ${hive_spark_db_link_name} if exists cascade;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1157542694">0 updates</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1091 LDBX021-22 ALTER database link" enabled="true">
            <stringProp name="TestPlan.comments">hive</stringProp>
          </GenericController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 connect user admin password &apos;123456&apos;;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">connect user admin password &apos;123456&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 drop database link lk_hive_link if exists cascade;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop database link lk_hive_link if exists cascade;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 drop user u_test_hive if exists cascade;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop user u_test_hive if exists cascade;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 create user u_test_hive password &apos;123456&apos;;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create user u_test_hive password &apos;123456&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 grant change_authorization to u_test_hive;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">grant change_authorization to u_test_hive;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 grant create_schema to u_test_hive;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">grant create_schema to u_test_hive;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 connect user u_test_hive password &apos;123456&apos;;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">connect user u_test_hive password &apos;123456&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 create database link lk_hive_link  connect to &apos;hive&apos; identified by &apos;hive&apos;  using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create database link lk_hive_link 
connect to &apos;hive&apos; identified by &apos;hive&apos; 
using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;default&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 DROP TABLE lk_hive_link.t_alterlink_wy1 IF EXISTS CASCADE;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP TABLE lk_hive_link.t_alterlink_wy1 IF EXISTS CASCADE;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 CREATE TABLE lk_hive_link.t_alterlink_wy1(id INT);" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE TABLE lk_hive_link.t_alterlink_wy1(id INT);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 INSERT INTO lk_hive_link.t_alterlink_wy1 VALUES(1),(2);" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO lk_hive_link.t_alterlink_wy1 VALUES(1),(2);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 TC-009" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT * FROM lk_hive_link.t_alterlink_wy1 order by id;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1974219616">ID
1
2
</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 DROP TABLE lk_hive_link.t_alterlink_wy1 IF EXISTS CASCADE;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP TABLE lk_hive_link.t_alterlink_wy1 IF EXISTS CASCADE;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 connect user admin password &apos;123456&apos;;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">connect user admin password &apos;123456&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 alter database link lk_hive_link  connect to &apos;hive&apos; identified by &apos;hive&apos;  using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;LINKOOPDB_TEST&apos;);" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">alter database link lk_hive_link 
connect to &apos;hive&apos; identified by &apos;hive&apos; 
using &apos;hive&apos; PROPERTIES (&apos;database&apos;:&apos;LINKOOPDB_TEST&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 connect user u_test_hive password &apos;123456&apos;;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">connect user u_test_hive password &apos;123456&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 DROP TABLE lk_hive_link.t_alterlink_wy2 IF EXISTS CASCADE;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP TABLE lk_hive_link.t_alterlink_wy2 IF EXISTS CASCADE;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 CREATE TABLE lk_hive_link.t_alterlink_wy2(id INT);" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE TABLE lk_hive_link.t_alterlink_wy2(id INT);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 INSERT INTO lk_hive_link.t_alterlink_wy2 VALUES(3),(4);" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO lk_hive_link.t_alterlink_wy2 VALUES(3),(4);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 TC-010" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT * FROM lk_hive_link.t_alterlink_wy2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1974159972">ID
3
4
</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 DROP TABLE lk_hive_link.t_alterlink_wy2 IF EXISTS CASCADE;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DROP TABLE lk_hive_link.t_alterlink_wy2 IF EXISTS CASCADE;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1091 LDBX021-22 drop database link lk_hive_link if exists cascade;" enabled="true">
              <stringProp name="dataSource">${a}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop database link lk_hive_link if exists cascade;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="131 LDBX021-07 connect user ${a} password &apos;${a_password}&apos;;" enabled="false">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">connect user ${a} password &apos;${a_password}&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
        <stringProp name="FileSaver.filename">${logdir}/${__BeanShell(ctx.getThreadGroup().getName())}/${__samplerName}.</stringProp>
        <boolProp name="FileSaver.errorsonly">true</boolProp>
        <boolProp name="FileSaver.skipautonumber">false</boolProp>
        <boolProp name="FileSaver.skipsuffix">false</boolProp>
        <boolProp name="FileSaver.successonly">false</boolProp>
      </ResultSaver>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
