<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host, 192.168.1.73)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">linkoopdb host</stringProp>
          </elementProp>
          <elementProp name="a" elementType="Argument">
            <stringProp name="Argument.name">a</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">dba user</stringProp>
          </elementProp>
          <elementProp name="a_password" elementType="Argument">
            <stringProp name="Argument.name">a_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">dba user password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">T_USER1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user1</stringProp>
          </elementProp>
          <elementProp name="u1_password" elementType="Argument">
            <stringProp name="Argument.name">u1_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user1 password</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">T_USER2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user2</stringProp>
          </elementProp>
          <elementProp name="u2_password" elementType="Argument">
            <stringProp name="Argument.name">u2_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ordinary user2 password</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">T_USER3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="u3_password" elementType="Argument">
            <stringProp name="Argument.name">u3_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s1" elementType="Argument">
            <stringProp name="Argument.name">s1</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s2" elementType="Argument">
            <stringProp name="Argument.name">s2</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s3" elementType="Argument">
            <stringProp name="Argument.name">s3</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="s4" elementType="Argument">
            <stringProp name="Argument.name">s4</stringProp>
            <stringProp name="Argument.value">LDB_SCHEMA4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V1" elementType="Argument">
            <stringProp name="Argument.name">V1</stringProp>
            <stringProp name="Argument.value">VIEW_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V2" elementType="Argument">
            <stringProp name="Argument.name">V2</stringProp>
            <stringProp name="Argument.value">VIEW_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V3" elementType="Argument">
            <stringProp name="Argument.name">V3</stringProp>
            <stringProp name="Argument.value">VIEW_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V4" elementType="Argument">
            <stringProp name="Argument.name">V4</stringProp>
            <stringProp name="Argument.value">VIEW_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V5" elementType="Argument">
            <stringProp name="Argument.name">V5</stringProp>
            <stringProp name="Argument.value">VIEW_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v1" elementType="Argument">
            <stringProp name="Argument.name">v1</stringProp>
            <stringProp name="Argument.value">view_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v2" elementType="Argument">
            <stringProp name="Argument.name">v2</stringProp>
            <stringProp name="Argument.value">view_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v3" elementType="Argument">
            <stringProp name="Argument.name">v3</stringProp>
            <stringProp name="Argument.value">view_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v4" elementType="Argument">
            <stringProp name="Argument.name">v4</stringProp>
            <stringProp name="Argument.value">view_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="v5" elementType="Argument">
            <stringProp name="Argument.name">v5</stringProp>
            <stringProp name="Argument.value">view_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy1" elementType="Argument">
            <stringProp name="Argument.name">sy1</stringProp>
            <stringProp name="Argument.value">SYNONYM_1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy2" elementType="Argument">
            <stringProp name="Argument.name">sy2</stringProp>
            <stringProp name="Argument.value">SYNONYM_2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy3" elementType="Argument">
            <stringProp name="Argument.name">sy3</stringProp>
            <stringProp name="Argument.value">SYNONYM_3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy4" elementType="Argument">
            <stringProp name="Argument.name">sy4</stringProp>
            <stringProp name="Argument.value">SYNONYM_4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sy5" elementType="Argument">
            <stringProp name="Argument.name">sy5</stringProp>
            <stringProp name="Argument.value">SYNONYM_5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="synonym_view" elementType="Argument">
            <stringProp name="Argument.name">synonym_view</stringProp>
            <stringProp name="Argument.value">SYNONYM_VIEW</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="schema" elementType="Argument">
            <stringProp name="Argument.name">schema</stringProp>
            <stringProp name="Argument.value">TEST_OLAPWINDOW</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="logdir" elementType="Argument">
            <stringProp name="Argument.name">logdir</stringProp>
            <stringProp name="Argument.value">~/logs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="admin" enabled="true">
        <stringProp name="TestPlan.comments">JDBC连接</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${a}</stringProp>
        <stringProp name="dbUrl">jdbc:linkoopdb:tcp://${node}:9105/ldb</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${a}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
        <stringProp name="FileSaver.filename">${logdir}/${__BeanShell(ctx.getThreadGroup().getName())}/${__samplerName}.</stringProp>
        <boolProp name="FileSaver.errorsonly">true</boolProp>
        <boolProp name="FileSaver.skipautonumber">false</boolProp>
        <boolProp name="FileSaver.skipsuffix">false</boolProp>
        <boolProp name="FileSaver.successonly">false</boolProp>
      </ResultSaver>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="OLAP: Window Function" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DROP SCHEMA" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP SCHEMA IF EXISTS ${schema} CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE SCHEMA" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE SCHEMA ${schema};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SET SCHEMA" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">SET SCHEMA ${schema};</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="298 T610 Window Functions " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 drop table Test_Window_Functions_1 if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table Test_Window_Functions_1 if exists cascade;
drop table Test_Window_Functions_4 if exists cascade;
drop table Test_Window_Functions_5 if exists cascade;
drop table Test_Window_Functions_6 if exists cascade;
drop table Test_Window_Functions_7 if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 create table Test_Window_Functions_4 (depname varchar(100), empno int, salary double);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table Test_Window_Functions_4 (depname varchar(100), empno int, salary double);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 insert into Test_Window_Functions_4 values(  (&apos;develop&apos; , 11 , 5200),  (&apos;develop&apos; , 7 , 4200),  (&apos;develop&apos; , 9 , 4500),  (&apos;develop&apos; , 8 , 6000),  (&apos;develop&apos; , 10 , 5200),  (&apos;personnel&apos; , 5 , 3500),  (&apos;personnel&apos; , 2 , 3900),  (&apos;sales&apos; , 3 , 4800),  (&apos;sales&apos; , 1 , 5000),  (&apos;sales&apos; , 4 , 4800));" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into Test_Window_Functions_4 values(
 (&apos;develop&apos; , 11 , 5200),
 (&apos;develop&apos; , 7 , 4200),
 (&apos;develop&apos; , 9 , 4500),
 (&apos;develop&apos; , 8 , 6000),
 (&apos;develop&apos; , 10 , 5200),
 (&apos;personnel&apos; , 5 , 3500),
 (&apos;personnel&apos; , 2 , 3900),
 (&apos;sales&apos; , 3 , 4800),
 (&apos;sales&apos; , 1 , 5000),
 (&apos;sales&apos; , 4 , 4800));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, empno, salary, avg(salary) OVER (PARTITION BY depname) c1, sum(salary) OVER (PARTITION BY depname) c2,
 min(salary) OVER (PARTITION BY depname) c3, max(salary) OVER (PARTITION BY depname) c4 FROM Test_Window_Functions_4 order by depname, empno, salary,c1,c2,c3,c4;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1122198615">develop	7	4200.0	5020.0	25100.0	4200.0	6000.0</stringProp>
                <stringProp name="607544942">develop	8	6000.0	5020.0	25100.0	4200.0	6000.0</stringProp>
                <stringProp name="-1681158392">develop	9	4500.0	5020.0	25100.0	4200.0	6000.0</stringProp>
                <stringProp name="-430624918">develop	10	5200.0	5020.0	25100.0	4200.0	6000.0</stringProp>
                <stringProp name="-100859157">develop	11	5200.0	5020.0	25100.0	4200.0	6000.0</stringProp>
                <stringProp name="908697509">personnel	2	3900.0	3700.0	7400.0	3500.0	3900.0</stringProp>
                <stringProp name="-1685563202">personnel	5	3500.0	3700.0	7400.0	3500.0	3900.0</stringProp>
                <stringProp name="-1397335273">sales	1	5000.0	4866.666666666667	14600.0	4800.0	5000.0</stringProp>
                <stringProp name="1004152126">sales	3	4800.0	4866.666666666667	14600.0	4800.0	5000.0</stringProp>
                <stringProp name="1973733149">sales	4	4800.0	4866.666666666667	14600.0	4800.0	5000.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, row_number() OVER (PARTITION BY depname order by empno) c1 FROM Test_Window_Functions_4 order by depname,c1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-80683931">develop	1</stringProp>
                <stringProp name="-80683930">develop	2</stringProp>
                <stringProp name="-80683929">develop	3</stringProp>
                <stringProp name="-80683928">develop	4</stringProp>
                <stringProp name="-80683927">develop	5</stringProp>
                <stringProp name="1863595860">sales	1</stringProp>
                <stringProp name="1863595861">sales	2</stringProp>
                <stringProp name="1863595862">sales	3</stringProp>
                <stringProp name="-412169368">personnel	1</stringProp>
                <stringProp name="-412169367">personnel	2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  depname, empno, salary, dense_rank() OVER (PARTITION BY depname order by empno) c1 FROM Test_Window_Functions_4 order by depname, empno, salary,c1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="782678298">sales	1	5000.0	1</stringProp>
                <stringProp name="122595376">personnel	2	3900.0	1</stringProp>
                <stringProp name="-864540794">develop	7	4200.0	1</stringProp>
                <stringProp name="1451903106">sales	3	4800.0	2</stringProp>
                <stringProp name="278007434">personnel	5	3500.0	2</stringProp>
                <stringProp name="649559010">develop	8	6000.0	2</stringProp>
                <stringProp name="1255389602">sales	4	4800.0	3</stringProp>
                <stringProp name="1404943241">develop	9	4500.0	3</stringProp>
                <stringProp name="913178728">develop	10	5200.0	4</stringProp>
                <stringProp name="716665224">develop	11	5200.0	5</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, CUME_DIST() OVER (PARTITION BY depname order by empno) c1 FROM Test_Window_Functions_4 order by depname,c1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-227845848">develop	0.2</stringProp>
                <stringProp name="-227845846">develop	0.4</stringProp>
                <stringProp name="-227845844">develop	0.6</stringProp>
                <stringProp name="-227845842">develop	0.8</stringProp>
                <stringProp name="-227844889">develop	1.0</stringProp>
                <stringProp name="46166075">sales	0.3333333333333333</stringProp>
                <stringProp name="1899483963">sales	0.6666666666666666</stringProp>
                <stringProp name="-85739498">sales	1.0</stringProp>
                <stringProp name="-957770898">personnel	0.5</stringProp>
                <stringProp name="-957769942">personnel	1.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, PERCENT_RANK() OVER (PARTITION BY depname order by empno) c1 FROM Test_Window_Functions_4 order by depname,c1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-227845850">develop	0.0</stringProp>
                <stringProp name="1526713357">develop	0.25</stringProp>
                <stringProp name="-227845845">develop	0.5</stringProp>
                <stringProp name="1526713512">develop	0.75</stringProp>
                <stringProp name="-227844889">develop	1.0</stringProp>
                <stringProp name="-957770903">personnel	0.0</stringProp>
                <stringProp name="-957769942">personnel	1.0</stringProp>
                <stringProp name="-85740459">sales	0.0</stringProp>
                <stringProp name="-85740454">sales	0.5</stringProp>
                <stringProp name="-85739498">sales	1.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, NTILE(4) OVER (PARTITION BY depname order by empno) c1 FROM Test_Window_Functions_4 order by depname,c1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-80683931">develop	1</stringProp>
                <stringProp name="-80683931">develop	1</stringProp>
                <stringProp name="-80683930">develop	2</stringProp>
                <stringProp name="-80683929">develop	3</stringProp>
                <stringProp name="-80683928">develop	4</stringProp>
                <stringProp name="-412169368">personnel	1</stringProp>
                <stringProp name="-412169367">personnel	2</stringProp>
                <stringProp name="1863595860">sales	1</stringProp>
                <stringProp name="1863595861">sales	2</stringProp>
                <stringProp name="1863595862">sales	3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-007E" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, row_number() FROM Test_Window_Functions_4;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="782367374">IO error</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-008" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary DESC) c1 FROM Test_Window_Functions_4 order by depname, empno, salary,c1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-864540790">develop	7	4200.0	5</stringProp>
                <stringProp name="649559009">develop	8	6000.0	1</stringProp>
                <stringProp name="1404943242">develop	9	4500.0	4</stringProp>
                <stringProp name="913178726">develop	10	5200.0	2</stringProp>
                <stringProp name="716665221">develop	11	5200.0	2</stringProp>
                <stringProp name="122595376">personnel	2	3900.0	1</stringProp>
                <stringProp name="278007434">personnel	5	3500.0	2</stringProp>
                <stringProp name="782678298">sales	1	5000.0	1</stringProp>
                <stringProp name="1451903106">sales	3	4800.0	2</stringProp>
                <stringProp name="1255389601">sales	4	4800.0	2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-009" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT grouping(depname), depname, avg(salary) avgsa FROM Test_Window_Functions_4 group by depname with rollup order by depname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="603485710">1	null	4710.0</stringProp>
                <stringProp name="384937984">0	develop	5020.0</stringProp>
                <stringProp name="1584042792">0	personnel	3700.0</stringProp>
                <stringProp name="1745722645">0	sales	4866.666666666667</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-010" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from (SELECT depname, avg(salary) avgsa FROM Test_Window_Functions_4 group by depname with rollup) y order by depname, avgsa;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="933586694">null	4710.0</stringProp>
                <stringProp name="-1562289689">develop	5020.0</stringProp>
                <stringProp name="-1390977201">personnel	3700.0</stringProp>
                <stringProp name="-1024383218">sales	4866.666666666667</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-011E" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT depname, empno, salary, avg(salary) OVER (PARTITION BY depnam) FROM Test_Window_Functions_4;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1215529556">user lacks privilege or object not found: DEPNAM</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 create table Test_Window_Functions_5(  id varchar(64) not null,  cphm varchar(10) not null,  create_date timestamp not null, );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table Test_Window_Functions_5(
 id varchar(64) not null,
 cphm varchar(10) not null,
 create_date timestamp not null,
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610] insert into Test_Window_Functions_5 values(&apos;1000001&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:18:12&apos;), (&apos;1000002&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:22:12&apos;), (&apos;1000003&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:28:12&apos;), (&apos;1000004&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:29:12&apos;), (&apos;1000005&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:39:13&apos;), (&apos;1000006&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:45:12&apos;), (&apos;1000007&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:56:12&apos;), (&apos;1000008&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:57:12&apos;), (&apos;1000009&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:00:12&apos;), (&apos;1000010&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:10:13&apos;), (&apos;1000011&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:15:12&apos;), (&apos;1000012&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:26:12&apos;), (&apos;1000013&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:30:12&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into Test_Window_Functions_5 values(&apos;1000001&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:18:12&apos;),
(&apos;1000002&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:22:12&apos;),
(&apos;1000003&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:28:12&apos;),
(&apos;1000004&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:29:12&apos;),
(&apos;1000005&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:39:13&apos;),
(&apos;1000006&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:45:12&apos;),
(&apos;1000007&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:56:12&apos;),
(&apos;1000008&apos;,&apos;AB7477&apos;,&apos;2015-11-30 10:57:12&apos;),
(&apos;1000009&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:00:12&apos;),
(&apos;1000010&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:10:13&apos;),
(&apos;1000011&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:15:12&apos;),
(&apos;1000012&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:26:12&apos;),
(&apos;1000013&apos;,&apos;AB3808&apos;,&apos;2015-11-30 11:30:12&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-012" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select cphm, count(1) total from
 (
  select t.id,
    t.create_date t1,
    lead(t.create_date,1, null) over( partition by  cphm order by create_date asc ) t2,
    TIMESTAMPDIFF ( SQL_TSI_SECOND, lead(t.create_date,1, null) over(  partition by  cphm order by create_date asc ) , t.create_date ) * 86400 as itvtime,
   t.cphm
  from Test_Window_Functions_5 t
    order by t.cphm, t.create_date asc
 ) tt
 where tt.itvtime &gt;= 600 or  tt.itvtime  is null
 group by tt.cphm;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1572510870">AB3808	1</stringProp>
                <stringProp name="1683540966">AB7477	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 create table Test_Window_Functions_6 (    DEPT_ID    VARCHAR(6),    SALE_DATE  DATE,    GOODS_TYPE VARCHAR(4),    SALE_CNT   int );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table Test_Window_Functions_6 (
   DEPT_ID    VARCHAR(6),
   SALE_DATE  DATE,
   GOODS_TYPE VARCHAR(4),
   SALE_CNT   int
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 insert into Test_Window_Functions_6 values (&apos;D01&apos;, &apos;2014-03-04&apos;, &apos;G00&apos;, 700), (&apos;D02&apos;, &apos;2014-03-06&apos;, &apos;G00&apos;, 500), (&apos;D01&apos;, &apos;2014-04-08&apos;, &apos;G01&apos;, 200), (&apos;D02&apos;, &apos;2014-04-27&apos;, &apos;G01&apos;, 300), (&apos;D01&apos;, &apos;2014-04-30&apos;, &apos;G03&apos;, 800), (&apos;D02&apos;, &apos;2014-05-02&apos;, &apos;G03&apos;, 900), (&apos;D01&apos;, &apos;2014-05-04&apos;, &apos;G02&apos;, 80), (&apos;D02&apos;, &apos;2014-04-08&apos;, &apos;G02&apos;, 100);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into Test_Window_Functions_6 values (&apos;D01&apos;, &apos;2014-03-04&apos;, &apos;G00&apos;, 700),
(&apos;D02&apos;, &apos;2014-03-06&apos;, &apos;G00&apos;, 500),
(&apos;D01&apos;, &apos;2014-04-08&apos;, &apos;G01&apos;, 200),
(&apos;D02&apos;, &apos;2014-04-27&apos;, &apos;G01&apos;, 300),
(&apos;D01&apos;, &apos;2014-04-30&apos;, &apos;G03&apos;, 800),
(&apos;D02&apos;, &apos;2014-05-02&apos;, &apos;G03&apos;, 900),
(&apos;D01&apos;, &apos;2014-05-04&apos;, &apos;G02&apos;, 80),
(&apos;D02&apos;, &apos;2014-04-08&apos;, &apos;G02&apos;, 100);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-013" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select dept_id from (
select dept_id,sale_date,goods_type,sale_cnt,
sum(sale_cnt) over(partition by dept_id order by dept_id,sale_date rows between unbounded preceding and current row) dept_cur_total,
sum(sale_cnt) over(order by dept_id,sale_date rows between unbounded preceding and current row) cmp_cur_total
from Test_Window_Functions_6 where DEPT_ID = &apos;D01&apos; and SALE_DATE = &apos;2014-03-04&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="66885">D01</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-014" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select dept_id from (
select dept_id,sale_date,sale_cnt,
sum(sale_cnt) over(order by sale_date rows between 1 preceding and 1 following) CON_1_CNT
from (select * from Test_Window_Functions_6 order by sale_cnt) where DEPT_ID = &apos;D01&apos; and SALE_DATE = &apos;2014-03-04&apos; );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="66885">D01</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-015" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select dept_id from (
select dept_id,sale_date,goods_type,sale_cnt,
first_value(sale_date) over (partition by dept_id order by sale_date) first_value,
last_value(sale_date) over (partition by dept_id order by sale_date desc) last_value from Test_Window_Functions_6 where DEPT_ID = &apos;D01&apos; and SALE_DATE = &apos;2014-03-04&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="66885">D01</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-016" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select dept_id from (
select dept_id,sale_date,goods_type,sale_cnt,
first_value(sale_date) over (partition by dept_id order by sale_date) first_value,
last_value(sale_date) over (partition by dept_id order by sale_date desc) last_value,
last_value(sale_date) over (partition by dept_id order by sale_date rows between unbounded preceding and unbounded following) last_value_all from Test_Window_Functions_6 where DEPT_ID = &apos;D01&apos; and SALE_DATE = &apos;2014-03-04&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="66885">D01</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 create table Test_Window_Functions_1 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table Test_Window_Functions_1 (EMPNO INT,ENAME VARCHAR(20),JOB VARCHAR(20),MGR INT,HIREDATE DATE,SAL INT,COMM INT,DEPTNO INT);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 insert into Test_Window_Functions_1 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20), (7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30), (7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30), (7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20), (7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30), (7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30), (7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10), (7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10), (7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30), (7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30), (7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20), (7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into Test_Window_Functions_1 VALUES (7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20),
(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-20&apos;,1600,300,30),
(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-2-22&apos;,1250,500,30),
(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-4-2&apos;,2975,NULL,20),
(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-28&apos;,1150,1400,30),
(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-5-1&apos;,2850,NULL,30),
(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-6-9&apos;,2450,NULL,10),
(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10),
(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-9-8&apos;,1500,0,30),
(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-8&apos;,950,NULL,30),
(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-8&apos;,3000,NULL,20),
(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-1-23&apos;,1300,NULL,10);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-017" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--1显示各部门员工的工资，并附带显示该部分的最高工资。
--unbounded preceding and unbouned following针对当前所有记录的前一条、后一条记录，也就是表中的所有记录
--unbounded：不受控制的，无限的
--preceding：在...之前
--following：在...之后
SELECT E.DEPTNO,
E.EMPNO,
E.ENAME,
E.SAL,
LAST_VALUE(E.SAL) OVER(PARTITION BY E.DEPTNO ORDER BY E.SAL ROWS 
BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) MAX_SAL
FROM Test_Window_Functions_1 E where e.deptno = 10 and e.empno = 7782;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1922211492">10	7782</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-018" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--2按照deptno分组，然后计算每组值的总和
SELECT EMPNO,ENAME,DEPTNO,SAL,
SUM(SAL) OVER(PARTITION BY DEPTNO ORDER BY ENAME) max_sal
FROM Test_Window_Functions_1 where empno = 7369;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1689247">7369</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-019" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--3对各部门进行分组，并附带显示第一行至当前行的汇总
SELECT EMPNO,ENAME,SAL,
SUM(SAL) OVER(PARTITION BY DEPTNO ORDER BY ENAME ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) max_sal
FROM Test_Window_Functions_1 where empno = 7369;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1689247">7369</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-020" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--4当前行至最后一行的汇总
SELECT EMPNO,ENAME,DEPTNO,SAL,
SUM(SAL) OVER(PARTITION BY DEPTNO ORDER BY ENAME ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) max_sal
FROM Test_Window_Functions_1 where empno = 7499;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1690301">7499</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-021" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--5当前行的上一行(rownum-1)到当前行的汇总
SELECT EMPNO,ENAME,SAL,
SUM(SAL) OVER(PARTITION BY DEPTNO ORDER BY ENAME ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) max_sal
FROM Test_Window_Functions_1 where empno = 7521;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1691037">7521</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-022" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--6当前行的上一行(rownum-1)到当前行的下辆行(rownum+2)的汇总     
--注意ROWS BETWEEN 1 preceding AND 1 following 是指当前行的上一行(rownum-1)到当前行的下辆行(rownum+2)的汇总

SELECT EMPNO,ENAME,DEPTNO,SAL,
SUM(SAL) OVER(PARTITION BY DEPTNO ORDER BY ENAME ROWS BETWEEN 1 PRECEDING AND 2 FOLLOWING) max_sal
FROM Test_Window_Functions_1 where empno = 7698;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1692222">7698</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-023" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--7sql无排序，over()排序子句省略
select count(*) from (
SELECT DEPTNO, EMPNO, ENAME, SAL, 
LAST_VALUE(SAL) OVER(PARTITION BY DEPTNO)
FROM Test_Window_Functions_1 order by DEPTNO,EMPNO);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-024" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--8sql无排序，over()排序子句有，窗口省略
select count(*) from (
SELECT DEPTNO,EMPNO,ENAME,SAL,
LAST_VALUE(SAL) OVER(PARTITION BY DEPTNO ORDER BY SAL DESC)
FROM Test_Window_Functions_1 order by DEPTNO,EMPNO,ENAME,SAL);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-025" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--9sql无排序，over()排序子句有，窗口也有，窗口特意强调全组数据
select count(*) from (
SELECT DEPTNO,EMPNO,SAL,
LAST_VALUE(SAL) OVER(PARTITION BY DEPTNO ORDER BY SAL 
ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) MAX_SAL
FROM Test_Window_Functions_1 order by DEPTNO,EMPNO,SAL);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-026" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--10sql有排序（正序），over()排序子句无，先做sql排序再进行分析函数运算

select DEPTNO from (
SELECT DEPTNO,MGR,SAL,
LAST_VALUE(SAL) OVER(PARTITION BY DEPTNO) LAST_VALUE
FROM Test_Window_Functions_1 WHERE DEPTNO = 30 and mgr = 7839);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1629">30</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-027" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--11sql有排序（倒序），over()排序子句无，先做sql排序再进行分析函数运算

select DEPTNO from (
SELECT DEPTNO,MGR,SAL,HIREDATE,
LAST_VALUE(SAL) OVER(PARTITION BY DEPTNO) LAST_VALUE
FROM Test_Window_Functions_1 WHERE DEPTNO = 30 and mgr = 7839);

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1629">30</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-028" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--12sql有排序（倒序），over()排序子句有，窗口子句无，此时的运算是：sql先选数据但是不排序，而后排序子句先排序并进行分析函数处理（窗口默认为第一行到当前行），最后再进行sql排序

select DEPTNO from (
SELECT DEPTNO,MGR,SAL,HIREDATE,
MIN(SAL) OVER(PARTITION BY DEPTNO ORDER BY SAL ASC) LAST_VALUE
FROM Test_Window_Functions_1 WHERE DEPTNO = 30 and mgr = 7839);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1629">30</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-029" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--13

select DEPTNO from (
SELECT DEPTNO,MGR,SAL,HIREDATE,
MIN(SAL) OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) LAST_VALUE
FROM Test_Window_Functions_1 WHERE DEPTNO = 30 and mgr = 7839);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1629">30</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-030" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--14rank()值相同时排名相同，其后排名跳跃不连续

SELECT * 
FROM (SELECT DEPTNO, ENAME,SAL,RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) RW FROM Test_Window_Functions_1) 
WHERE RW &lt;= 4;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2146031848">20	FORD	3000	1</stringProp>
                <stringProp name="-1133242421">20	JONES	2975	2</stringProp>
                <stringProp name="739031121">20	SMITH	800	3</stringProp>
                <stringProp name="-1228512725">10	KING	5000	1</stringProp>
                <stringProp name="1316822056">10	CLARK	2450	2</stringProp>
                <stringProp name="248269378">10	MILLER	1300	3</stringProp>
                <stringProp name="2106888973">30	BLAKE	2850	1</stringProp>
                <stringProp name="545748569">30	ALLEN	1600	2</stringProp>
                <stringProp name="434386369">30	TURNER	1500	3</stringProp>
                <stringProp name="-441969336">30	WARD	1250	4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-031" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--15dense_rank()值相同时排名相同，其后排名连续不跳跃

SELECT * 
FROM (SELECT DEPTNO, ENAME,SAL,DENSE_RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) RW FROM Test_Window_Functions_1) 
WHERE RW &lt;= 4 order by RW,ename;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2106888973">30	BLAKE	2850	1</stringProp>
                <stringProp name="2146031848">20	FORD	3000	1</stringProp>
                <stringProp name="-1228512725">10	KING	5000	1</stringProp>
                <stringProp name="545748569">30	ALLEN	1600	2</stringProp>
                <stringProp name="1316822056">10	CLARK	2450	2</stringProp>
                <stringProp name="-1133242421">20	JONES	2975	2</stringProp>
                <stringProp name="248269378">10	MILLER	1300	3</stringProp>
                <stringProp name="739031121">20	SMITH	800	3</stringProp>
                <stringProp name="434386369">30	TURNER	1500	3</stringProp>
                <stringProp name="-441969336">30	WARD	1250	4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-032" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--16row_number()值相同时排名不相等，其后排名连续不跳跃

select count(*) from (
SELECT * 
FROM (SELECT DEPTNO, SAL,ROW_NUMBER() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) RW FROM Test_Window_Functions_1) 
WHERE RW &lt;= 4);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1567">10</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 create table Test_Window_Functions_7 (id int,name varchar(20));" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table Test_Window_Functions_7 (id int,name varchar(20));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 insert into Test_Window_Functions_7 values (1,&apos;1name&apos;),(2,&apos;2name&apos;),(3,&apos;3name&apos;),(4,&apos;4name&apos;),(5,&apos;5name&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into Test_Window_Functions_7 values (1,&apos;1name&apos;),(2,&apos;2name&apos;),(3,&apos;3name&apos;),(4,&apos;4name&apos;),(5,&apos;5name&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-033" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select id,name,lag(name,1,0) over(order by id) from Test_Window_Functions_7;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-380358773">1	1name	0</stringProp>
                <stringProp name="1089781081">2	2name	1name</stringProp>
                <stringProp name="-999649764">3	3name	2name</stringProp>
                <stringProp name="1205886687">4	4name	3name</stringProp>
                <stringProp name="-883544158">5	5name	4name</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-034" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select id,name,lead(name,1,0) over(order by id) from Test_Window_Functions_7;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1113908328">1	1name	2name</stringProp>
                <stringProp name="1091628123">2	2name	3name</stringProp>
                <stringProp name="-997802722">3	3name	4name</stringProp>
                <stringProp name="1207733729">4	4name	5name</stringProp>
                <stringProp name="234805395">5	5name	0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-035" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select id,name,lead(name,2,0) over(order by id) from Test_Window_Functions_7;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1112984807">1	1name	3name</stringProp>
                <stringProp name="1092551644">2	2name	4name</stringProp>
                <stringProp name="-996879201">3	3name	5name</stringProp>
                <stringProp name="1154756177">4	4name	0</stringProp>
                <stringProp name="234805395">5	5name	0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-036" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select id,name,lead(name,1,&apos;linjiqin&apos;) over(order by id) from Test_Window_Functions_7;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1113908328">1	1name	2name</stringProp>
                <stringProp name="1091628123">2	2name	3name</stringProp>
                <stringProp name="-997802722">3	3name	4name</stringProp>
                <stringProp name="1207733729">4	4name	5name</stringProp>
                <stringProp name="1230765571">5	5name	linjiqin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-037" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select id,name,lag(name,1,0) over(order by id) from Test_Window_Functions_7 order by id,name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-380358773">1	1name	0</stringProp>
                <stringProp name="1089781081">2	2name	1name</stringProp>
                <stringProp name="-999649764">3	3name	2name</stringProp>
                <stringProp name="1205886687">4	4name	3name</stringProp>
                <stringProp name="-883544158">5	5name	4name</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-038" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal,lag(sal) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181771796">ALLEN	SALESMAN	1600	1500</stringProp>
                <stringProp name="820862001">BLAKE	MANAGER	2850	2450</stringProp>
                <stringProp name="50658205">CLARK	MANAGER	2450	1600</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-039" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lag(sal,1,500) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181771796">ALLEN	SALESMAN	1600	1500</stringProp>
                <stringProp name="820862001">BLAKE	MANAGER	2850	2450</stringProp>
                <stringProp name="50658205">CLARK	MANAGER	2450	1600</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-040" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lag(sal,2) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181773718">ALLEN	SALESMAN	1600	1300</stringProp>
                <stringProp name="820833977">BLAKE	MANAGER	2850	1600</stringProp>
                <stringProp name="50657244">CLARK	MANAGER	2450	1500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-041" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lag(sal,3) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181774524">ALLEN	SALESMAN	1600	1250</stringProp>
                <stringProp name="820833016">BLAKE	MANAGER	2850	1500</stringProp>
                <stringProp name="50655322">CLARK	MANAGER	2450	1300</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-042" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lead(sal) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181742811">ALLEN	SALESMAN	1600	2450</stringProp>
                <stringProp name="820866873">BLAKE	MANAGER	2850	2975</stringProp>
                <stringProp name="50690073">CLARK	MANAGER	2450	2850</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-043" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lead(sal,1) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181742811">ALLEN	SALESMAN	1600	2450</stringProp>
                <stringProp name="820866873">BLAKE	MANAGER	2850	2975</stringProp>
                <stringProp name="50690073">CLARK	MANAGER	2450	2850</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-044" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lead(sal,2) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181738967">ALLEN	SALESMAN	1600	2850</stringProp>
                <stringProp name="820887793">BLAKE	MANAGER	2850	3000</stringProp>
                <stringProp name="50691101">CLARK	MANAGER	2450	2975</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-045" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lead(sal,3) over(order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3; </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="50712021">CLARK	MANAGER	2450	3000</stringProp>
                <stringProp name="820947375">BLAKE	MANAGER	2850	5000</stringProp>
                <stringProp name="-181737939">ALLEN	SALESMAN	1600	2975</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-046" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lead(sal,1) over(partition by job order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-179891121">ALLEN	SALESMAN	1600	null</stringProp>
                <stringProp name="820866873">BLAKE	MANAGER	2850	2975</stringProp>
                <stringProp name="50690073">CLARK	MANAGER	2450	2850</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-047" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename,job,sal ,lag(sal,1) over(partition by job order by sal) last_sal from Test_Window_Functions_1 order by ename,job,sal,last_sal limit 3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-181771796">ALLEN	SALESMAN	1600	1500</stringProp>
                <stringProp name="820862001">BLAKE	MANAGER	2850	2450</stringProp>
                <stringProp name="52537919">CLARK	MANAGER	2450	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-048" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename, hiredate, sal, count(*) from Test_Window_Functions_1 where ename like &apos;%S%&apos; group by ename, hiredate, sal order by ename, hiredate, sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1228311269">JAMES	1981-12-03	950	1</stringProp>
                <stringProp name="953101445">JONES	1981-04-02	2975	1</stringProp>
                <stringProp name="1371465282">SMITH	1980-12-17	800	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-049" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select ename, hiredate, sal, count(*) from Test_Window_Functions_1 where ename like &apos;%S%&apos; group by ROLLUP(ename, hiredate, sal) order by ename, hiredate, sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-902865327">null	null	null	3</stringProp>
                <stringProp name="-1228433812">JAMES	null	null	1</stringProp>
                <stringProp name="-2139579216">JAMES	1981-12-03	null	1</stringProp>
                <stringProp name="-1228311269">JAMES	1981-12-03	950	1</stringProp>
                <stringProp name="1721574111">JONES	null	null	1</stringProp>
                <stringProp name="-1567073753">JONES	1981-04-02	null	1</stringProp>
                <stringProp name="953101445">JONES	1981-04-02	2975	1</stringProp>
                <stringProp name="-1266242901">SMITH	null	null	1</stringProp>
                <stringProp name="1177329293">SMITH	1980-12-17	null	1</stringProp>
                <stringProp name="1371465282">SMITH	1980-12-17	800	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-050" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select ename, hiredate, sal, count(*) from Test_Window_Functions_1 where ename like &apos;%S%&apos; group by cube(ename, hiredate, sal) order by ename, hiredate, sal);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1600">22</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-051" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select ename,sal,hiredate,
first_value(ename) over  (order by hiredate asc rows 5 preceding) first_ename,
first_value(hiredate) over (order by hiredate asc rows 5 preceding) first_hiredate
from Test_Window_Functions_1 order by ename,sal,hiredate asc);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-052" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
select ename,sal,hiredate,
last_value(ename) over  (order by hiredate asc rows 5 preceding) last_ename,
last_value(hiredate) over (order by hiredate asc rows 5 preceding) last_hiredate
from Test_Window_Functions_1 order by ename,sal,hiredate asc);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-053" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--Partition by，按相应的值(empno)进行分组统计
SELECT empno,ename||&apos; &apos;||job e_name,hiredate,sal,AVG(sal) OVER (PARTITION BY empno) avg_sal FROM Test_Window_Functions_1 order by empno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1888889824">7369	SMITH CLERK	1980-12-17	800	800.0</stringProp>
                <stringProp name="-1945161128">7499	ALLEN SALESMAN	1981-02-20	1600	1600.0</stringProp>
                <stringProp name="1551638468">7521	WARD SALESMAN	1981-02-22	1250	1250.0</stringProp>
                <stringProp name="-1146347215">7566	JONES MANAGER	1981-04-02	2975	2975.0</stringProp>
                <stringProp name="1811867905">7654	MARTIN SALESMAN	1981-09-28	1150	1150.0</stringProp>
                <stringProp name="-1903970315">7698	BLAKE MANAGER	1981-05-01	2850	2850.0</stringProp>
                <stringProp name="1866715360">7782	CLARK MANAGER	1981-06-09	2450	2450.0</stringProp>
                <stringProp name="155081593">7839	KING PRESIDENT	1981-11-17	5000	5000.0</stringProp>
                <stringProp name="-492997105">7844	TURNER SALESMAN	1981-09-08	1500	1500.0</stringProp>
                <stringProp name="1588483319">7900	JAMES CLERK	1981-12-08	950	950.0</stringProp>
                <stringProp name="-1600040079">7902	FORD ANALYST	1981-12-08	3000	3000.0</stringProp>
                <stringProp name="52702665">7934	MILLER CLERK	1982-01-23	1300	1300.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-054" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT a.empno,a.e_name,a.hiredate,a.sal,b.avg_sal 
FROM (SELECT empno,ename||&apos; &apos;||job e_name,hiredate,sal FROM Test_Window_Functions_1) a,(SELECT empno,AVG(sal) avg_sal FROM Test_Window_Functions_1 GROUP BY empno) b  WHERE a.empno=b.empno ORDER BY a.empno,a.e_name,a.hiredate,a.sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1888889824">7369	SMITH CLERK	1980-12-17	800	800.0</stringProp>
                <stringProp name="-1945161128">7499	ALLEN SALESMAN	1981-02-20	1600	1600.0</stringProp>
                <stringProp name="1551638468">7521	WARD SALESMAN	1981-02-22	1250	1250.0</stringProp>
                <stringProp name="-1146347215">7566	JONES MANAGER	1981-04-02	2975	2975.0</stringProp>
                <stringProp name="1811867905">7654	MARTIN SALESMAN	1981-09-28	1150	1150.0</stringProp>
                <stringProp name="-1903970315">7698	BLAKE MANAGER	1981-05-01	2850	2850.0</stringProp>
                <stringProp name="1866715360">7782	CLARK MANAGER	1981-06-09	2450	2450.0</stringProp>
                <stringProp name="155081593">7839	KING PRESIDENT	1981-11-17	5000	5000.0</stringProp>
                <stringProp name="-492997105">7844	TURNER SALESMAN	1981-09-08	1500	1500.0</stringProp>
                <stringProp name="1588483319">7900	JAMES CLERK	1981-12-08	950	950.0</stringProp>
                <stringProp name="-1600040079">7902	FORD ANALYST	1981-12-08	3000	3000.0</stringProp>
                <stringProp name="52702665">7934	MILLER CLERK	1982-01-23	1300	1300.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-055" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--Order by按相应的值(hiredate)进行排序并累计统计
SELECT empno,ename||&apos; &apos;||job e_name,hiredate,sal,AVG(sal) OVER (ORDER BY hiredate) FROM Test_Window_Functions_1 order by empno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1888889824">7369	SMITH CLERK	1980-12-17	800	800.0</stringProp>
                <stringProp name="-1948855212">7499	ALLEN SALESMAN	1981-02-20	1600	1200.0</stringProp>
                <stringProp name="1869717333">7521	WARD SALESMAN	1981-02-22	1250	1216.6666666666667</stringProp>
                <stringProp name="2142733729">7566	JONES MANAGER	1981-04-02	2975	1656.25</stringProp>
                <stringProp name="-719061486">7654	MARTIN SALESMAN	1981-09-28	1150	1821.875</stringProp>
                <stringProp name="-1932475497">7698	BLAKE MANAGER	1981-05-01	2850	1895.0</stringProp>
                <stringProp name="1842799919">7782	CLARK MANAGER	1981-06-09	2450	1987.5</stringProp>
                <stringProp name="70331003">7839	KING PRESIDENT	1981-11-17	5000	2175.0</stringProp>
                <stringProp name="1797802178">7844	TURNER SALESMAN	1981-09-08	1500	1917.857142857143</stringProp>
                <stringProp name="1173995708">7900	JAMES CLERK	1981-12-08	950	2138.6363636363635</stringProp>
                <stringProp name="654632847">7902	FORD ANALYST	1981-12-08	3000	2138.6363636363635</stringProp>
                <stringProp name="-1853788729">7934	MILLER CLERK	1982-01-23	1300	2068.75</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-056" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--Partition by Order by首先按相应的值(empno,hiredate)排序，并按order by的值(hiredate)进行累计统计
SELECT empno,ename||&apos; &apos;||job e_name,hiredate,sal,AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate) FROM Test_Window_Functions_1 order by empno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1888889824">7369	SMITH CLERK	1980-12-17	800	800.0</stringProp>
                <stringProp name="-1945161128">7499	ALLEN SALESMAN	1981-02-20	1600	1600.0</stringProp>
                <stringProp name="1551638468">7521	WARD SALESMAN	1981-02-22	1250	1250.0</stringProp>
                <stringProp name="-1146347215">7566	JONES MANAGER	1981-04-02	2975	2975.0</stringProp>
                <stringProp name="1811867905">7654	MARTIN SALESMAN	1981-09-28	1150	1150.0</stringProp>
                <stringProp name="-1903970315">7698	BLAKE MANAGER	1981-05-01	2850	2850.0</stringProp>
                <stringProp name="1866715360">7782	CLARK MANAGER	1981-06-09	2450	2450.0</stringProp>
                <stringProp name="155081593">7839	KING PRESIDENT	1981-11-17	5000	5000.0</stringProp>
                <stringProp name="-492997105">7844	TURNER SALESMAN	1981-09-08	1500	1500.0</stringProp>
                <stringProp name="1588483319">7900	JAMES CLERK	1981-12-08	950	950.0</stringProp>
                <stringProp name="-1600040079">7902	FORD ANALYST	1981-12-08	3000	3000.0</stringProp>
                <stringProp name="52702665">7934	MILLER CLERK	1982-01-23	1300	1300.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-057" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--Partition by Order by首先按相应的值(empno,hiredate)排序，并按order by的值(hiredate)进行累计统计
--该平均值由当前员工和与之具有相同经理的前一个和后两个三者的平均数得来
SELECT empno,ename||&apos; &apos;||job e_name,hiredate,sal,AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate ROWS BETWEEN 1 PRECEDING AND 2 FOLLOWING) FROM Test_Window_Functions_1 order by empno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1888889824">7369	SMITH CLERK	1980-12-17	800	800.0</stringProp>
                <stringProp name="-1945161128">7499	ALLEN SALESMAN	1981-02-20	1600	1600.0</stringProp>
                <stringProp name="1551638468">7521	WARD SALESMAN	1981-02-22	1250	1250.0</stringProp>
                <stringProp name="-1146347215">7566	JONES MANAGER	1981-04-02	2975	2975.0</stringProp>
                <stringProp name="1811867905">7654	MARTIN SALESMAN	1981-09-28	1150	1150.0</stringProp>
                <stringProp name="-1903970315">7698	BLAKE MANAGER	1981-05-01	2850	2850.0</stringProp>
                <stringProp name="1866715360">7782	CLARK MANAGER	1981-06-09	2450	2450.0</stringProp>
                <stringProp name="155081593">7839	KING PRESIDENT	1981-11-17	5000	5000.0</stringProp>
                <stringProp name="-492997105">7844	TURNER SALESMAN	1981-09-08	1500	1500.0</stringProp>
                <stringProp name="1588483319">7900	JAMES CLERK	1981-12-08	950	950.0</stringProp>
                <stringProp name="-1600040079">7902	FORD ANALYST	1981-12-08	3000	3000.0</stringProp>
                <stringProp name="52702665">7934	MILLER CLERK	1982-01-23	1300	1300.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-058" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--Partition by Order by首先按相应的值(empno,hiredate)排序，并按order by的值(hiredate)进行累计统计
--该平均值由当前员工和与之具有相同经理,并且雇用时间在该员工时间之前的50天以内和在该员工之后的150天之内员工的薪水的平均值
--range为取值范围，估计只有数字和日期能够进行取值了
SELECT empno,ename||&apos; &apos;||job e_name,hiredate,sal,AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate RANGE BETWEEN 50 PRECEDING AND 150 FOLLOWING) FROM Test_Window_Functions_1 order by empno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1888889824">7369	SMITH CLERK	1980-12-17	800	800.0</stringProp>
                <stringProp name="-1945161128">7499	ALLEN SALESMAN	1981-02-20	1600	1600.0</stringProp>
                <stringProp name="1551638468">7521	WARD SALESMAN	1981-02-22	1250	1250.0</stringProp>
                <stringProp name="-1146347215">7566	JONES MANAGER	1981-04-02	2975	2975.0</stringProp>
                <stringProp name="1811867905">7654	MARTIN SALESMAN	1981-09-28	1150	1150.0</stringProp>
                <stringProp name="-1903970315">7698	BLAKE MANAGER	1981-05-01	2850	2850.0</stringProp>
                <stringProp name="1866715360">7782	CLARK MANAGER	1981-06-09	2450	2450.0</stringProp>
                <stringProp name="155081593">7839	KING PRESIDENT	1981-11-17	5000	5000.0</stringProp>
                <stringProp name="-492997105">7844	TURNER SALESMAN	1981-09-08	1500	1500.0</stringProp>
                <stringProp name="1588483319">7900	JAMES CLERK	1981-12-08	950	950.0</stringProp>
                <stringProp name="-1600040079">7902	FORD ANALYST	1981-12-08	3000	3000.0</stringProp>
                <stringProp name="52702665">7934	MILLER CLERK	1982-01-23	1300	1300.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-059" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">--Partition by Order by首先按相应的值(empno,hiredate)排序，并按order by的值(hiredate)进行累计统计
--该平均值由当前员工和与之具有相同经理的平均值
--每行对应的数据窗口是从第一行到最后一行
SELECT empno,ename||&apos; &apos;||job e_name,hiredate,sal,
AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate) avg_sal_part_order,
AVG(sal) OVER (PARTITION BY empno ) avg_sal_order, 
AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) avg_sal_unbound1, --等同于仅partition时候的值
AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) avg_sal_unbound2--等同于上面
FROM Test_Window_Functions_1 order by empno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-794561901">7369	SMITH CLERK	1980-12-17	800	800.0	800.0	800.0	800.0</stringProp>
                <stringProp name="115255128">7499	ALLEN SALESMAN	1981-02-20	1600	1600.0	1600.0	1600.0	1600.0</stringProp>
                <stringProp name="-372422365">7521	WARD SALESMAN	1981-02-22	1250	1250.0	1250.0	1250.0	1250.0</stringProp>
                <stringProp name="1857526431">7566	JONES MANAGER	1981-04-02	2975	2975.0	2975.0	2975.0	2975.0</stringProp>
                <stringProp name="931494245">7654	MARTIN SALESMAN	1981-09-28	1150	1150.0	1150.0	1150.0	1150.0</stringProp>
                <stringProp name="283367127">7698	BLAKE MANAGER	1981-05-01	2850	2850.0	2850.0	2850.0	2850.0</stringProp>
                <stringProp name="-658729912">7782	CLARK MANAGER	1981-06-09	2450	2450.0	2450.0	2450.0	2450.0</stringProp>
                <stringProp name="236604173">7839	KING PRESIDENT	1981-11-17	5000	5000.0	5000.0	5000.0	5000.0</stringProp>
                <stringProp name="1226214752">7844	TURNER SALESMAN	1981-09-08	1500	1500.0	1500.0	1500.0	1500.0</stringProp>
                <stringProp name="-725089090">7900	JAMES CLERK	1981-12-08	950	950.0	950.0	950.0	950.0</stringProp>
                <stringProp name="-253684969">7902	FORD ANALYST	1981-12-08	3000	3000.0	3000.0	3000.0	3000.0</stringProp>
                <stringProp name="-2096263004">7934	MILLER CLERK	1982-01-23	1300	1300.0	1300.0	1300.0	1300.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-060" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT deptno,ename||&apos; &apos;||job e_name,hiredate, sal,
MIN(sal) OVER (PARTITION BY deptno order by hiredate) AS dept_min,
MAX(sal) OVER (PARTITION BY deptno order by hiredate) AS dept_max, 
AVG(sal) OVER (PARTITION BY deptno order by hiredate) AS dept_avg,   
SUM(sal) OVER (PARTITION BY deptno order by hiredate) AS dept_sum,   
COUNT(*) OVER (ORDER BY sal) AS count_by_sal, 
COUNT(*) OVER (ORDER BY sal RANGE BETWEEN 50 PRECEDING AND 150 FOLLOWING) AS count_by_sal_range
FROM Test_Window_Functions_1 order by deptno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1602874850">10	CLARK MANAGER	1981-06-09	2450	2450	2450	2450.0	2450	8	1</stringProp>
                <stringProp name="1533164400">10	KING PRESIDENT	1981-11-17	5000	2450	5000	3725.0	7450	12	1</stringProp>
                <stringProp name="-648244515">10	MILLER CLERK	1982-01-23	1300	1300	5000	2916.6666666666665	8750	5	2</stringProp>
                <stringProp name="1651312739">20	FORD ANALYST	1981-12-08	3000	800	3000	2258.3333333333335	6775	11	2</stringProp>
                <stringProp name="-900255908">20	JONES MANAGER	1981-04-02	2975	800	2975	1887.5	3775	10	2</stringProp>
                <stringProp name="1372895007">20	SMITH CLERK	1980-12-17	800	800	800	800.0	800	1	2</stringProp>
                <stringProp name="-1520240052">30	ALLEN SALESMAN	1981-02-20	1600	1600	1600	1600.0	1600	7	1</stringProp>
                <stringProp name="1710502317">30	BLAKE MANAGER	1981-05-01	2850	1250	2850	1900.0	5700	9	3</stringProp>
                <stringProp name="1304155450">30	JAMES CLERK	1981-12-08	950	950	2850	1550.0	9300	2	1</stringProp>
                <stringProp name="-985680140">30	MARTIN SALESMAN	1981-09-28	1150	1150	2850	1670.0	8350	3	3</stringProp>
                <stringProp name="1420848361">30	TURNER SALESMAN	1981-09-08	1500	1250	2850	1800.0	7200	6	2</stringProp>
                <stringProp name="850675097">30	WARD SALESMAN	1981-02-22	1250	1250	1600	1425.0	2850	4	2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-061" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT deptno,ename||&apos; &apos;||job e_name,sal,
COUNT(*) OVER (ORDER BY sal) AS count_by_sal, 
COUNT(*) OVER (ORDER BY sal RANGE BETWEEN 50 PRECEDING AND 150 FOLLOWING) AS count_by_sal_range
FROM Test_Window_Functions_1 WHERE deptno in (10,20,30) order by deptno, e_name,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1569565655">10	CLARK MANAGER	2450	8	1</stringProp>
                <stringProp name="-1701108945">10	KING PRESIDENT	5000	12	1</stringProp>
                <stringProp name="-1814966184">10	MILLER CLERK	1300	5	2</stringProp>
                <stringProp name="-268678380">20	FORD ANALYST	3000	11	2</stringProp>
                <stringProp name="271939740">20	JONES MANAGER	2975	10	2</stringProp>
                <stringProp name="795870957">20	SMITH CLERK	800	1	2</stringProp>
                <stringProp name="-1545085452">30	ALLEN SALESMAN	1600	7	1</stringProp>
                <stringProp name="-1127077038">30	BLAKE MANAGER	2850	9	3</stringProp>
                <stringProp name="1763261225">30	JAMES CLERK	950	2	1</stringProp>
                <stringProp name="17488945">30	MARTIN SALESMAN	1150	3	3</stringProp>
                <stringProp name="-929896693">30	TURNER SALESMAN	1500	6	2</stringProp>
                <stringProp name="675037171">30	WARD SALESMAN	1250	4	2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-062" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
SELECT deptno,ename||&apos; &apos;||job e_name,sal,
RANK() OVER (ORDER BY sal) AS RANK_ORDER,
DENSE_RANK() OVER (ORDER BY sal) AS DENSE_RANK_ORDER,
PERCENT_RANK() OVER (ORDER BY sal) AS PERCENT_RANK_ORDER,
ROW_NUMBER() OVER (ORDER BY sal) AS ROW_NUMBER_ORDER
FROM Test_Window_Functions_1 order by deptno, e_name,sal);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-063" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
SELECT deptno,ename||&apos; &apos;||job e_name,sal,
RANK() OVER (PARTITION BY deptno ORDER BY sal) AS RANK_PART_ORDER, 
DENSE_RANK() OVER (PARTITION BY deptno ORDER BY sal) AS DENSE_RANK_PART_ORDER,
PERCENT_RANK() OVER (PARTITION BY deptno ORDER BY sal) AS PERCENT_RANK_ORDER,
ROW_NUMBER() OVER (PARTITION BY deptno ORDER BY sal) AS ROW_NUMBER_ORDER 
FROM Test_Window_Functions_1 order by deptno, e_name,sal,RANK_PART_ORDER,DENSE_RANK_PART_ORDER,PERCENT_RANK_ORDER,ROW_NUMBER_ORDER);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-064" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT deptno,ename||&apos; &apos;||job e_name,hiredate,sal,
STDDEV_POP(sal) OVER (PARTITION BY deptno ORDER BY hiredate) AS &quot;STDDEV_POP&quot;,
STDDEV_SAMP(sal) OVER (PARTITION BY deptno ORDER BY hiredate) AS &quot;STDDEV_SAMP&quot;,
VAR_POP(sal) OVER (PARTITION BY deptno ORDER BY hiredate) AS &quot;VAR_POP&quot;,
VAR_SAMP(sal) OVER (PARTITION BY deptno ORDER BY hiredate) AS &quot;VAR_SAMP&quot;
FROM Test_Window_Functions_1 order by deptno, e_name,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1040455485">10	CLARK MANAGER	1981-06-09	2450	0.0	NaN	0.0	NaN</stringProp>
                <stringProp name="292449437">10	KING PRESIDENT	1981-11-17	5000	1275.0	1803.1222920256962	1625625.0	3251250.0</stringProp>
                <stringProp name="-1485423266">10	MILLER CLERK	1982-01-23	1300	1546.1421524412158	1893.6296716447314	2390555.5555555555	3585833.333333333</stringProp>
                <stringProp name="-1547079742">20	FORD ANALYST	1981-12-08	3000	1031.2478956207485	1263.0155712948806	1063472.2222222222	1595208.3333333335</stringProp>
                <stringProp name="1338949179">20	JONES MANAGER	1981-04-02	2975	1087.5	1537.957249080741	1182656.25	2365312.5</stringProp>
                <stringProp name="257565126">20	SMITH CLERK	1980-12-17	800	0.0	NaN	0.0	NaN</stringProp>
                <stringProp name="559462062">30	ALLEN SALESMAN	1981-02-20	1600	0.0	NaN	0.0	NaN</stringProp>
                <stringProp name="-3025176">30	BLAKE MANAGER	1981-05-01	2850	686.7799259345505	841.1301920630361	471666.6666666667	707500.0</stringProp>
                <stringProp name="-954696827">30	JAMES CLERK	1981-12-08	950	619.8117993929018	678.9698078707182	384166.6666666667	461000.0</stringProp>
                <stringProp name="-1680904927">30	MARTIN SALESMAN	1981-09-28	1150	612.0457499239742	684.2879510849216	374600.0	468250.0</stringProp>
                <stringProp name="-1168368095">30	TURNER SALESMAN	1981-09-08	1500	619.4755846681934	715.3087911291645	383750.0	511666.6666666667</stringProp>
                <stringProp name="-1437866429">30	WARD SALESMAN	1981-02-22	1250	175.0	247.48737341529164	30625.0	61250.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-065" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT empno,ename,
VAR_POP(sal) OVER (ORDER BY deptno,hiredate ) VAR_POP1,
VAR_SAMP(sal) OVER (ORDER BY deptno,hiredate ) VAR_SAMP1
FROM Test_Window_Functions_1 order by empno,ename;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1582907093">7369	SMITH	2632968.75	3510625.0</stringProp>
                <stringProp name="884166473">7499	ALLEN	1692576.530612245	1974672.6190476192</stringProp>
                <stringProp name="687770126">7521	WARD	1637568.359375	1871506.6964285714</stringProp>
                <stringProp name="672509059">7566	JONES	2161600.0	2702000.0</stringProp>
                <stringProp name="-2097258457">7654	MARTIN	1380092.9752066114	1518102.2727272727</stringProp>
                <stringProp name="-1942501143">7698	BLAKE	1485833.3333333333	1671562.5</stringProp>
                <stringProp name="2068833309">7782	CLARK	0.0	NaN</stringProp>
                <stringProp name="1630690926">7839	KING	1625625.0	3251250.0</stringProp>
                <stringProp name="-1070921624">7844	TURNER	1403556.25	1559506.9444444445</stringProp>
                <stringProp name="-1871897413">7900	JAMES	1378867.1875	1504218.75</stringProp>
                <stringProp name="-1223754906">7902	FORD	1835364.5833333333	2202437.5</stringProp>
                <stringProp name="2020127072">7934	MILLER	2390555.5555555555	3585833.333333333</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-066" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT deptno,ename||&apos; &apos;||job e_name,sal,
CUME_DIST() OVER (PARTITION BY deptno ORDER BY sal) AS cume_dist
FROM Test_Window_Functions_1 order by deptno,e_name,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="66009141">10	CLARK MANAGER	2450	0.6666666666666666</stringProp>
                <stringProp name="1746240749">10	KING PRESIDENT	5000	1.0</stringProp>
                <stringProp name="1469865380">10	MILLER CLERK	1300	0.3333333333333333</stringProp>
                <stringProp name="129880232">20	FORD ANALYST	3000	1.0</stringProp>
                <stringProp name="-1904475662">20	JONES MANAGER	2975	0.6666666666666666</stringProp>
                <stringProp name="1832456939">20	SMITH CLERK	800	0.3333333333333333</stringProp>
                <stringProp name="-164277371">30	ALLEN SALESMAN	1600	0.8333333333333334</stringProp>
                <stringProp name="-1127083582">30	BLAKE MANAGER	2850	1.0</stringProp>
                <stringProp name="-1164072414">30	JAMES CLERK	950	0.16666666666666666</stringProp>
                <stringProp name="-771560694">30	MARTIN SALESMAN	1150	0.3333333333333333</stringProp>
                <stringProp name="-726652046">30	TURNER SALESMAN	1500	0.6666666666666666</stringProp>
                <stringProp name="675034477">30	WARD SALESMAN	1250	0.5</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-067" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT deptno,ename||&apos; &apos;||job e_name,sal,
NTILE(4) OVER (PARTITION BY deptno ORDER BY sal DESC) AS quartile
FROM Test_Window_Functions_1 order by deptno,e_name,quartile,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1929090843">10	CLARK MANAGER	2450	2</stringProp>
                <stringProp name="1865502187">10	KING PRESIDENT	5000	1</stringProp>
                <stringProp name="-1530378547">10	MILLER CLERK	1300	3</stringProp>
                <stringProp name="576670822">20	FORD ANALYST	3000	1</stringProp>
                <stringProp name="1798817726">20	JONES MANAGER	2975	2</stringProp>
                <stringProp name="-901964122">20	SMITH CLERK	800	3</stringProp>
                <stringProp name="995039142">30	ALLEN SALESMAN	1600	1</stringProp>
                <stringProp name="-1578824704">30	BLAKE MANAGER	2850	1</stringProp>
                <stringProp name="-1271906781">30	JAMES CLERK	950	4</stringProp>
                <stringProp name="-134059865">30	MARTIN SALESMAN	1150	3</stringProp>
                <stringProp name="3501630">30	TURNER SALESMAN	1500	2</stringProp>
                <stringProp name="-1800412888">30	WARD SALESMAN	1250	2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 TC-068" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT deptno,ename||&apos; &apos;||job e_name,sal,
CUME_DIST() OVER (PARTITION BY deptno ORDER BY sal) AS cume_dist, --数据分布百分比
NTILE(4) OVER (PARTITION BY deptno ORDER BY sal) AS quartile,    --数据分布，以NTILE中的exp来计算
PERCENT_RANK() OVER (PARTITION BY deptno ORDER BY sal) AS pr    --数据分布百分比，从0开始计
FROM Test_Window_Functions_1 order by deptno,e_name,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2003862156">10	CLARK MANAGER	2450	0.6666666666666666	2	0.5</stringProp>
                <stringProp name="104235137">10	KING PRESIDENT	5000	1.0	3	1.0</stringProp>
                <stringProp name="-877428427">10	MILLER CLERK	1300	0.3333333333333333	1	0.0</stringProp>
                <stringProp name="1600639996">20	FORD ANALYST	3000	1.0	3	1.0</stringProp>
                <stringProp name="-1149482359">20	JONES MANAGER	2975	0.6666666666666666	2	0.5</stringProp>
                <stringProp name="-1341201092">20	SMITH CLERK	800	0.3333333333333333	1	0.0</stringProp>
                <stringProp name="-310970016">30	ALLEN SALESMAN	1600	0.8333333333333334	3	0.8</stringProp>
                <stringProp name="-906530537">30	BLAKE MANAGER	2850	1.0	4	1.0</stringProp>
                <stringProp name="-1931675853">30	JAMES CLERK	950	0.16666666666666666	1	0.0</stringProp>
                <stringProp name="1140320797">30	MARTIN SALESMAN	1150	0.3333333333333333	1	0.2</stringProp>
                <stringProp name="-582265846">30	TURNER SALESMAN	1500	0.6666666666666666	2	0.6</stringProp>
                <stringProp name="1302902211">30	WARD SALESMAN	1250	0.5	2	0.4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="298 T610 drop table Test_Window_Functions_1 if exists cascade;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table Test_Window_Functions_1 if exists cascade;
drop table Test_Window_Functions_4 if exists cascade;
drop table Test_Window_Functions_5 if exists cascade;
drop table Test_Window_Functions_6 if exists cascade;
drop table Test_Window_Functions_7 if exists cascade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="655 T611 Elementary OLAP operations" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 CREATE TABLE Test_Window_Fun_t1(       name varchar(50),       grade INT,       mark NUMERIC(4,1),       sort INT  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE TABLE Test_Window_Fun_t1(
      name varchar(50),
      grade INT,
      mark NUMERIC(4,1),
      sort INT
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611  INSERT INTO Test_Window_Fun_t1 VALUES(&apos;a1&apos;,1,90,1),(&apos;b1&apos;,1,82,2),(&apos;c1&apos;,1,60,3),(&apos;d1&apos;,1,15,4),                                       (&apos;a2&apos;,2,86,1),(&apos;b2&apos;,2,65,2),(&apos;c2&apos;,2,45,3),                                       (&apos;a3&apos;,3,95,1),(&apos;b3&apos;,3,78,2),(&apos;c3&apos;,3,45,3)                                       (null,null,null,null),                                       (&apos;a4&apos;,null,null,null),(null,4,null,null),(null,null,76,null),(null,null,null,1),(&apos;a4&apos;,4,null,null);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> INSERT INTO Test_Window_Fun_t1 VALUES(&apos;a1&apos;,1,90,1),(&apos;b1&apos;,1,82,2),(&apos;c1&apos;,1,60,3),(&apos;d1&apos;,1,15,4),
                                      (&apos;a2&apos;,2,86,1),(&apos;b2&apos;,2,65,2),(&apos;c2&apos;,2,45,3),
                                      (&apos;a3&apos;,3,95,1),(&apos;b3&apos;,3,78,2),(&apos;c3&apos;,3,45,3);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611  SELECT * FROM Test_Window_Fun_t1 ORDER BY grade ASC;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM Test_Window_Fun_t1
ORDER BY grade ASC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*) FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1567">10</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,avg(sort) 
  OVER (PARTITION BY grade) as avg_sort
  FROM Test_Window_Fun_t1
  ORDER BY mark,name,grade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="200649522">NAME	GRADE	MARK	AVG_SORT
d1	1	15.0	2.5
c2	2	45.0	2.0
c3	3	45.0	2.0
c1	1	60.0	2.5
b2	2	65.0	2.0
b3	3	78.0	2.0
b1	1	82.0	2.5
a2	2	86.0	2.0
a1	1	90.0	2.5
a3	3	95.0	2.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,sum(mark) 
  OVER (PARTITION BY name) as sum_mark
  FROM Test_Window_Fun_t1
  ORDER BY mark,name,grade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1687647669">NAME	GRADE	MARK	SUM_MARK
d1	1	15.0	15.0
c2	2	45.0	45.0
c3	3	45.0	45.0
c1	1	60.0	60.0
b2	2	65.0	65.0
b3	3	78.0	78.0
b1	1	82.0	82.0
a2	2	86.0	86.0
a1	1	90.0	90.0
a3	3	95.0	95.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,max(name) 
  OVER (PARTITION BY grade) AS max_name
  FROM Test_Window_Fun_t1
  ORDER BY grade,mark,name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="584390664">NAME	GRADE	MARK	MAX_NAME
d1	1	15.0	d1
c1	1	60.0	d1
b1	1	82.0	d1
a1	1	90.0	d1
c2	2	45.0	c2
b2	2	65.0	c2
a2	2	86.0	c2
c3	3	45.0	c3
b3	3	78.0	c3
a3	3	95.0	c3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,MIN(mark) 
  OVER (PARTITION BY name) AS min_mark
  FROM Test_Window_Fun_t1
  ORDER BY grade DESC,mark,name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-332089722">NAME	GRADE	MARK	MIN_MARK
c3	3	45.0	45.0
b3	3	78.0	78.0
a3	3	95.0	95.0
c2	2	45.0	45.0
b2	2	65.0	65.0
a2	2	86.0	86.0
d1	1	15.0	15.0
c1	1	60.0	60.0
b1	1	82.0	82.0
a1	1	90.0	90.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,MIN(mark) 
  OVER (PARTITION BY name) AS min_mark
  FROM Test_Window_Fun_t1
  ORDER BY grade DESC,mark,name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1704846780">NAME	GRADE	MARK	MIN_MARK
c3	3	45.0	45.0
b3	3	78.0	78.0
a3	3	95.0	95.0
c2	2	45.0	45.0
b2	2	65.0	65.0
a2	2	86.0	86.0
d1	1	15.0	15.0
c1	1	60.0	60.0
b1	1	82.0	82.0
a1	1	90.0	90.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-007" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,COUNT(mark) 
  OVER (PARTITION BY grade) AS count_mark
  FROM Test_Window_Fun_t1
  ORDER BY name DESC,mark,grade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1981376208">NAME	GRADE	MARK	COUNT_MARK
d1	1	15.0	4
c3	3	45.0	3
c2	2	45.0	3
c1	1	60.0	4
b3	3	78.0	3
b2	2	65.0	3
b1	1	82.0	4
a3	3	95.0	3
a2	2	86.0	3
a1	1	90.0	4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-008" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,
  COUNT(mark) OVER (PARTITION BY grade) AS count_mark,
  SUM(sort) OVER (PARTITION BY name) AS sum_sort,
  MAX(grade) OVER (PARTITION BY mark) AS max_grade,
  MIN(name) OVER (PARTITION BY grade) AS min_name,
  AVG(mark)  OVER (PARTITION BY grade) AS avgn_mark
  FROM Test_Window_Fun_t1
  ORDER BY name DESC,grade ASC,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-430499509">NAME	GRADE	MARK	COUNT_MARK	SUM_SORT	MAX_GRADE	MIN_NAME	AVGN_MARK
d1	1	15.0	4	4	1	a1	61.7
c3	3	45.0	3	3	3	a3	72.7
c2	2	45.0	3	3	3	a2	65.3
c1	1	60.0	4	3	1	a1	61.7
b3	3	78.0	3	2	3	a3	72.7
b2	2	65.0	3	2	2	a2	65.3
b1	1	82.0	4	2	1	a1	61.7
a3	3	95.0	3	1	3	a3	72.7
a2	2	86.0	3	1	2	a2	65.3
a1	1	90.0	4	1	1	a1	61.7
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-09E" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,row_number() 
  FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-286616680">IO error: 0
can not query formated sql: 
null, 0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-010" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name, grade, mark, 
  rank() OVER (PARTITION BY grade ORDER BY mark DESC) rk 
  FROM Test_Window_Fun_t1 
  order by grade, rk,name,mark desc;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-731136214">NAME	GRADE	MARK	RK
a1	1	90.0	1
b1	1	82.0	2
c1	1	60.0	3
d1	1	15.0	4
a2	2	86.0	1
b2	2	65.0	2
c2	2	45.0	3
a3	3	95.0	1
b3	3	78.0	2
c3	3	45.0	3
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-011" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query"> SELECT name,grade,mark,rank()
 OVER(PARTITION BY grade,name ORDER BY mark DESC
  ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS sort
  FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-689079311">NAME	GRADE	MARK	SORT
c2	2	45.0	1
c3	3	45.0	1
b1	1	82.0	1
a3	3	95.0	1
b3	3	78.0	1
a1	1	90.0	1
c1	1	60.0	1
b2	2	65.0	1
d1	1	15.0	1
a2	2	86.0	1
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-012" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">   SELECT name,grade,mark,
   sum(mark) OVER(PARTITION BY grade ORDER BY mark DESC
   RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS sort
   FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="496707299">NAME	GRADE	MARK	SORT
a1	1	90.0	90.0
b1	1	82.0	172.0
c1	1	60.0	232.0
d1	1	15.0	247.0
a3	3	95.0	95.0
b3	3	78.0	173.0
c3	3	45.0	218.0
a2	2	86.0	86.0
b2	2	65.0	151.0
c2	2	45.0	196.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 DELETE FROM Test_Window_Fun_t1;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DELETE FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 INSERT INTO Test_Window_Fun_t1 VALUES (null,null,null,null),                                               (&apos;a4&apos;,null,null,null),                                               (null,4,null,null),                                               (null,null,76,null),                                               (null,null,null,1),                                               (&apos;a4&apos;,4,null,null);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">        INSERT INTO Test_Window_Fun_t1 VALUES (null,null,null,null),
                                              (&apos;a4&apos;,null,null,null),
                                              (null,4,null,null),
                                              (null,null,76,null),
                                              (null,null,null,1),
                                              (&apos;a4&apos;,4,null,null);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-013" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*) FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="54">6</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 TC-014" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,avg(sort) 
  OVER (PARTITION BY grade) as avg_sort
  FROM Test_Window_Fun_t1
  ORDER BY mark,name,grade;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-382281573">NAME	GRADE	MARK	AVG_SORT
null	null	null	1.0
null	null	null	1.0
null	4	null	null
a4	null	null	1.0
a4	4	null	null
null	null	76.0	1.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="655 T611 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="656 T612 Advanced OLAP operations" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 CREATE TABLE Test_Window_Fun_t1(       name varchar(50),       grade INT,       mark NUMERIC(4,1),       sort INT  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE TABLE Test_Window_Fun_t1(
      name varchar(50),
      grade INT,
      mark NUMERIC(4,1),
      sort INT
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 INSERT INTO Test_Window_Fun_t1 VALUES(&apos;a1&apos;,1,90,1),(&apos;b1&apos;,1,82,2),(&apos;c1&apos;,1,60,3),(&apos;d1&apos;,1,15,4),                                       (&apos;a2&apos;,2,86,1),(&apos;b2&apos;,2,65,2),(&apos;c2&apos;,2,45,3),                                       (&apos;a3&apos;,3,95,1),(&apos;b3&apos;,3,78,2),(&apos;c3&apos;,3,45,3)                                       (null,null,null,null),                                       (&apos;a4&apos;,null,null,null),(null,4,null,null),(null,null,76,null),(null,null,null,1),(&apos;a4&apos;,4,null,null);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> INSERT INTO Test_Window_Fun_t1 VALUES(&apos;a1&apos;,1,90,1),(&apos;b1&apos;,1,82,2),(&apos;c1&apos;,1,60,3),(&apos;d1&apos;,1,15,4),
                                      (&apos;a2&apos;,2,86,1),(&apos;b2&apos;,2,65,2),(&apos;c2&apos;,2,45,3),
                                      (&apos;a3&apos;,3,95,1),(&apos;b3&apos;,3,78,2),(&apos;c3&apos;,3,45,3);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 SELECT * FROM Test_Window_Fun_t1 ORDER BY grade ASC;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM Test_Window_Fun_t1
ORDER BY grade ASC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*) FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1567">10</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name, grade, mark, 
  dense_rank() OVER (PARTITION BY grade order by mark DESC) as dr 
  FROM Test_Window_Fun_t1 
  order by grade, dr,name,mark desc;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1091982965">NAME	GRADE	MARK	DR
a1	1	90.0	1
b1	1	82.0	2
c1	1	60.0	3
d1	1	15.0	4
a2	2	86.0	1
b2	2	65.0	2
c2	2	45.0	3
a3	3	95.0	1
b3	3	78.0	2
c3	3	45.0	3
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,mark,grade, 
  row_number() OVER (PARTITION BY grade order by mark) rn 
  FROM Test_Window_Fun_t1 
  order by grade,rn,name,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1159697191">NAME	MARK	GRADE	RN
d1	15.0	1	1
c1	60.0	1	2
b1	82.0	1	3
a1	90.0	1	4
c2	45.0	2	1
b2	65.0	2	2
a2	86.0	2	3
c3	45.0	3	1
b3	78.0	3	2
a3	95.0	3	3</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark, 
  CUME_DIST() OVER (PARTITION BY grade order by mark) cd 
  FROM Test_Window_Fun_t1 
  order by grade, cd,name,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1329315105">NAME	GRADE	MARK	CD
d1	1	15.0	0.25
c1	1	60.0	0.5
b1	1	82.0	0.75
a1	1	90.0	1.0
c2	2	45.0	0.3333333333333333
b2	2	65.0	0.6666666666666666
a2	2	86.0	1.0
c3	3	45.0	0.3333333333333333
b3	3	78.0	0.6666666666666666
a3	3	95.0	1.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark, 
  PERCENT_RANK() OVER (PARTITION BY grade order by mark) pr 
  FROM Test_Window_Fun_t1 
  order by grade, pr,name,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-279195312">NAME	GRADE	MARK	PR
d1	1	15.0	0.0
c1	1	60.0	0.3333333333333333
b1	1	82.0	0.6666666666666666
a1	1	90.0	1.0
c2	2	45.0	0.0
b2	2	65.0	0.5
a2	2	86.0	1.0
c3	3	45.0	0.0
b3	3	78.0	0.5
a3	3	95.0	1.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark, 
  NTILE(4) OVER (PARTITION BY grade order by mark desc) nt 
  FROM Test_Window_Fun_t1 
  order by grade, nt,mark desc,name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-944225219">NAME	GRADE	MARK	NT
a1	1	90.0	1
b1	1	82.0	2
c1	1	60.0	3
d1	1	15.0	4
a2	2	86.0	1
b2	2	65.0	2
c2	2	45.0	3
a3	3	95.0	1
b3	3	78.0	2
c3	3	45.0	3
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-007" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select x AS GRADE, u AS NAME, w AS SORT, SUM(v) 
over (partition by x order by w desc) as sum_mark
from (select name, mark, sort, grade from Test_Window_Fun_t1 order by grade desc) wd(u, v, w, x)
ORDER BY GRADE ASC,NAME,SORT,sum_mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2143981943">GRADE	NAME	SORT	SUM_MARK
1	a1	1	247.0
1	b1	2	157.0
1	c1	3	75.0
1	d1	4	15.0
2	a2	1	196.0
2	b2	2	110.0
2	c2	3	45.0
3	a3	1	218.0
3	b3	2	123.0
3	c3	3	45.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-013" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT name,grade,mark,
LAG(mark,2) OVER(PARTITION BY GRADE ORDER BY mark) LAST_mark 
FROM Test_Window_Fun_t1
ORDER BY GRADE,MARK;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1931414667">NAME	GRADE	MARK	LAST_MARK
d1	1	15.0	null
c1	1	60.0	null
b1	1	82.0	15.0
a1	1	90.0	60.0
c2	2	45.0	null
b2	2	65.0	null
a2	2	86.0	45.0
c3	3	45.0	null
b3	3	78.0	null
a3	3	95.0	45.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-014" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT name,grade,mark,
LEAD(mark,2) OVER(PARTITION BY GRADE ORDER BY mark) LAST_mark 
FROM Test_Window_Fun_t1
ORDER BY GRADE,MARK;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1010775376">NAME	GRADE	MARK	LAST_MARK
d1	1	15.0	82.0
c1	1	60.0	90.0
b1	1	82.0	null
a1	1	90.0	null
c2	2	45.0	86.0
b2	2	65.0	null
a2	2	86.0	null
c3	3	45.0	95.0
b3	3	78.0	null
a3	3	95.0	null
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-015" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT grade,name,mark,
  LAST_VALUE(mark) OVER(PARTITION BY name)
  FROM Test_Window_Fun_t1
  ORDER BY grade,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1533174115">GRADE	NAME	MARK	C4
1	d1	15.0	15.0
1	c1	60.0	60.0
1	b1	82.0	82.0
1	a1	90.0	90.0
2	c2	45.0	45.0
2	b2	65.0	65.0
2	a2	86.0	86.0
3	c3	45.0	45.0
3	b3	78.0	78.0
3	a3	95.0	95.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-016" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT grade,name,mark,
  FIRST_VALUE(mark) OVER(PARTITION BY name)
  FROM Test_Window_Fun_t1
  ORDER BY grade,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="283757319">GRADE	NAME	MARK	C4
1	d1	15.0	15.0
1	c1	60.0	60.0
1	b1	82.0	82.0
1	a1	90.0	90.0
2	c2	45.0	45.0
2	b2	65.0	65.0
2	a2	86.0	86.0
3	c3	45.0	45.0
3	b3	78.0	78.0
3	a3	95.0	95.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-017" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">    SELECT grade,name,mark,
  VAR_POP(mark) OVER(PARTITION BY grade) var_pop_mark
  FROM Test_Window_Fun_t1
  ORDER BY grade,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-018" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">      SELECT grade,name,mark,
  VAR_SAMP(mark) OVER(PARTITION BY grade) var_pop_mark
  FROM Test_Window_Fun_t1
  ORDER BY grade,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-019" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">      SELECT grade,name,mark,
  STDDEV_POP(mark) OVER(PARTITION BY grade) var_pop_mark
  FROM Test_Window_Fun_t1
  ORDER BY grade,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-020" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">        SELECT grade,name,mark,
  STDDEV_SAMP(mark) OVER(PARTITION BY grade) var_pop_mark
  FROM Test_Window_Fun_t1
  ORDER BY grade,mark;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-021" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  SELECT name,grade,mark,SUM(mark)
 OVER(PARTITION BY grade,name ORDER BY mark DESC
  ROWS 1 PRECEDING) AS sort 
  FROM Test_Window_Fun_t1
  ORDER BY name,grade,mark,sort;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1169194522">NAME	GRADE	MARK	SORT
a1	1	90.0	90.0
a2	2	86.0	86.0
a3	3	95.0	95.0
b1	1	82.0	82.0
b2	2	65.0	65.0
b3	3	78.0	78.0
c1	1	60.0	60.0
c2	2	45.0	45.0
c3	3	45.0	45.0
d1	1	15.0	15.0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 drop table tb_test if exists" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table tb_test if exists</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 create table tb_test(   id varchar(64) not null,   cphm varchar(10) not null,   create_date timestamp not null,  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table tb_test(
  id varchar(64) not null,
  cphm varchar(10) not null,
  create_date timestamp not null,
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 insert into tb_test values (&apos;1000001&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:18:12&apos;); insert into tb_test values (&apos;1000002&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:22:12&apos;); insert into tb_test values (&apos;1000003&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:28:12&apos;); insert into tb_test values (&apos;1000004&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:29:12&apos;); insert into tb_test values (&apos;1000005&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:39:13&apos;); insert into tb_test values (&apos;1000006&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:45:12&apos;); insert into tb_test values (&apos;1000007&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:56:12&apos;); insert into tb_test values (&apos;1000008&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:57:12&apos;); insert into tb_test values (&apos;1000009&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:00:12&apos;); insert into tb_test values (&apos;1000010&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:10:13&apos;); insert into tb_test values (&apos;1000011&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:15:12&apos;); insert into tb_test values (&apos;1000012&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:26:12&apos;); insert into tb_test values (&apos;1000013&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:30:12&apos;);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into tb_test values (&apos;1000001&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:18:12&apos;);
insert into tb_test values (&apos;1000002&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:22:12&apos;);
insert into tb_test values (&apos;1000003&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:28:12&apos;);
insert into tb_test values (&apos;1000004&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:29:12&apos;);
insert into tb_test values (&apos;1000005&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:39:13&apos;);
insert into tb_test values (&apos;1000006&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:45:12&apos;);
insert into tb_test values (&apos;1000007&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:56:12&apos;);
insert into tb_test values (&apos;1000008&apos;, &apos;AB7477&apos;, &apos;2015-11-30 10:57:12&apos;);
insert into tb_test values (&apos;1000009&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:00:12&apos;);
insert into tb_test values (&apos;1000010&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:10:13&apos;);
insert into tb_test values (&apos;1000011&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:15:12&apos;);
insert into tb_test values (&apos;1000012&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:26:12&apos;);
insert into tb_test values (&apos;1000013&apos;, &apos;AB3808&apos;, &apos;2015-11-30 11:30:12&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-008" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select cphm, count(1) total from
 (
  select t.id,
    t.create_date t1,
    lead(t.create_date,1, null) over( partition by  cphm order by create_date asc ) t2,
    TIMESTAMPDIFF ( SQL_TSI_SECOND, lead(t.create_date,1, null) over(  partition by  cphm order by create_date asc ) , t.create_date ) * 86400 as itvtime,
   t.cphm
  from tb_test t
    order by t.cphm, t.create_date asc
 ) tt
 where tt.itvtime &gt;= 600 or  tt.itvtime  is null
 group by tt.cphm order by cphm desc;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2073533149">CPHM	TOTAL
AB7477	1
AB3808	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 drop table tb_test if exists;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table tb_test if exists;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 drop table CRISS_SALES if exists;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table CRISS_SALES if exists;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 create table CRISS_SALES  (     DEPT_ID    VARCHAR(6),     SALE_DATE  DATE,     GOODS_TYPE VARCHAR(4),     SALE_CNT   int  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create table CRISS_SALES
 (
    DEPT_ID    VARCHAR(6),
    SALE_DATE  DATE,
    GOODS_TYPE VARCHAR(4),
    SALE_CNT   int
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-03-04&apos;, &apos;G00&apos;, 700); insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-03-06&apos;, &apos;G00&apos;, 500); insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-04-08&apos;, &apos;G01&apos;, 200); insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-04-27&apos;, &apos;G01&apos;, 300); insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-04-30&apos;, &apos;G03&apos;, 800); insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-05-02&apos;, &apos;G03&apos;, 900); insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-05-04&apos;, &apos;G02&apos;, 80); insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-04-08&apos;, &apos;G02&apos;, 100);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-03-04&apos;, &apos;G00&apos;, 700);
insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-03-06&apos;, &apos;G00&apos;, 500);
insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-04-08&apos;, &apos;G01&apos;, 200);
insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-04-27&apos;, &apos;G01&apos;, 300);
insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-04-30&apos;, &apos;G03&apos;, 800);
insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-05-02&apos;, &apos;G03&apos;, 900);
insert into CRISS_SALES values (&apos;D01&apos;, &apos;2014-05-04&apos;, &apos;G02&apos;, 80);
insert into CRISS_SALES values (&apos;D02&apos;, &apos;2014-04-08&apos;, &apos;G02&apos;, 100);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-009" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select
      dept_id
     ,sale_date
     ,goods_type
     ,sale_cnt
     ,sum(sale_cnt) over(partition by dept_id order by dept_id,sale_date rows between unbounded preceding and current row) dept_cur_total
     ,sum(sale_cnt) over(order by dept_id,sale_date rows between unbounded preceding and current row) cmp_cur_total
 from criss_sales order by dept_id, sale_date;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="255787310">DEPT_ID	SALE_DATE	GOODS_TYPE	SALE_CNT	DEPT_CUR_TOTAL	CMP_CUR_TOTAL
D01	2014-3-4	G00	700	700	700
D01	2014-4-8	G01	200	900	900
D01	2014-4-30	G03	800	1700	1700
D01	2014-5-4	G02	80	1780	1780
D02	2014-3-6	G00	500	500	2280
D02	2014-4-8	G02	100	600	2380
D02	2014-4-27	G01	300	900	2680
D02	2014-5-2	G03	900	1800	3580</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-010" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select
        dept_id
       ,sale_date
       ,goods_type
       ,sale_cnt
       ,sum(sale_cnt) over(order by sale_date rows between 1 preceding and 1 following) CON_1_CNT
   from (select * from criss_sales order by sale_cnt)
   order by dept_id,sale_date,goods_type,sale_cnt,CON_1_CNT;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="754975086">DEPT_ID	SALE_DATE	GOODS_TYPE	SALE_CNT	CON_1_CNT
D01	2014-3-4	G00	700	1200
D01	2014-4-8	G01	200	600
D01	2014-4-30	G03	800	2000
D01	2014-5-4	G02	80	980
D02	2014-3-6	G00	500	1300
D02	2014-4-8	G02	100	800
D02	2014-4-27	G01	300	1300
D02	2014-5-2	G03	900	1780
</stringProp>
                <stringProp name="933502574">DEPT_ID	SALE_DATE	GOODS_TYPE	SALE_CNT	CON_1_CNT
D01	2014-3-4	G00	700	1200
D01	2014-4-8	G01	200	800
D01	2014-4-30	G03	800	2000
D01	2014-5-4	G02	80	980
D02	2014-3-6	G00	500	1400
D02	2014-4-8	G02	100	600
D02	2014-4-27	G01	300	1200
D02	2014-5-2	G03	900	1780
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-011" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select
       dept_id
      ,sale_date
      ,goods_type
      ,sale_cnt
      ,first_value(sale_date) over (partition by dept_id order by sale_date) first_value
      ,last_value(sale_date) over (partition by dept_id order by sale_date desc) last_value
 from criss_sales order by sale_cnt;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1529020653">DEPT_ID	SALE_DATE	GOODS_TYPE	SALE_CNT	FIRST_VALUE	LAST_VALUE
D01	2014-5-4	G02	80	2014-3-4	2014-5-4
D02	2014-4-8	G02	100	2014-3-6	2014-4-8
D01	2014-4-8	G01	200	2014-3-4	2014-4-8
D02	2014-4-27	G01	300	2014-3-6	2014-4-27
D02	2014-3-6	G00	500	2014-3-6	2014-3-6
D01	2014-3-4	G00	700	2014-3-4	2014-3-4
D01	2014-4-30	G03	800	2014-3-4	2014-4-30
D02	2014-5-2	G03	900	2014-3-6	2014-5-2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 TC-012" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select
       dept_id
      ,sale_date
      ,goods_type
      ,sale_cnt
      ,first_value(sale_date) over (partition by dept_id order by sale_date) first_value
      ,last_value(sale_date) over (partition by dept_id order by sale_date desc) last_value
      ,last_value(sale_date) over (partition by dept_id order by sale_date rows between unbounded preceding and unbounded following) last_value_all
 from criss_sales order by sale_cnt;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="422406940">DEPT_ID	SALE_DATE	GOODS_TYPE	SALE_CNT	FIRST_VALUE	LAST_VALUE	LAST_VALUE_ALL
D01	2014-5-4	G02	80	2014-3-4	2014-5-4	2014-5-4
D02	2014-4-8	G02	100	2014-3-6	2014-4-8	2014-5-2
D01	2014-4-8	G01	200	2014-3-4	2014-4-8	2014-5-4
D02	2014-4-27	G01	300	2014-3-6	2014-4-27	2014-5-2
D02	2014-3-6	G00	500	2014-3-6	2014-3-6	2014-5-2
D01	2014-3-4	G00	700	2014-3-4	2014-3-4	2014-5-4
D01	2014-4-30	G03	800	2014-3-4	2014-4-30	2014-5-4
D02	2014-5-2	G03	900	2014-3-6	2014-5-2	2014-5-2
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="656 T612 drop table CRISS_SALES if exists;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop table CRISS_SALES if exists;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="657 T613 Sampling " enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 CREATE TABLE Test_Window_Fun_t1(       name varchar(50),       grade INT,       mark NUMERIC(4,1),       sort INT  );" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> CREATE TABLE Test_Window_Fun_t1(
      name varchar(50),
      grade INT,
      mark NUMERIC(4,1),
      sort INT
 );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 INSERT INTO Test_Window_Fun_t1 VALUES(&apos;a1&apos;,1,90,1),(&apos;b1&apos;,1,82,2),(&apos;c1&apos;,1,60,3),(&apos;d1&apos;,1,15,4),                                       (&apos;a2&apos;,2,86,1),(&apos;b2&apos;,2,65,2),(&apos;c2&apos;,2,45,3),                                       (&apos;a3&apos;,3,95,1),(&apos;b3&apos;,3,78,2),(&apos;c3&apos;,3,45,3)                                       (null,null,null,null),                                       (&apos;a4&apos;,null,null,null),(null,4,null,null),(null,null,76,null),(null,null,null,1),(&apos;a4&apos;,4,null,null);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> INSERT INTO Test_Window_Fun_t1 VALUES(&apos;a1&apos;,1,90,1),(&apos;b1&apos;,1,82,2),(&apos;c1&apos;,1,60,3),(&apos;d1&apos;,1,15,4),
                                      (&apos;a2&apos;,2,86,1),(&apos;b2&apos;,2,65,2),(&apos;c2&apos;,2,45,3),
                                      (&apos;a3&apos;,3,95,1),(&apos;b3&apos;,3,78,2),(&apos;c3&apos;,3,45,3);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 SELECT * FROM Test_Window_Fun_t1 ORDER BY grade ASC;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM Test_Window_Fun_t1
ORDER BY grade ASC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*) FROM Test_Window_Fun_t1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1567">10</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select * from Test_Window_Fun_t1 
  tablesample bernoulli(0.0)
  ORDER BY GRADE ASC,MARK ASC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1710125846">NAME	GRADE	MARK	SORT</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select count(*) from Test_Window_Fun_t1 
  tablesample bernoulli(0.0);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select * from Test_Window_Fun_t1 
  tablesample bernoulli(1.0)
  ORDER BY GRADE ASC,MARK ASC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1673499077">NAME	GRADE	MARK	SORT
d1	1	15.0	4
c1	1	60.0	3
b1	1	82.0	2
a1	1	90.0	1
c2	2	45.0	3
b2	2	65.0	2
a2	2	86.0	1
c3	3	45.0	3
b3	3	78.0	2
a3	3	95.0	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select count(*) from Test_Window_Fun_t1 
  tablesample bernoulli(1.0);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1567">10</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select count(*)&lt;6 from Test_Window_Fun_t1 
  tablesample bernoulli(0.6);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-007" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select count(*)&lt;6 from Test_Window_Fun_t1 
  tablesample bernoulli(0.0);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-008" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select count(*)&lt;6 from Test_Window_Fun_t1 
  tablesample bernoulli(1.0);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-009" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select count(*)&gt;1 from Test_Window_Fun_t1 
  tablesample bernoulli(0.0);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-010" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">  select count(*)&gt;=10 from Test_Window_Fun_t1 
  tablesample bernoulli(1.0);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-011E" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">    SELECT * FROM Test_Window_Fun_t1
    TABLESAMPLE (4 ROWS);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-012" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">      select * from Test_Window_Fun_t1 
  tablesample bernoulli(0.5)
  WHERE mark&gt;60;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-013" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">      select count(*) from Test_Window_Fun_t1 
  tablesample bernoulli(1.0)
  WHERE mark&gt;60;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="54">6</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-014" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">          select count(*) from Test_Window_Fun_t1 
  tablesample bernoulli(1.0)
  WHERE MARK IN(
    SELECT MARK FROM Test_Window_Fun_t1
    WHERE MARK &gt;80
  );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="52">4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-015" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">          select count(*) from Test_Window_Fun_t1 
  tablesample bernoulli(1.0)
  WHERE NAME IN(
    SELECT NAME FROM Test_Window_Fun_t1
    TABLESAMPLE bernoulli(1.0)
    WHERE NAME=&apos;a1&apos; 
  );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-016" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">          select count(*) from Test_Window_Fun_t1 
  WHERE NAME IN(
    SELECT NAME FROM Test_Window_Fun_t1
    TABLESAMPLE bernoulli(1.0)
    WHERE NAME=&apos;a1&apos; 
  );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49">1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 TC-017E" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">    SELECT * FROM Test_Window_Fun_t1
    bernoulli(1.0);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="657 T613 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="658 T617 FIRST_VALUE and LAST_VALUE functions" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 DROP TABLE Test_Window_Functions_8 IF EXISTS CASCADE; " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Functions_8 IF EXISTS CASCADE;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 CREATE TABLE Test_Window_Functions_8(EMPNO INT, ENAME VARCHAR(20), JOB VARCHAR(20), MGR INT, HIREDATE DATE, SAL INT, COMM INT, DEPTNO INT);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE TABLE Test_Window_Functions_8(EMPNO INT,
ENAME VARCHAR(20),
JOB VARCHAR(20),
MGR INT,
HIREDATE DATE,
SAL INT,
COMM INT,
DEPTNO INT);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 INSERT INTO Test_Window_Functions_8 VALUES  (1,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),800,NULL,20),  (1,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-20&apos;,&apos;yyyy-mm-dd&apos;),1500,300,30),  (1,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-2&apos;,&apos;yyyy-mm-dd&apos;),1250,500,30),  (2,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-4-2&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),  (2,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-28&apos;,&apos;yyyy-mm-dd&apos;),1250,1400,30),  (2,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-5-1&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,30),  (2,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-6-9&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,10),  (3,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,TO_DATE(&apos;1981-11-17&apos;,&apos;yyyy-mm-dd&apos;),5000,NULL,10),  (3,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-8&apos;,&apos;yyyy-mm-dd&apos;),1500,0,30),  (3,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),950,NULL,30),  (3,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),  (3,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,TO_DATE(&apos;1982-1-23&apos;,&apos;yyyy-mm-dd&apos;),4000,NULL,10);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> INSERT INTO Test_Window_Functions_8 VALUES
 (1,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),800,NULL,20),
 (1,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-20&apos;,&apos;yyyy-mm-dd&apos;),1500,300,30),
 (1,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-2&apos;,&apos;yyyy-mm-dd&apos;),1250,500,30),
 (2,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-4-2&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),
 (2,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-28&apos;,&apos;yyyy-mm-dd&apos;),1250,1400,30),
 (2,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-5-1&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,30),
 (2,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-6-9&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,10),
 (3,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,TO_DATE(&apos;1981-11-17&apos;,&apos;yyyy-mm-dd&apos;),5000,NULL,10),
 (3,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-8&apos;,&apos;yyyy-mm-dd&apos;),1500,0,30),
 (3,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),950,NULL,30),
 (3,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),
 (3,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,TO_DATE(&apos;1982-1-23&apos;,&apos;yyyy-mm-dd&apos;),4000,NULL,10);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 SELECT * FROM Test_Window_Functions_8 ORDER BY EMPNO ASC;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM Test_Window_Functions_8
ORDER BY EMPNO ASC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 SELECT empno,ename,hiredate,sal, AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate) avg_sal_hiredate, sum(sal) OVER (PARTITION BY empno) sum_sal_order,  AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) avg1,  count(sal) OVER (PARTITION BY empno ORDER BY hiredate RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) count1 FROM Test_Window_Functions_8 order by empno,ename,hiredate,sal;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT EMPNO,ENAME,SAL,
LAST_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC ROWS BETWEEN 1 following and
2 following) LAST_SAL FROM Test_Window_Functions_8</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 SELECT EMPNO,ENAME,SAL, first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC ROWS BETWEEN 1 following and 2 following) first_SAL FROM Test_Window_Functions_8" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT EMPNO,ENAME,SAL,
first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC ROWS BETWEEN 1 following and
2 following) first_SAL FROM Test_Window_Functions_8</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 SELECT EMPNO,ENAME,SAL, first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC ROWS BETWEEN UNBOUNDED PRECEDING and 2 following) first_SAL FROM Test_Window_Functions_8 " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT EMPNO,ENAME,SAL,
first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC ROWS BETWEEN UNBOUNDED PRECEDING and
2 following) first_SAL FROM Test_Window_Functions_8
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 SELECT EMPNO,ENAME,SAL, first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC RANGE BETWEEN UNBOUNDED PRECEDING and 2 following) first_SAL FROM Test_Window_Functions_8  " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT EMPNO,ENAME,SAL,
first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC RANGE BETWEEN UNBOUNDED PRECEDING and
2 following) first_SAL FROM Test_Window_Functions_8 
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="658 T617 SELECT EMPNO,ENAME,SAL, first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC RANGE BETWEEN 2 PRECEDING and UNBOUNDED following) first_SAL FROM Test_Window_Functions_8 " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT EMPNO,ENAME,SAL,
first_VALUE(SAL) OVER (PARTITION BY EMPNO ORDER BY SAL DESC RANGE BETWEEN 2 PRECEDING and
UNBOUNDED following) first_SAL FROM Test_Window_Functions_8 </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Functions_8 IF EXISTS CASCADE;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="660 T619 Nested window functions" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 DROP TABLE Test_Window_Functions_8 IF EXISTS CASCADE; " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Functions_8 IF EXISTS CASCADE;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 CREATE TABLE Test_Window_Functions_8(EMPNO INT, ENAME VARCHAR(20), JOB VARCHAR(20), MGR INT, HIREDATE DATE, SAL INT, COMM INT, DEPTNO INT);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE TABLE Test_Window_Functions_8(EMPNO INT,
ENAME VARCHAR(20),
JOB VARCHAR(20),
MGR INT,
HIREDATE DATE,
SAL INT,
COMM INT,
DEPTNO INT);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 INSERT INTO Test_Window_Functions_8 VALUES  (1,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),800,NULL,20),  (1,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-20&apos;,&apos;yyyy-mm-dd&apos;),1500,300,30),  (1,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-2&apos;,&apos;yyyy-mm-dd&apos;),1250,500,30),  (2,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-4-2&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),  (2,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-28&apos;,&apos;yyyy-mm-dd&apos;),1250,1400,30),  (2,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-5-1&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,30),  (2,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-6-9&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,10),  (3,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,TO_DATE(&apos;1981-11-17&apos;,&apos;yyyy-mm-dd&apos;),5000,NULL,10),  (3,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-8&apos;,&apos;yyyy-mm-dd&apos;),1500,0,30),  (3,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),950,NULL,30),  (3,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),  (3,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,TO_DATE(&apos;1982-1-23&apos;,&apos;yyyy-mm-dd&apos;),4000,NULL,10);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> INSERT INTO Test_Window_Functions_8 VALUES
 (1,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),800,NULL,20),
 (1,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-20&apos;,&apos;yyyy-mm-dd&apos;),1500,300,30),
 (1,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-2-2&apos;,&apos;yyyy-mm-dd&apos;),1250,500,30),
 (2,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-4-2&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),
 (2,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-28&apos;,&apos;yyyy-mm-dd&apos;),1250,1400,30),
 (2,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-5-1&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,30),
 (2,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,TO_DATE(&apos;1981-6-9&apos;,&apos;yyyy-mm-dd&apos;),2450,NULL,10),
 (3,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,TO_DATE(&apos;1981-11-17&apos;,&apos;yyyy-mm-dd&apos;),5000,NULL,10),
 (3,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,TO_DATE(&apos;1981-9-8&apos;,&apos;yyyy-mm-dd&apos;),1500,0,30),
 (3,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),950,NULL,30),
 (3,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,TO_DATE(&apos;1981-12-3&apos;,&apos;yyyy-mm-dd&apos;),3000,NULL,20),
 (3,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,TO_DATE(&apos;1982-1-23&apos;,&apos;yyyy-mm-dd&apos;),4000,NULL,10);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 SELECT * FROM Test_Window_Functions_8 ORDER BY EMPNO ASC;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM Test_Window_Functions_8
ORDER BY EMPNO ASC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 SELECT empno,ename,hiredate,sal, AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate) avg_sal_hiredate, sum(sal) OVER (PARTITION BY empno) sum_sal_order,  AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) avg1,  count(sal) OVER (PARTITION BY empno ORDER BY hiredate RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) count1 FROM Test_Window_Functions_8 order by empno,ename,hiredate,sal;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT empno,ename,hiredate,sal,
AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate) avg_sal_hiredate,
sum(sal) OVER (PARTITION BY empno) sum_sal_order, 
AVG(sal) OVER (PARTITION BY empno ORDER BY hiredate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) avg1, 
count(sal) OVER (PARTITION BY empno ORDER BY hiredate RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) count1
FROM Test_Window_Functions_8 order by empno,ename,hiredate,sal;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select t.deptno from (
select empno,hiredate,sal,deptno,
first_value(sal) over (partition by empno order by sal RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) first_value,
last_value(sal) over (partition by empno order by sal DESC rows between unbounded preceding and current row) last_value 
from Test_Window_Functions_8 where deptno = 10 and hiredate&gt;=&apos;1980-01-01&apos;)t
WHERE empno=2;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1567">10</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (
SELECT deptno,ename,sal,
RANK() OVER (PARTITION BY deptno ORDER BY sal) AS a, 
DENSE_RANK() OVER (PARTITION BY deptno ORDER BY sal) AS b,
PERCENT_RANK() OVER (PARTITION BY deptno ORDER BY sal) AS c,
ROW_NUMBER() OVER (PARTITION BY deptno ORDER BY sal) AS d,
cume_dist() OVER (PARTITION BY deptno ORDER BY sal) AS e,
NTILE(4) OVER (PARTITION BY deptno ORDER BY sal) AS f
FROM Test_Window_Functions_8 order by deptno, ename,sal,a,b,c,d);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1569">12</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(1) FROM
(select empno,comm,job,deptno,hiredate,
lead(empno,1, null) over( partition by empno order by sal asc ) a1,
lag (empno,2, null) over( partition by deptno order by sal desc) as a2
from Test_Window_Functions_8 order by empno,deptno asc
 ) t  
 where t.hiredate&gt;=&apos;1980-01-01&apos; AND t.comm is null
 group by t.empno,t.hiredate
 ORDER BY 1;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 SELECT * FROM(  SELECT EMPNO,ENAME, VAR_POP(SAL) OVER (partition by empno ORDER BY DEPTNO,HIREDATE ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) VAR_POP1, VAR_SAMP(SAL) OVER (ORDER BY DEPTNO,HIREDATE RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) VAR_SAMP1, STDDEV_POP(SAL) OVER (ORDER BY DEPTNO,HIREDATE RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) STDDEV_POP1, STDDEV_SAMP(SAL) OVER (ORDER BY DEPTNO,HIREDATE RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) STDDEV_SAMP1 FROM Test_Window_Functions_8 WHERE comm IS NULL)a WHERE not(a.EMPNO=1) AND ENAME&lt;&gt;&apos;BLAKE&apos; ORDER BY ENAME desc;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM( 
SELECT EMPNO,ENAME,
VAR_POP(SAL) OVER (partition by empno ORDER BY DEPTNO,HIREDATE ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) VAR_POP1,
VAR_SAMP(SAL) OVER (ORDER BY DEPTNO,HIREDATE RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) VAR_SAMP1,
STDDEV_POP(SAL) OVER (ORDER BY DEPTNO,HIREDATE RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) STDDEV_POP1,
STDDEV_SAMP(SAL) OVER (ORDER BY DEPTNO,HIREDATE RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) STDDEV_SAMP1
FROM Test_Window_Functions_8 WHERE comm IS NULL)a
WHERE not(a.EMPNO=1) AND ENAME&lt;&gt;&apos;BLAKE&apos;
ORDER BY ENAME desc;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="660 T619 DROP TABLE Test_Window_Fun_t1 IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> DROP TABLE Test_Window_Functions_8 IF EXISTS CASCADE;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="736 LDBX043-05 聚集函数REGXXX" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 DROP TABLE t_regr_wr IF EXISTS CASCADE;" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP TABLE t_regr_wr IF EXISTS CASCADE;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 CREATE TABLE t_regr_wr (sals INT, ENAME VARCHAR(20), JOB VARCHAR(20), MGR INT, HIREDATE DATE, SAL INT, DEPTNO INT);" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE TABLE t_regr_wr (sals INT,
ENAME VARCHAR(20),
JOB VARCHAR(20),
MGR INT,
HIREDATE DATE,
SAL INT,
DEPTNO INT);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05  INSERT INTO t_regr_wr VALUES (34,&apos;SMTH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),28,30);   INSERT INTO t_regr_wr VALUES (66,&apos;SMTH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),99,20);  INSERT INTO t_regr_wr VALUES (12,&apos;MITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),5,20);  INSERT INTO t_regr_wr VALUES (964,&apos;MITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),800,30);  INSERT INTO t_regr_wr VALUES (964,&apos;JAKE&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),310,10);   INSERT INTO t_regr_wr VALUES (964,&apos;TOM&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),58900,60);    INSERT INTO " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query"> INSERT INTO t_regr_wr VALUES (34,&apos;SMTH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),28,30);
 INSERT INTO t_regr_wr VALUES (66,&apos;SMTH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),99,20);
 INSERT INTO t_regr_wr VALUES (12,&apos;MITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),5,20);
 INSERT INTO t_regr_wr VALUES (964,&apos;MITH&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),800,30);
 INSERT INTO t_regr_wr VALUES (964,&apos;JAKE&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),310,10);
 INSERT INTO t_regr_wr VALUES (964,&apos;TOM&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),58900,60);
 INSERT INTO t_regr_wr VALUES (9064,&apos;BOB&apos;,&apos;CLERK&apos;,7902,TO_DATE(&apos;1980-12-17&apos;,&apos;yyyy-mm-dd&apos;),800,60);
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-001" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO, ENAME,
COVAR_POP(sals,sal) AS covar_pop,
COVAR_POP(sals,sals) AS covar_pop1,
COVAR_POP(sal,sals) AS covar_pop2,
COVAR_SAMP(sal,sal) AS covar_samp1
    FROM t_regr_wr
    GROUP BY DEPTNO,ENAME
    ORDER BY COVAR_POP DESC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1772656822">DEPTNO	ENAME	COVAR_POP	COVAR_POP1	COVAR_POP2	COVAR_SAMP1
30	MITH	0.0	0.0	0.0	NaN
60	TOM	0.0	0.0	0.0	NaN
20	MITH	0.0	0.0	0.0	NaN
60	BOB	0.0	0.0	0.0	NaN
10	JAKE	0.0	0.0	0.0	NaN
30	SMTH	0.0	0.0	0.0	NaN
20	SMTH	0.0	0.0	0.0	NaN
</stringProp>
                <stringProp name="307168582">DEPTNO	ENAME	COVAR_POP	COVAR_POP1	COVAR_POP2	COVAR_SAMP1
30	MITH	0.0	0.0	0.0	NaN
60	TOM	0.0	0.0	0.0	NaN
20	MITH	0.0	0.0	0.0	NaN
10	JAKE	0.0	0.0	0.0	NaN
60	BOB	0.0	0.0	0.0	NaN
30	SMTH	0.0	0.0	0.0	NaN
20	SMTH	0.0	0.0	0.0	NaN
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-002" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,
REGR_SLOPE(sals,sal) slope1,
REGR_SLOPE(sals,sals) slope2,
REGR_INTERCEPT(sal,sals) intercept1,
REGR_INTERCEPT(sal,sal) intercept2
   FROM t_regr_wr
   WHERE DEPTNO in (20,30)
    GROUP BY DEPTNO
    ORDER BY DEPTNO DESC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-873333882">DEPTNO	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
30	1.2046632124352332	1.0	-0.22365591397846174	0.0
20	0.574468085106383	1.0	-15.888888888888886	0.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-003" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ENAME,
   REGR_SLOPE(sals,sal) AS slope1,
    REGR_SLOPE(sals,sals) AS slope2,
    REGR_INTERCEPT(sal,sals) AS intercept1,
   REGR_INTERCEPT(sal,sal) AS intercept2
   FROM t_regr_wr
   GROUP BY ENAME
   ORDER BY slope1 DESC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1941520792">ENAME	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
MITH	1.1974842767295597	1.0	-5.02100840336135	0.0
SMTH	0.4507042253521127	1.0	-47.4375	0.0
TOM	null	null	null	null
JAKE	null	null	null	null
BOB	null	null	null	null
</stringProp>
                <stringProp name="836591678">ENAME	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
MITH	1.1974842767295597	1.0	-5.02100840336135	0.0
SMTH	0.4507042253521127	1.0	-47.4375	0.0
BOB	null	null	null	null
JAKE	null	null	null	null
TOM	null	null	null	null
</stringProp>
                <stringProp name="468726286">ENAME	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
MITH	1.1974842767295597	1.0	-5.02100840336135	0.0
SMTH	0.4507042253521127	1.0	-47.4375	0.0
BOB	null	null	null	null
TOM	null	null	null	null
JAKE	null	null	null	null
</stringProp>
                <stringProp name="-1056737080">ENAME	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
MITH	1.1974842767295597	1.0	-5.02100840336135	0.0
SMTH	0.4507042253521127	1.0	-47.4375	0.0
JAKE	null	null	null	null
BOB	null	null	null	null
TOM	null	null	null	null
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-004" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,ENAME,SAL,
REGR_SLOPE(sals,sal) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS between current row and 1 following) slope1,
REGR_SLOPE(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) slope2,
REGR_INTERCEPT(sal,sals) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) intercept1,
REGR_INTERCEPT(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) intercept2
FROM t_regr_wr;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1233838024">ENAME	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
MITH	1.1974842767295597	1.0	-5.02100840336135	0.0
SMTH	0.4507042253521127	1.0	-47.4375	0.0
JAKE	null	null	null	null
TOM	null	null	null	null
BOB	null	null	null	null
</stringProp>
                <stringProp name="151487773">DEPTNO	ENAME	SAL	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
60	BOB	800	-0.13941480206540446	1.0	null	0.0
60	TOM	58900	null	null	65814.61728395062	null
30	SMTH	28	1.2046632124352332	1.0	null	0.0
30	MITH	800	null	null	-0.22365591397846174	null
10	JAKE	310	null	null	null	null
20	MITH	5	0.574468085106383	1.0	null	0.0
20	SMTH	99	null	null	-15.888888888888886	null
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-005" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,ENAME,SAL,
REGR_SLOPE(sals,sal) OVER (PARTITION BY DEPTNO ORDER BY sal ROWS between current row and 1 following) slope1,
REGR_SLOPE(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY sal range between 5 preceding and unbounded following) slope2,
REGR_INTERCEPT(sal,sals) OVER (PARTITION BY DEPTNO ORDER BY sal ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) intercept1,
REGR_INTERCEPT(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY sal range between 5 preceding and unbounded following) intercept2
FROM t_regr_wr
WHERE SAL&lt;&gt;800
ORDER BY SAL DESC;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1152406694">DEPTNO	ENAME	SAL	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
60	TOM	58900	null	null	null	null
10	JAKE	310	null	null	null	null
20	SMTH	99	null	null	-15.888888888888886	null
30	SMTH	28	null	null	null	null
20	MITH	5	0.574468085106383	1.0	null	0.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-006" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,ENAME,SAL,
REGR_SLOPE(sals,sal) OVER (PARTITION BY DEPTNO,ENAME ORDER BY SAL ) slope1,
REGR_SLOPE(sals,sals)OVER (PARTITION BY DEPTNO,ENAME ORDER BY SAL range between 5 preceding and unbounded following) slope2,
REGR_INTERCEPT(sal,sals) OVER (PARTITION BY DEPTNO,ENAME ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) intercept1,
REGR_INTERCEPT(sal,sal)OVER (PARTITION BY DEPTNO,ENAME ORDER BY SAL) intercept2
FROM t_regr_wr;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="910677546">DEPTNO	ENAME	SAL	SLOPE1	SLOPE2	INTERCEPT1	INTERCEPT2
30	SMTH	28	null	null	null	null
30	MITH	800	null	null	null	null
20	MITH	5	null	null	null	null
60	BOB	800	null	null	null	null
10	JAKE	310	null	null	null	null
60	TOM	58900	null	null	null	null
20	SMTH	99	null	null	null	null
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-007" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,
REGR_COUNT(sals,sal) REGR_COUNT1,
REGR_COUNT(sals,sals) REGR_COUNT2,
REGR_COUNT(sal,sals) REGR_COUNT3,
REGR_COUNT(sal,sal) REGR_COUNT4
   FROM t_regr_wr
   WHERE DEPTNO in (20,30)
    GROUP BY DEPTNO
    ORDER BY DEPTNO DESC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1853406709">DEPTNO	REGR_COUNT1	REGR_COUNT2	REGR_COUNT3	REGR_COUNT4
30	2.0	2.0	2.0	2.0
20	2.0	2.0	2.0	2.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-008" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">
SELECT DEPTNO,ENAME,SAL,
REGR_COUNT(sals,sal) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_COUNT1,
REGR_COUNT(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_COUNT2,
REGR_COUNT(sal,sals) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_COUNT3,
REGR_COUNT(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_COUNT4
FROM t_regr_wr;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-009" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(1),DEPTNO from (SELECT DEPTNO,ENAME,SAL,
REGR_COUNT(sals,sal) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_COUNT1,
REGR_COUNT(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_COUNT2,
REGR_COUNT(sal,sals) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_COUNT3,
REGR_COUNT(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_COUNT4
FROM t_regr_wr)
GROUP BY DEPTNO;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-563992344">C1	DEPTNO
2	60
2	30
1	10
2	20
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-010" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,
REGR_R2(sals,sal) REGR_R2_1,
REGR_R2(sals,sals) REGR_R2_2,
REGR_R2(sal,sals) REGR_R2_3,
REGR_R2(sal,sal) REGR_R2_4
   FROM t_regr_wr
   WHERE DEPTNO in (60,30)
    GROUP BY DEPTNO
    ORDER BY DEPTNO DESC;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2032715347">DEPTNO	REGR_R2_1	REGR_R2_2	REGR_R2_3	REGR_R2_4
60	1.0	1.0	1.0	1.0
30	1.0	1.0	1.0	1.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-011" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,ENAME,SAL,
REGR_R2(sals,sal) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_R2_1,
REGR_R2(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_R2_2,
REGR_R2(sal,sals) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_R2_3,
REGR_R2(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY SAL range  between 2 following and 4 FOLLOWING) REGR_R2_4
FROM t_regr_wr
ORDER BY SAL DESC;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-952945918">DEPTNO	ENAME	SAL	REGR_R2_1	REGR_R2_2	REGR_R2_3	REGR_R2_4
60	TOM	58900	1.0	null	1.0	null
60	BOB	800	null	1.0	null	null
30	MITH	800	1.0	null	1.0	null
10	JAKE	310	null	null	null	null
20	SMTH	99	1.0	null	1.0	null
30	SMTH	28	null	1.0	null	null
20	MITH	5	null	1.0	null	null
</stringProp>
                <stringProp name="-630208126">DEPTNO	ENAME	SAL	REGR_R2_1	REGR_R2_2	REGR_R2_3	REGR_R2_4
60	TOM	58900	1.0	null	1.0	null
30	MITH	800	1.0	null	1.0	null
60	BOB	800	null	1.0	null	null
10	JAKE	310	null	null	null	null
20	SMTH	99	1.0	null	1.0	null
30	SMTH	28	null	1.0	null	null
20	MITH	5	null	1.0	null	null
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-012" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*),DEPTNO,                            
REGR_AVGY(( YEAR( NOW() ) - YEAR( HIREDATE ) ) ,sal) REGR_AVGY1,
REGR_AVGY(sals,sals) REGR_AVGY2,
REGR_AVGX(sal,sals) REGR_AVGY3,
REGR_AVGX(sal,sal) REGR_AVGY4
   FROM t_regr_wr
   WHERE DEPTNO in (20)
    GROUP BY DEPTNO
    ORDER BY DEPTNO DESC;
    </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1125698698">C1	DEPTNO	REGR_AVGY1	REGR_AVGY2	REGR_AVGY3	REGR_AVGY4
2	20	38.0	39.0	39.0	52.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-013" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(1),sum(sal),DEPTNO FROM (SELECT DEPTNO,ENAME,SAL,
REGR_AVGY(( YEAR( NOW() ) - YEAR( HIREDATE ) ),sal) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_AVGY1,
REGR_AVGY(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_AVGY2,
REGR_AVGX(sal,( YEAR( NOW() ) - YEAR( HIREDATE ) )) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_AVGY3,
REGR_AVGX(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY SAL range  between 0 following and 6 FOLLOWING) REGR_AVGY4
FROM t_regr_wr
ORDER BY SAL DESC)
GROUP BY DEPTNO
HAVING sum(sal)&gt;500;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1867679635">C1	C2	DEPTNO
2	59700	60
2	828	30
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-014" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*),DEPTNO,                            
REGR_SXY(( YEAR( NOW() ) - YEAR( HIREDATE ) ) ,sal) REGR_SXY1,
REGR_SXY(sals,sals) REGR_SXY2,
REGR_SXX(sal,sals) REGR_SXY3,
REGR_SXX(sal,sal) REGR_SXY4
   FROM t_regr_wr
   WHERE DEPTNO in (20)
    GROUP BY DEPTNO
    ORDER BY DEPTNO DESC;
    </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="308691685">C1	DEPTNO	REGR_SXY1	REGR_SXY2	REGR_SXY3	REGR_SXY4
2	20	0.0	1458.0	1458.0	4418.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-015" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DEPTNO,ENAME,SAL,
count(*) OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following)hangshu,
REGR_SXX(( YEAR( NOW() ) - YEAR( HIREDATE ) ),sal) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_SXX1,
REGR_SXX(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_SXX2,
REGR_SXY(sal,( YEAR( NOW() ) - YEAR( HIREDATE ) )) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_SXX3,
REGR_SXY(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY SAL range  between 0 following and 6 FOLLOWING) REGR_SXX4
FROM t_regr_wr
ORDER BY SAL DESC;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2123313004">DEPTNO	ENAME	SAL	HANGSHU	REGR_SXX1	REGR_SXX2	REGR_SXX3	REGR_SXX4
60	TOM	58900	1	1.687805E9	0.0	0.0	0.0
60	BOB	800	2	0.0	3.2805E7	0.0	0.0
30	MITH	800	1	297992.0	0.0	0.0	0.0
10	JAKE	310	1	0.0	0.0	0.0	0.0
20	SMTH	99	1	4418.0	0.0	0.0	0.0
30	SMTH	28	2	0.0	432450.0	0.0	0.0
20	MITH	5	2	0.0	1458.0	0.0	0.0
</stringProp>
                <stringProp name="2052427184">DEPTNO	ENAME	SAL	HANGSHU	REGR_SXX1	REGR_SXX2	REGR_SXX3	REGR_SXX4
60	TOM	58900	1	1.687805E9	0.0	0.0	0.0
30	MITH	800	1	297992.0	0.0	0.0	0.0
60	BOB	800	2	0.0	3.2805E7	0.0	0.0
10	JAKE	310	1	0.0	0.0	0.0	0.0
20	SMTH	99	1	4418.0	0.0	0.0	0.0
30	SMTH	28	2	0.0	432450.0	0.0	0.0
20	MITH	5	2	0.0	1458.0	0.0	0.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-016" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from (SELECT DEPTNO,ENAME,SAL,
count(*) OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following)hangshu,
REGR_SXX(( YEAR( NOW() ) - YEAR( HIREDATE ) ),sal) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_SXX1,
REGR_SXX(sals,sals)OVER (PARTITION BY DEPTNO ORDER BY SAL range between 5 preceding and unbounded following) REGR_SXX2,
REGR_SXY(sal,( YEAR( NOW() ) - YEAR( HIREDATE ) )) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REGR_SXX3,
REGR_SXY(sal,sal)OVER (PARTITION BY DEPTNO ORDER BY SAL range  between 0 following and 6 FOLLOWING) REGR_SXX4
FROM t_regr_wr
ORDER BY SAL DESC);

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63346991">C1
7
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 TC-017" enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*),DEPTNO,                            
REGR_AVGY(( YEAR( NOW() ) - YEAR( HIREDATE ) ) ,sal) REGR_AVGY1,
REGR_AVGY(sals,sals) REGR_AVGY2,
REGR_AVGX(sal,sals) REGR_AVGY3,
REGR_AVGX(sal,sal) REGR_AVGY4
   FROM t_regr_wr
   WHERE DEPTNO in (20)
    GROUP BY DEPTNO
    ORDER BY DEPTNO DESC;
    </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1125698698">C1	DEPTNO	REGR_AVGY1	REGR_AVGY2	REGR_AVGY3	REGR_AVGY4
2	20	38.0	39.0	39.0	52.0
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="736 LDBX043-05 DROP TABLE t_regr_wr IF EXISTS CASCADE; " enabled="true">
            <stringProp name="dataSource">${a}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DROP TABLE t_regr_wr IF EXISTS CASCADE;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
