<?xml version="1.0" encoding="UTF-8"?>
<testResults version="1.2">
<sample t="1481" ts="1552026873018" s="true" lb="932 LDBX081-08 -DT-function-001" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="4" ts="1552026874510" s="true" lb="932 LDBX081-08-  drop STREAM if exists aaaaa;" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="93" ts="1552026874515" s="true" lb="932 LDBX081-08 drop STREAM if exists aaaaa_sink;" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="153" ts="1552026874609" s="true" lb="932 LDBX081-08- CREATE STREAM aaaaa" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="1341" ts="1552026874762" s="true" lb="932 LDBX081-08 drop table if exists aaaaa_sink;" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="140" ts="1552026876104" s="true" lb="932 LDBX081-08  CREATE STREAM aaaaa_sink (data varchar(20)) properties (&apos;type&apos;: &apos;sink&apos;, &apos;connector&apos;: &apos;jdbc&apos;, &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;, &apos;dbUrl&apos;: &apos;jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql&apos;, &apos;username&apos;: &apos;${umysql}&apos;, &apos;password&apos;: &apos;${umysql_password}&apos;,&apos;batchSize&apos;:&apos;1&apos;,&apos;tableName&apos;: &apos;aaaaa_sink&apos; ); " rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="183" ts="1552026876245" s="true" lb="932 LDBX081-08 create table aaaaa_sink(data varchar(20));" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="138" ts="1552026876429" s="true" lb="932 LDBX081-08-SF-001" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="76" ts="1552026906567" s="false" lb="932 LDBX081-08 insert into aaaaa_sink select (f_TEST_STRING(2,19)  from aaaaa;                      " rc="S1000 -458" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="4" ts="1552026936659" s="false" lb="932 LDBX081-08 TC-test int_string-01" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1">
  <assertionResult>
    <name>Response Assertion</name>
    <failure>true</failure>
    <error>false</error>
    <failureMessage>Test failed: text expected to contain /2@19/</failureMessage>
  </assertionResult>
</sample>
<sample t="775" ts="1552026936668" s="true" lb="932 LDBX081-08 -DT-function-002" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="79" ts="1552026937444" s="true" lb="932 LDBX081-08-SF-003" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="15075" ts="1552026957524" s="true" lb="932 LDBX081-08 -TC-FUNCTION-003" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1">
  <assertionResult>
    <name>Response Assertion</name>
    <failure>false</failure>
    <error>false</error>
  </assertionResult>
</sample>
<sample t="31" ts="1552026972600" s="true" lb="932 LDBX081-08 -DT-function-003" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="75" ts="1552026972632" s="true" lb="932 LDBX081-08-SF-004" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="15058" ts="1552026992708" s="true" lb="932 LDBX081-08 -TC-FUNCTION-004" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1">
  <assertionResult>
    <name>Response Assertion</name>
    <failure>false</failure>
    <error>false</error>
  </assertionResult>
</sample>
<sample t="31" ts="1552027007769" s="true" lb="932 LDBX081-08 -DT-function-004" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="89" ts="1552027007801" s="true" lb="932 LDBX081-08-SF-005" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="15068" ts="1552027027889" s="true" lb="932 LDBX081-08 -TC-FUNCTION-005" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1">
  <assertionResult>
    <name>Response Assertion</name>
    <failure>false</failure>
    <error>false</error>
  </assertionResult>
</sample>
<sample t="34" ts="1552027042960" s="true" lb="932 LDBX081-08 -DT-function-005" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="333" ts="1552027042995" s="true" lb="932 LDBX081-08-SF-006" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="15867" ts="1552027063328" s="true" lb="932 LDBX081-08 -TC-FUNCTION-006" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1">
  <assertionResult>
    <name>Response Assertion</name>
    <failure>false</failure>
    <error>false</error>
  </assertionResult>
</sample>
<sample t="34" ts="1552027079198" s="true" lb="932 LDBX081-08 -DT-function-006" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="83" ts="1552027079233" s="true" lb="932 LDBX081-08-SF-007" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>
<sample t="15066" ts="1552027099316" s="true" lb="932 LDBX081-08 -TC-FUNCTION-007" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1">
  <assertionResult>
    <name>Response Assertion</name>
    <failure>false</failure>
    <error>false</error>
  </assertionResult>
</sample>
<sample t="91" ts="1552027114386" s="true" lb="932 LDBX081-08-  drop STREAM if exists aaaaa;" rc="200" tn="LDB_EXT_STREAM 1-1" ng="1" na="1"/>

</testResults>
