<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4db连接池</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb" elementType="Argument">
            <stringProp name="Argument.name">udb</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb_password" elementType="Argument">
            <stringProp name="Argument.name">udb_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="umysql" elementType="Argument">
            <stringProp name="Argument.name">umysql</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql用户</stringProp>
          </elementProp>
          <elementProp name="umysql_password" elementType="Argument">
            <stringProp name="Argument.name">umysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql密码</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4密码</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4 mysql连接池</stringProp>
          </elementProp>
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.71)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node2</stringProp>
          </elementProp>
          <elementProp name="filePath" elementType="Argument">
            <stringProp name="Argument.name">filePath</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\window\winno.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic" elementType="Argument">
            <stringProp name="Argument.name">topic</stringProp>
            <stringProp name="Argument.value">decision_tree_sink1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="node4" elementType="Argument">
            <stringProp name="Argument.name">node4</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.73)}</stringProp>
            <stringProp name="Argument.desc">node4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(port,9105)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl" elementType="Argument">
            <stringProp name="Argument.name">dburl</stringProp>
            <stringProp name="Argument.value">jdbc:linkoopdb:tcp://node7:9117/ldb</stringProp>
            <stringProp name="Argument.desc">db的url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql?useSSL=false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl1" elementType="Argument">
            <stringProp name="Argument.name">dburl1</stringProp>
            <stringProp name="Argument.value">jdbc:linkoopdb:tcp://node7:9117/ldb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_server" elementType="Argument">
            <stringProp name="Argument.name">kafka_server</stringProp>
            <stringProp name="Argument.value">node6:29096</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="zoo1_connect" elementType="Argument">
            <stringProp name="Argument.name">zoo1_connect</stringProp>
            <stringProp name="Argument.value">node1:2181,node2:2181,node9:2181/linkoopdb/luyao</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${mysql_url}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${umysql}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">9999999999</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">000</stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">number</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable topic" enabled="true">
        <stringProp name="maximumValue">200000</stringProp>
        <stringProp name="minimumValue">0</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed">abcdefg</stringProp>
        <stringProp name="variableName">num</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="645 SQL008-03 kafka sink" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试json" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="645 SQL008-03 topic delete" enabled="true">
              <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node1:2181/linkoopdb/luyao --topic kafka_json1_001</stringProp>
              <stringProp name="hostname">192.168.1.75</stringProp>
              <stringProp name="password">123456</stringProp>
              <intProp name="port">22</intProp>
              <stringProp name="username">luyao</stringProp>
            </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="645 SQL008-03 kafka-create" enabled="true">
              <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh -create --zookeeper node1:2181/linkoopdb/luyao --replication-factor 1 --partitions 1 --topic kafka_json1_001</stringProp>
              <stringProp name="hostname">192.168.1.75</stringProp>
              <stringProp name="password">123456</stringProp>
              <intProp name="port">22</intProp>
              <stringProp name="username">luyao</stringProp>
            </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-删除表" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table  if exists T_kafka_json_001;
drop stream if exists S_jdbc_source_json_001;
drop stream if exists S_kafka_json_sink_001;
drop stream if exists S_kafka_json_source_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建DB表T_kafka_json_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table T_kafka_json_001(
  ID INT,
  NAME VARCHAR(64), 
  AGE  INT
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-插入数据到DB表T_kafka_json_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  T_kafka_json_001 values
(1,&apos;lily&apos;,29),
(2,&apos;lily2&apos;,19);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建S_jdbc_source_json_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream S_jdbc_source_json_001(
id int,
name varchar(30),
age int
)properties(
&apos;type&apos;: &apos;source&apos;,
&apos;connector&apos;: &apos;jdbc&apos;, 
&apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
&apos;dbUrl&apos;: &apos;${dburl}&apos;,
&apos;username&apos;: &apos;${udb}&apos;,
&apos;password&apos;: &apos;${udb_password}&apos;, 
&apos;tableName&apos;: &apos;T_kafka_json_001&apos;
);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建S_kafka_json_sink_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream S_kafka_json_sink_001(
  ID INT,
  NAME VARCHAR(64), 
  AGE  INT
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;kafka_json1_001&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;${__Random(0,99996742,)}&apos;,
&apos;format&apos;:&apos;json&apos;,
&apos;updateMode&apos;:&apos;append&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建S_kafka_json_source_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream S_kafka_json_source_001(
  ID INT,
  NAME VARCHAR(64), 
  AGE  INT
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;kafka_json1_001&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;${__Random(0,99996742,)}&apos;,
&apos;format&apos;:&apos;json&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03 TC-001 _插入数据到kafka sink" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 60000;
 insert into S_kafka_json_sink_001 select * from S_jdbc_source_json_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03 TC-002 _查看kafka sink的数据" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 60000;
 select * from S_kafka_json_source_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1289121921">ID	NAME	AGE
2	lily2	19
1	lily	29</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试csv" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="645 SQL008-03 topic delete" enabled="true">
              <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh --delete --zookeeper node1:2181/linkoopdb/luyao --topic kafka_csv1_001</stringProp>
              <stringProp name="hostname">192.168.1.75</stringProp>
              <stringProp name="password">123456</stringProp>
              <intProp name="port">22</intProp>
              <stringProp name="username">luyao</stringProp>
            </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="645 SQL008-03 kafka-create" enabled="true">
              <stringProp name="command">/home/luyao/kafka_2.10-0.10.0.1/bin/kafka-topics.sh -create --zookeeper node1:2181/linkoopdb/luyao --replication-factor 1 --partitions 1 --topic kafka_csv1_001</stringProp>
              <stringProp name="hostname">192.168.1.75</stringProp>
              <stringProp name="password">123456</stringProp>
              <intProp name="port">22</intProp>
              <stringProp name="username">luyao</stringProp>
            </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-删除表" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop table  if exists T_kafka_csv_001;
drop stream if exists S_jdbc_source_csv_001;
drop stream if exists S_kafka_csv_sink_001;
drop stream if exists S_kafka_csv_source_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建DB表T_kafka_csv_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create table T_kafka_csv_001(
  ID INT,
  NAME VARCHAR(64), 
  AGE  INT
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-插入数据到DB表T_kafka_csv_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into  T_kafka_csv_001 values
(1,&apos;lily&apos;,29),
(2,&apos;lily2&apos;,19);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建S_jdbc_source_csv_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream S_jdbc_source_csv_001(
id int,
name varchar(30),
age int
)properties(
&apos;type&apos;: &apos;source&apos;,
&apos;connector&apos;: &apos;jdbc&apos;, 
&apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
&apos;dbUrl&apos;: &apos;${dburl}&apos;,
&apos;username&apos;: &apos;${udb}&apos;,
&apos;password&apos;: &apos;${udb_password}&apos;, 
&apos;tableName&apos;: &apos;T_kafka_csv_001&apos;
);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建S_kafka_csv_sink_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream S_kafka_csv_sink_001(
  ID INT,
  NAME VARCHAR(64), 
  AGE  INT
) properties(
&apos;type&apos;:&apos;sink&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;kafka_csv1_001&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;${__Random(0,99996742,)}&apos;,
&apos;format&apos;:&apos;csv&apos;,
&apos;separator&apos;:&apos;|&apos;,
&apos;updateMode&apos;:&apos;append&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03-创建S_kafka_csv_source_001" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream S_kafka_csv_source_001(
  ID INT,
  NAME VARCHAR(64), 
  AGE  INT
) properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;kafka&apos;,
&apos;version&apos;:&apos;0.10&apos;,
&apos;topic&apos;:&apos;kafka_csv1_001&apos;,
&apos;bootstrap.servers&apos;:&apos;${kafka_server}&apos;,
&apos;zookeeper.connect&apos;:&apos;${zoo_connect}&apos;,
&apos;group.id&apos;:&apos;${__Random(0,99996742,)}&apos;,
&apos;format&apos;:&apos;csv&apos;,
&apos;separator&apos;:&apos;|&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03 TC-001 _插入数据到kafka sink" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 60000;
 insert into S_kafka_csv_sink_001 select * from S_jdbc_source_csv_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="645 SQL008-03 TC-002 _查看kafka sink的数据" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 60000;
 select * from S_kafka_csv_source_001;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="TestPlan.comments">id类型为int</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1289121921">ID	NAME	AGE
2	lily2	19
1	lily	29</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
