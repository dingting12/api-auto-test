<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4db连接池</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb" elementType="Argument">
            <stringProp name="Argument.name">udb</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb_password" elementType="Argument">
            <stringProp name="Argument.name">udb_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="umysql" elementType="Argument">
            <stringProp name="Argument.name">umysql</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql用户</stringProp>
          </elementProp>
          <elementProp name="umysql_password" elementType="Argument">
            <stringProp name="Argument.name">umysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql密码</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4密码</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4 mysql连接池</stringProp>
          </elementProp>
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.71)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node2</stringProp>
          </elementProp>
          <elementProp name="filePath" elementType="Argument">
            <stringProp name="Argument.name">filePath</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\window\winno.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic" elementType="Argument">
            <stringProp name="Argument.name">topic</stringProp>
            <stringProp name="Argument.value">decision_tree_sink1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="node4" elementType="Argument">
            <stringProp name="Argument.name">node4</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.73)}</stringProp>
            <stringProp name="Argument.desc">node4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(port,9105)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl" elementType="Argument">
            <stringProp name="Argument.name">dburl</stringProp>
            <stringProp name="Argument.value">jdbc:linkoopdb:tcp://node7:9117/ldb</stringProp>
            <stringProp name="Argument.desc">db的url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql?useSSL=false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl1" elementType="Argument">
            <stringProp name="Argument.name">dburl1</stringProp>
            <stringProp name="Argument.value">jdbc:linkoopdb:tcp://node7:9117/ldb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_server" elementType="Argument">
            <stringProp name="Argument.name">kafka_server</stringProp>
            <stringProp name="Argument.value">node6:29096</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="zoo1_connect" elementType="Argument">
            <stringProp name="Argument.name">zoo1_connect</stringProp>
            <stringProp name="Argument.value">node1:2181,node2:2181,node9:2181/linkoopdb/luyao</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${mysql_url}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${umysql}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">9999999999</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">000</stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">number</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable topic" enabled="true">
        <stringProp name="maximumValue">200000</stringProp>
        <stringProp name="minimumValue">0</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed">abcdefg</stringProp>
        <stringProp name="variableName">num</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300 增加FileSystem connector" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试csv格式" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试基本参数" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 drop-删除表" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists S_file_source_001;
drop stream if exists S_file_source_002;
drop stream if exists S_file_source_003;
drop stream if exists S_file_source_004;
drop stream if exists S_file_source_005;
drop stream if exists S_file_source_006;
drop stream if exists S_file_source_007;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 create-创建stream表S_file_source_001" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream S_file_source_001(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data1.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;true&apos;,
 &apos;ignore-parse-errors&apos;:&apos;true&apos;
)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 create-创建stream表S_file_source_002" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream S_file_source_002(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data1.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;true&apos;,
 &apos;ignore-parse-errors&apos;:&apos;false&apos;
)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 create-创建stream表S_file_source_003" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream S_file_source_003(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;true&apos;,
 &apos;ignore-parse-errors&apos;:&apos;false&apos;
)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 create-创建stream表S_file_source_004" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream S_file_source_004(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data1.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;ignore-parse-errors&apos;:&apos;false&apos;
)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 create-创建stream表S_file_source_006" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream S_file_source_006(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data4.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;separator&apos;:&apos;,&apos;,
 &apos;quoteChar&apos;:&apos;*&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;ignore-parse-errors&apos;:&apos;false&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 create-创建stream表S_file_source_007" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream S_file_source_007(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data3.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;ignore-parse-errors&apos;:&apos;false&apos;
 );</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-TC-001_测试S_file_source_001的参数separator,ignore-first-line=true,ignore-parse-errors=true" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from S_file_source_001 where 1=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-TC-002 E_测试S_file_source_002的参数separator,ignore-first-line=true,ignore-parse-errors=false" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from S_file_source_002</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-TC-003 E_测试S_file_source_003的参数separator异常情况" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from S_file_source_003</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-TC-004 E_测试S_file_source_004参数ignore-first-line=false异常情况" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from S_file_source_004</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-TC-005 E_测试S_file_source_005参数quoteChar异常情况" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">create stream S_file_source_005(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data4.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;commentPrefix&apos;:&apos;#&apos;,
 &apos;separator&apos;:&apos;,&apos;,
 &apos;quoteChar&apos;:&apos;**&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;ignore-parse-errors&apos;:&apos;false&apos;
)</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-TC-006_测试S_file_source_006参数quoteChar" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from S_file_source_006
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="917795356">ID	NAME	AGE	TIME1
1	&apos;na,me&apos;	28	2019-10-10 10:10:10.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300 -TC-007_测试S_file_source_007参数commentPrefix" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from S_file_source_007
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-343191803">ID	NAME	AGE	TIME1
1	&apos;mary1&apos;	78	2020-02-17 10:10:24.0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">8</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试watermark" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试eventtime" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试tumble" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试tumble_periodic-ascending" enabled="true"/>
                  <hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试tumble_periodic-ascending_ drop所有表" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">drop stream if exists S_file_source_tumble_001;
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试tumble_periodic-ascending_ 创建stream表S_file_source_tumble_001" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_tumble_001(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
)</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试tumble_periodic-ascending-TC-001_验证tumble是否执行" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT SUM(age), TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wStart
	, TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wEnd
FROM S_file_source_tumble_001
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR);</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="873034550">C1	WSTART	WEND
62	2020-02-17 10:00:00.0	2020-02-17 11:00:00.0
57	2020-02-17 11:00:00.0	2020-02-17 12:00:00.0
45	2020-02-17 12:00:00.0	2020-02-17 13:00:00.0
39	2020-02-17 13:00:00.0	2020-02-17 14:00:00.0</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试tumble_periodic-bounded" enabled="true"/>
                  <hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试tumble_periodic-bounded_ drop所有表" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">drop stream if exists S_file_source_tumble_002;
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试tumble_periodic-bounded-创建stream表S_file_source_tumble_002" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_tumble_002(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
&apos;watermarksDelay&apos;:&apos;3600000&apos;
)
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试tumble_periodic-bounded-TC-001 E_验证创建表时watermarksDelay 是否为必填" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_tumble_003(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;

)
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="2114812446">Invalid SQL statement. Could not find required property &apos;watermarksDelay&apos; in statement [create stream S_file_source_tumble_003(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;

)
]</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">true</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试tumble_periodic-bounded-TC-002 _测试periodic-bounded是否正常工作" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT SUM(age), TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wStart
	, TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wEnd
FROM S_file_source_tumble_002
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; HOUR);</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="873034550">C1	WSTART	WEND
62	2020-02-17 10:00:00.0	2020-02-17 11:00:00.0
57	2020-02-17 11:00:00.0	2020-02-17 12:00:00.0
45	2020-02-17 12:00:00.0	2020-02-17 13:00:00.0
39	2020-02-17 13:00:00.0	2020-02-17 14:00:00.0</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试tumble_custom" enabled="false"/>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试hop" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试hop_periodic-ascending" enabled="true"/>
                  <hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试hop_periodic-ascending_ drop所有表" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">drop stream if exists S_file_source_hop_001;
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试hop_periodic-ascending_ 创建stream表S_file_source_hop_001" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">
create stream S_file_source_hop_001(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
)</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试hop_periodic-ascending-TC-001_验证hop是否执行" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT SUM(age), hop_START(myrowtime, INTERVAL &apos;1&apos; HOUR, INTERVAL &apos;2&apos; HOUR) AS wStart
	, HOP_END(myrowtime,  INTERVAL &apos;1&apos; HOUR, INTERVAL &apos;2&apos; HOUR) AS wEnd
FROM S_file_source_hop_001
GROUP BY hop(myrowtime,  INTERVAL &apos;1&apos; HOUR, INTERVAL &apos;2&apos; HOUR);</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="-336301306">C1	WSTART	WEND
62	2020-02-17 09:00:00.0	2020-02-17 11:00:00.0
119	2020-02-17 10:00:00.0	2020-02-17 12:00:00.0
102	2020-02-17 11:00:00.0	2020-02-17 13:00:00.0
84	2020-02-17 12:00:00.0	2020-02-17 14:00:00.0
39	2020-02-17 13:00:00.0	2020-02-17 15:00:00.0
</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试hop_periodic-bounded" enabled="true"/>
                  <hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试hop_periodic-bounded-删除所有表" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">drop stream if exists S_file_source_hop_002;
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试hop_periodic-bounded-创建stream表S_file_source_hop_002" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_hop_002(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,

&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
&apos;watermarksDelay&apos;:&apos;60000&apos;
)
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试hop_periodic-bounded-TC-001 E_验证创建表时watermarksDelay 是否为必填" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_hop_003(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;: &apos;source&apos;,
&apos;connector&apos;: &apos;jdbc&apos;, 
&apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
&apos;dbUrl&apos;: &apos;${dburl}&apos;,
&apos;username&apos;: &apos;${udb}&apos;,
&apos;password&apos;: &apos;${udb_password}&apos;, 
&apos;tableName&apos;: &apos;T_jdbc_source_hop_02&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;
);
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="2097221526">Invalid SQL statement. Could not find required property &apos;watermarksDelay&apos; in statement [create stream S_file_source_hop_003(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;: &apos;source&apos;,
&apos;connector&apos;: &apos;jdbc&apos;, 
&apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
&apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node7:9117/ldb&apos;,
&apos;username&apos;: &apos;admin&apos;,
&apos;password&apos;: &apos;123456&apos;, 
&apos;tableName&apos;: &apos;T_jdbc_source_hop_02&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;
)]</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">true</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试hop_periodic-bounded-TC-002 _测试periodic-bounded是否正常工作" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT SUM(age), hop_START(myrowtime, INTERVAL &apos;1&apos; HOUR, INTERVAL &apos;2&apos; HOUR) AS wStart
	, HOP_END(myrowtime,  INTERVAL &apos;1&apos; HOUR, INTERVAL &apos;2&apos; HOUR) AS wEnd
FROM S_file_source_hop_002
GROUP BY hop(myrowtime,  INTERVAL &apos;1&apos; HOUR, INTERVAL &apos;2&apos; HOUR);</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="-336301306">C1	WSTART	WEND
62	2020-02-17 09:00:00.0	2020-02-17 11:00:00.0
119	2020-02-17 10:00:00.0	2020-02-17 12:00:00.0
102	2020-02-17 11:00:00.0	2020-02-17 13:00:00.0
84	2020-02-17 12:00:00.0	2020-02-17 14:00:00.0
39	2020-02-17 13:00:00.0	2020-02-17 15:00:00.0
</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试hop_custom" enabled="false"/>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试session" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试session_periodic-ascending" enabled="true"/>
                  <hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试session_periodic-ascending_ drop所有表" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">drop stream if exists S_file_source_session_001;
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试session_periodic-ascending_ 创建stream表S_file_source_session_001" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_session_001(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
);
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试session_periodic-ascending-TC-001_验证session是否执行" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT SUM(age), session_START(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wStart
	, session_END(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wEnd
FROM S_file_source_session_001
GROUP BY session(myrowtime, INTERVAL &apos;1&apos; HOUR);</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="594425281">C1	WSTART	WEND
119	2020-02-17 10:20:20.0	2020-02-17 12:12:09.0
84	2020-02-17 12:50:09.0	2020-02-17 14:20:49.0</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试session_periodic-bounded" enabled="true"/>
                  <hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试session_periodic-bounded_ 删除所有表" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Update Statement</stringProp>
                      <stringProp name="query">drop stream if exists S_file_source_session_002;
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试session_periodic-bounded-创建stream表S_file_source_session_002" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_session_002(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
&apos;watermarksDelay&apos;:&apos;3600000&apos;
)

</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试session_periodic-bounded-TC-001 E_验证创建表时watermarksDelay 是否为必填" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">create stream S_file_source_session_003(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;
)
</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="1190490499">Invalid SQL statement. Could not find required property &apos;watermarksDelay&apos; in statement [create stream S_file_source_session_003(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
&apos;rowtime&apos;:&apos;time1.myrowtime&apos;,
&apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;
)
]</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">true</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试session_periodic-bounded-TC-002 _测试periodic-bounded是否正常工作" enabled="true">
                      <stringProp name="dataSource">${u1}</stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT SUM(age), session_START(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wStart
	, session_END(myrowtime, INTERVAL &apos;1&apos; HOUR) AS wEnd
FROM S_file_source_session_002
GROUP BY session(myrowtime, INTERVAL &apos;1&apos; HOUR);</stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="variableNames"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="594425281">C1	WSTART	WEND
119	2020-02-17 10:20:20.0	2020-02-17 12:12:09.0
84	2020-02-17 12:50:09.0	2020-02-17 14:20:49.0</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="869 ISQL300-测试session_custom" enabled="false"/>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试proctime" enabled="false"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试proctime_ drop所有表" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists S_file_source_proctime_001;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试proctime_ 创建stream表S_jdbc_source_proctime_01" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create stream S_file_source_proctime_001(
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/filesystem/data2.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
 &apos;separator&apos;:&apos;|&apos;,
 &apos;ignore-first-line&apos;:&apos;false&apos;,
 &apos;proctime&apos;:&apos;proctime1&apos;
)</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试proctime-TC-001_验证proctime是否执行" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT  count(age) FROM S_file_source_proctime_001 GROUP BY TUMBLE(proctime1, INTERVAL &apos;1&apos; minute);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="869 ISQL300-测试proctime-TC-001_验证proctime是否执行" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 80000;
SELECT  SUM(age) FROM S_file_source_proctime_001 GROUP BY id,TUMBLE(proctime1, INTERVAL &apos;1&apos; minute);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
