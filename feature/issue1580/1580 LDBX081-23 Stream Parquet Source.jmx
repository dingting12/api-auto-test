<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4db连接池</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb" elementType="Argument">
            <stringProp name="Argument.name">udb</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb_password" elementType="Argument">
            <stringProp name="Argument.name">udb_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="umysql" elementType="Argument">
            <stringProp name="Argument.name">umysql</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql用户</stringProp>
          </elementProp>
          <elementProp name="umysql_password" elementType="Argument">
            <stringProp name="Argument.name">umysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql密码</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4密码</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4 mysql连接池</stringProp>
          </elementProp>
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.71)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node2</stringProp>
          </elementProp>
          <elementProp name="filePath" elementType="Argument">
            <stringProp name="Argument.name">filePath</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\window\winno.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic" elementType="Argument">
            <stringProp name="Argument.name">topic</stringProp>
            <stringProp name="Argument.value">decision_tree_sink1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="node4" elementType="Argument">
            <stringProp name="Argument.name">node4</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.73)}</stringProp>
            <stringProp name="Argument.desc">node4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(port,9105)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl" elementType="Argument">
            <stringProp name="Argument.name">dburl</stringProp>
            <stringProp name="Argument.value">jdbc:linkoopdb:tcp://node7:9117/ldb</stringProp>
            <stringProp name="Argument.desc">db的url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql?useSSL=false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl1" elementType="Argument">
            <stringProp name="Argument.name">dburl1</stringProp>
            <stringProp name="Argument.value">jdbc:linkoopdb:tcp://node7:9117/ldb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_server" elementType="Argument">
            <stringProp name="Argument.name">kafka_server</stringProp>
            <stringProp name="Argument.value">node6:29096</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="zoo1_connect" elementType="Argument">
            <stringProp name="Argument.name">zoo1_connect</stringProp>
            <stringProp name="Argument.value">node1:2181,node2:2181,node9:2181/linkoopdb/luyao</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${mysql_url}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${umysql}</stringProp>
        <stringProp name="password">123456</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">9999999999</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">000</stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">number</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable topic" enabled="true">
        <stringProp name="maximumValue">200000</stringProp>
        <stringProp name="minimumValue">0</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed">abcdefg</stringProp>
        <stringProp name="variableName">num</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 Stream Parquet Source" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 窗口函数" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 event time" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="创建数据" enabled="false"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_删除表" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop table if exists T_parquet_tumble_as_001;
drop table if exists T_parquet_tumble_as_002;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_创建DB表T_parquet_tumble_as_001" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create table  T_parquet_tumble_as_001(
id int,
name varchar(30),
age int,
time1 timestamp
);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_创建DB外部表T_parquet_tumble_as_002" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">create EXTERNAL table   T_parquet_tumble_as_002(
id int,
name varchar(30),
age int,
time1 timestamp
)
LOCATION (&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;) FORMAT &apos;parquet&apos;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_插入数据到DB表T_parquet_tumble_as_001" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into T_parquet_tumble_as_001 values
(1,&apos;alice1&apos;,29,&apos;2020-02-23 11:01:01&apos;),
(2,&apos;alice2&apos;,12,&apos;2020-02-23 12:03:01&apos;),
(3,&apos;alice3&apos;,23,&apos;2020-02-23 12:30:30&apos;),
(4,&apos;alice4&apos;,49,&apos;2020-02-23 13:54:34&apos;),
(5,&apos;alice5&apos;,38,&apos;2020-02-23 14:01:58&apos;),
(6,&apos;alice6&apos;,25,&apos;2020-02-23 15:24:06&apos;),
(7,&apos;alice7&apos;,27,&apos;2020-02-23 15:56:43&apos;),
(8,&apos;alice8&apos;,67,&apos;2020-02-23 16:44:56&apos;),
(9,&apos;alice9&apos;,19,&apos;2020-02-23 16:56:01&apos;);


</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_插入数据到外部表T_parquet_tumble_as_001" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into T_parquet_tumble_as_002 select * from T_parquet_tumble_as_001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 tumble" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23-测试tumble_periodic-ascending" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_删除表" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists S_parquet_tumble_as_001;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_创建stream表S_parquet_tumble_as_001" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_tumble_as_001 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
    &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble TC-001-查询数据" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
select * from S_parquet_tumble_as_001</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble TC-002_测试tumble periodic-ascending是否正常执行" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
 SELECT sum(age),
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; hour),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; hour)
FROM S_parquet_tumble_as_001 
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; hour);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23-测试tumble_periodic-bounded" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_删除表" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists S_parquet_tumble_as_002;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_创建stream表S_parquet_tumble_as_002" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_tumble_as_002 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
&apos;watermarksDelay&apos;:&apos;3600000&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble TC-001 E_验证创建表时watermarksDelay 是否为必填" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_tumble_as_003 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble TC-002_测试tumbleperiodic-bounded是否正常执行" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
 SELECT sum(age),
TUMBLE_START(myrowtime, INTERVAL &apos;1&apos; hour),
TUMBLE_END(myrowtime, INTERVAL &apos;1&apos; hour)
FROM S_parquet_tumble_as_002 
GROUP BY TUMBLE(myrowtime, INTERVAL &apos;1&apos; hour);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23-测试tumble_custom" enabled="false"/>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 hop" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23-测试hop_periodic-ascending" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop_删除表" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists S_parquet_hop_as_001;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop_创建stream表S_parquet_hop_as_001" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_hop_as_001 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
    &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop TC-001-查询数据" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
select * from S_parquet_hop_as_001</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop TC-002_测试hop periodic-ascending是否正常执行" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
 SELECT sum(age),
hop_START(myrowtime, INTERVAL &apos;1&apos; hour,INTERVAL &apos;1&apos; hour),
hop_END(myrowtime, INTERVAL &apos;1&apos; hour,INTERVAL &apos;1&apos; hour)
FROM S_parquet_hop_as_001 
GROUP BY hop(myrowtime, INTERVAL &apos;1&apos; hour,INTERVAL &apos;1&apos; hour);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23-测试hop_periodic-bounded" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop_删除表" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists S_parquet_hop_as_002;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop_创建stream表S_parquet_hop_as_002" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_hop_as_002 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
&apos;watermarksDelay&apos;:&apos;3600000&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop TC-001 E_验证创建表时watermarksDelay 是否为必填" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_hop_as_003 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-hop TC-002_测试hop periodic-bounded是否正常执行" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
 SELECT sum(age),
hop_START(myrowtime, INTERVAL &apos;1&apos; hour, INTERVAL &apos;1&apos; hour),
hop_END(myrowtime, INTERVAL &apos;1&apos; hour, INTERVAL &apos;1&apos; hour)
FROM S_parquet_hop_as_002 
GROUP BY hop(myrowtime, INTERVAL &apos;1&apos; hour, INTERVAL &apos;1&apos; hour);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 session" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23-测试session_periodic-ascending" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session_删除表" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists S_parquet_session_as_001;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session_创建stream表S_parquet_session_as_001" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_session_as_001 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
    &apos;rowtime.watermarks.type&apos;:&apos;periodic-ascending&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session TC-001-查询数据" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
select * from S_parquet_session_as_001</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session TC-002_测试session periodic-ascending是否正常执行" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
 SELECT sum(age),
session_START(myrowtime, INTERVAL &apos;1&apos; hour),
session_END(myrowtime, INTERVAL &apos;1&apos; hour)
FROM S_parquet_hop_as_001 
GROUP BY session(myrowtime, INTERVAL &apos;1&apos; hour);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23-测试session_periodic-bounded" enabled="true"/>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session_删除表" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">drop stream if exists S_parquet_session_as_002;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session_创建stream表S_parquet_session_as_002" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_session_as_002 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;,
&apos;watermarksDelay&apos;:&apos;3600000&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session TC-001 E_验证创建表时watermarksDelay 是否为必填" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">CREATE stream S_parquet_session_as_003 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;rowtime&apos;: &apos;time1.myrowtime&apos;, 
  &apos;rowtime.watermarks.type&apos;:&apos;periodic-bounded&apos;
);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-session TC-002_测试session periodic-bounded是否正常执行" enabled="true">
                    <stringProp name="dataSource">${u1}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
 SELECT sum(age),
session_START(myrowtime, INTERVAL &apos;1&apos; hour),
session_END(myrowtime, INTERVAL &apos;1&apos; hour)
FROM S_parquet_session_as_002 
GROUP BY session(myrowtime, INTERVAL &apos;1&apos; hour);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 proc time" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1580 LDBX081-23 tumble" enabled="true"/>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_删除表" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">drop stream if exists S_parquet_tumble_proc_001;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble_创建stream表S_parquet_tumble_proc_001" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">CREATE stream S_parquet_tumble_proc_001 (
id int,
name varchar(30),
age int,
time1 timestamp
)properties(
    &apos;type&apos;:&apos;source&apos;,
    &apos;connector&apos;:&apos;filesystem&apos;,
    &apos;path&apos;:&apos;hdfs://node3/node7/db2.2/stream/data/parquet/data1&apos;,
    &apos;format&apos;:&apos;parquet&apos;,
    &apos;proctime&apos;:&apos;proctime1&apos;
);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble TC-001-查询数据" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 80000;
select * from S_parquet_tumble_proc_001</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="1580 LDBX081-23-tumble TC-002_测试tumble periodic-ascending是否正常执行" enabled="true">
                  <stringProp name="dataSource">${u1}</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query"> set session STREAM_QUERY_LATENCY_MILLS 150000;
 SELECT sum(age),
TUMBLE_START(proctime1, INTERVAL &apos;2&apos; minute),
TUMBLE_END(proctime1, INTERVAL &apos;2&apos; minute)
FROM S_parquet_tumble_proc_001 
GROUP BY TUMBLE(proctime1, INTERVAL &apos;2&apos; minute);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
